

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Jul 04 05:14:42 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  010C                     	;# 
    93  010E                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0117                     	;# 
   101  0118                     	;# 
   102  0119                     	;# 
   103  011A                     	;# 
   104  011B                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  018C                     	;# 
   108  018E                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019C                     	;# 
   123  019D                     	;# 
   124  019E                     	;# 
   125  019F                     	;# 
   126  020C                     	;# 
   127  020E                     	;# 
   128  0211                     	;# 
   129  0211                     	;# 
   130  0212                     	;# 
   131  0212                     	;# 
   132  0213                     	;# 
   133  0213                     	;# 
   134  0214                     	;# 
   135  0214                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0216                     	;# 
   140  0216                     	;# 
   141  0217                     	;# 
   142  0217                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0293                     	;# 
   147  0294                     	;# 
   148  0295                     	;# 
   149  0295                     	;# 
   150  0296                     	;# 
   151  0298                     	;# 
   152  0298                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029C                     	;# 
   157  029D                     	;# 
   158  029E                     	;# 
   159  0311                     	;# 
   160  0311                     	;# 
   161  0312                     	;# 
   162  0313                     	;# 
   163  0318                     	;# 
   164  0318                     	;# 
   165  0319                     	;# 
   166  031A                     	;# 
   167  038C                     	;# 
   168  038E                     	;# 
   169  0391                     	;# 
   170  0392                     	;# 
   171  0393                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  041C                     	;# 
   181  041D                     	;# 
   182  041E                     	;# 
   183  0FE4                     	;# 
   184  0FE5                     	;# 
   185  0FE6                     	;# 
   186  0FE7                     	;# 
   187  0FE8                     	;# 
   188  0FE9                     	;# 
   189  0FEA                     	;# 
   190  0FEB                     	;# 
   191  0FED                     	;# 
   192  0FEE                     	;# 
   193  0FEF                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000E                     	;# 
   208  0011                     	;# 
   209  0012                     	;# 
   210  0013                     	;# 
   211  0015                     	;# 
   212  0016                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001C                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  008C                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0095                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009B                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  010C                     	;# 
   239  010E                     	;# 
   240  0111                     	;# 
   241  0112                     	;# 
   242  0113                     	;# 
   243  0114                     	;# 
   244  0115                     	;# 
   245  0116                     	;# 
   246  0117                     	;# 
   247  0118                     	;# 
   248  0119                     	;# 
   249  011A                     	;# 
   250  011B                     	;# 
   251  011D                     	;# 
   252  011E                     	;# 
   253  018C                     	;# 
   254  018E                     	;# 
   255  0191                     	;# 
   256  0191                     	;# 
   257  0192                     	;# 
   258  0193                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019B                     	;# 
   267  019B                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  020E                     	;# 
   274  0211                     	;# 
   275  0211                     	;# 
   276  0212                     	;# 
   277  0212                     	;# 
   278  0213                     	;# 
   279  0213                     	;# 
   280  0214                     	;# 
   281  0214                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0216                     	;# 
   286  0216                     	;# 
   287  0217                     	;# 
   288  0217                     	;# 
   289  0291                     	;# 
   290  0291                     	;# 
   291  0292                     	;# 
   292  0293                     	;# 
   293  0294                     	;# 
   294  0295                     	;# 
   295  0295                     	;# 
   296  0296                     	;# 
   297  0298                     	;# 
   298  0298                     	;# 
   299  0299                     	;# 
   300  029A                     	;# 
   301  029B                     	;# 
   302  029C                     	;# 
   303  029D                     	;# 
   304  029E                     	;# 
   305  0311                     	;# 
   306  0311                     	;# 
   307  0312                     	;# 
   308  0313                     	;# 
   309  0318                     	;# 
   310  0318                     	;# 
   311  0319                     	;# 
   312  031A                     	;# 
   313  038C                     	;# 
   314  038E                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  0393                     	;# 
   318  039A                     	;# 
   319  039C                     	;# 
   320  039D                     	;# 
   321  039E                     	;# 
   322  039F                     	;# 
   323  0415                     	;# 
   324  0416                     	;# 
   325  0417                     	;# 
   326  041C                     	;# 
   327  041D                     	;# 
   328  041E                     	;# 
   329  0FE4                     	;# 
   330  0FE5                     	;# 
   331  0FE6                     	;# 
   332  0FE7                     	;# 
   333  0FE8                     	;# 
   334  0FE9                     	;# 
   335  0FEA                     	;# 
   336  0FEB                     	;# 
   337  0FED                     	;# 
   338  0FEE                     	;# 
   339  0FEF                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000E                     	;# 
   354  0011                     	;# 
   355  0012                     	;# 
   356  0013                     	;# 
   357  0015                     	;# 
   358  0016                     	;# 
   359  0016                     	;# 
   360  0017                     	;# 
   361  0018                     	;# 
   362  0019                     	;# 
   363  001A                     	;# 
   364  001B                     	;# 
   365  001C                     	;# 
   366  001E                     	;# 
   367  001F                     	;# 
   368  008C                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  010C                     	;# 
   385  010E                     	;# 
   386  0111                     	;# 
   387  0112                     	;# 
   388  0113                     	;# 
   389  0114                     	;# 
   390  0115                     	;# 
   391  0116                     	;# 
   392  0117                     	;# 
   393  0118                     	;# 
   394  0119                     	;# 
   395  011A                     	;# 
   396  011B                     	;# 
   397  011D                     	;# 
   398  011E                     	;# 
   399  018C                     	;# 
   400  018E                     	;# 
   401  0191                     	;# 
   402  0191                     	;# 
   403  0192                     	;# 
   404  0193                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  0199                     	;# 
   411  019A                     	;# 
   412  019B                     	;# 
   413  019B                     	;# 
   414  019C                     	;# 
   415  019D                     	;# 
   416  019E                     	;# 
   417  019F                     	;# 
   418  020C                     	;# 
   419  020E                     	;# 
   420  0211                     	;# 
   421  0211                     	;# 
   422  0212                     	;# 
   423  0212                     	;# 
   424  0213                     	;# 
   425  0213                     	;# 
   426  0214                     	;# 
   427  0214                     	;# 
   428  0215                     	;# 
   429  0215                     	;# 
   430  0215                     	;# 
   431  0216                     	;# 
   432  0216                     	;# 
   433  0217                     	;# 
   434  0217                     	;# 
   435  0291                     	;# 
   436  0291                     	;# 
   437  0292                     	;# 
   438  0293                     	;# 
   439  0294                     	;# 
   440  0295                     	;# 
   441  0295                     	;# 
   442  0296                     	;# 
   443  0298                     	;# 
   444  0298                     	;# 
   445  0299                     	;# 
   446  029A                     	;# 
   447  029B                     	;# 
   448  029C                     	;# 
   449  029D                     	;# 
   450  029E                     	;# 
   451  0311                     	;# 
   452  0311                     	;# 
   453  0312                     	;# 
   454  0313                     	;# 
   455  0318                     	;# 
   456  0318                     	;# 
   457  0319                     	;# 
   458  031A                     	;# 
   459  038C                     	;# 
   460  038E                     	;# 
   461  0391                     	;# 
   462  0392                     	;# 
   463  0393                     	;# 
   464  039A                     	;# 
   465  039C                     	;# 
   466  039D                     	;# 
   467  039E                     	;# 
   468  039F                     	;# 
   469  0415                     	;# 
   470  0416                     	;# 
   471  0417                     	;# 
   472  041C                     	;# 
   473  041D                     	;# 
   474  041E                     	;# 
   475  0FE4                     	;# 
   476  0FE5                     	;# 
   477  0FE6                     	;# 
   478  0FE7                     	;# 
   479  0FE8                     	;# 
   480  0FE9                     	;# 
   481  0FEA                     	;# 
   482  0FEB                     	;# 
   483  0FED                     	;# 
   484  0FEE                     	;# 
   485  0FEF                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000E                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  008C                     	;# 
   515  008E                     	;# 
   516  0091                     	;# 
   517  0092                     	;# 
   518  0093                     	;# 
   519  0095                     	;# 
   520  0096                     	;# 
   521  0097                     	;# 
   522  0098                     	;# 
   523  0099                     	;# 
   524  009A                     	;# 
   525  009B                     	;# 
   526  009B                     	;# 
   527  009C                     	;# 
   528  009D                     	;# 
   529  009E                     	;# 
   530  010C                     	;# 
   531  010E                     	;# 
   532  0111                     	;# 
   533  0112                     	;# 
   534  0113                     	;# 
   535  0114                     	;# 
   536  0115                     	;# 
   537  0116                     	;# 
   538  0117                     	;# 
   539  0118                     	;# 
   540  0119                     	;# 
   541  011A                     	;# 
   542  011B                     	;# 
   543  011D                     	;# 
   544  011E                     	;# 
   545  018C                     	;# 
   546  018E                     	;# 
   547  0191                     	;# 
   548  0191                     	;# 
   549  0192                     	;# 
   550  0193                     	;# 
   551  0193                     	;# 
   552  0193                     	;# 
   553  0194                     	;# 
   554  0195                     	;# 
   555  0196                     	;# 
   556  0199                     	;# 
   557  019A                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019D                     	;# 
   562  019E                     	;# 
   563  019F                     	;# 
   564  020C                     	;# 
   565  020E                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0216                     	;# 
   578  0216                     	;# 
   579  0217                     	;# 
   580  0217                     	;# 
   581  0291                     	;# 
   582  0291                     	;# 
   583  0292                     	;# 
   584  0293                     	;# 
   585  0294                     	;# 
   586  0295                     	;# 
   587  0295                     	;# 
   588  0296                     	;# 
   589  0298                     	;# 
   590  0298                     	;# 
   591  0299                     	;# 
   592  029A                     	;# 
   593  029B                     	;# 
   594  029C                     	;# 
   595  029D                     	;# 
   596  029E                     	;# 
   597  0311                     	;# 
   598  0311                     	;# 
   599  0312                     	;# 
   600  0313                     	;# 
   601  0318                     	;# 
   602  0318                     	;# 
   603  0319                     	;# 
   604  031A                     	;# 
   605  038C                     	;# 
   606  038E                     	;# 
   607  0391                     	;# 
   608  0392                     	;# 
   609  0393                     	;# 
   610  039A                     	;# 
   611  039C                     	;# 
   612  039D                     	;# 
   613  039E                     	;# 
   614  039F                     	;# 
   615  0415                     	;# 
   616  0416                     	;# 
   617  0417                     	;# 
   618  041C                     	;# 
   619  041D                     	;# 
   620  041E                     	;# 
   621  0FE4                     	;# 
   622  0FE5                     	;# 
   623  0FE6                     	;# 
   624  0FE7                     	;# 
   625  0FE8                     	;# 
   626  0FE9                     	;# 
   627  0FEA                     	;# 
   628  0FEB                     	;# 
   629  0FED                     	;# 
   630  0FEE                     	;# 
   631  0FEF                     	;# 
   632                           
   633                           	psect	idataBANK0
   634  0E4D                     __pidataBANK0:	
   635                           
   636                           ;initializer for _HourBlink
   637  0E4D  3401               	retlw	1
   638                           
   639                           ;initializer for _day
   640  0E4E  3401               	retlw	1
   641                           
   642                           ;initializer for _dayoftheweek
   643  0E4F  3401               	retlw	1
   644                           
   645                           ;initializer for _month
   646  0E50  3401               	retlw	1
   647                           
   648                           ;initializer for _year
   649  0E51  340F               	retlw	15
   650                           
   651                           	psect	idataBANK1
   652  0FC0                     __pidataBANK1:	
   653                           
   654                           ;initializer for ___cgram
   655  0FC0  340C               	retlw	12
   656  0FC1  3412               	retlw	18
   657  0FC2  3412               	retlw	18
   658  0FC3  340C               	retlw	12
   659  0FC4  3400               	retlw	0
   660  0FC5  3400               	retlw	0
   661  0FC6  3400               	retlw	0
   662  0FC7  3400               	retlw	0
   663  0FC8  3400               	retlw	0
   664  0FC9  3404               	retlw	4
   665  0FCA  340E               	retlw	14
   666  0FCB  341F               	retlw	31
   667  0FCC  340E               	retlw	14
   668  0FCD  3404               	retlw	4
   669  0FCE  3400               	retlw	0
   670  0FCF  3400               	retlw	0
   671  0FD0  3404               	retlw	4
   672  0FD1  3404               	retlw	4
   673  0FD2  3404               	retlw	4
   674  0FD3  3404               	retlw	4
   675  0FD4  341F               	retlw	31
   676  0FD5  340E               	retlw	14
   677  0FD6  3404               	retlw	4
   678  0FD7  3400               	retlw	0
   679  0FD8  340A               	retlw	10
   680  0FD9  3415               	retlw	21
   681  0FDA  3411               	retlw	17
   682  0FDB  340A               	retlw	10
   683  0FDC  3404               	retlw	4
   684  0FDD  3400               	retlw	0
   685  0FDE  3400               	retlw	0
   686  0FDF  3400               	retlw	0
   687  0FE0  340A               	retlw	10
   688  0FE1  341F               	retlw	31
   689  0FE2  341F               	retlw	31
   690  0FE3  340E               	retlw	14
   691  0FE4  3404               	retlw	4
   692  0FE5  3400               	retlw	0
   693  0FE6  3400               	retlw	0
   694  0FE7  3400               	retlw	0
   695  0FE8  3400               	retlw	0
   696  0FE9  3400               	retlw	0
   697  0FEA  3400               	retlw	0
   698  0FEB  3400               	retlw	0
   699  0FEC  3400               	retlw	0
   700  0FED  3400               	retlw	0
   701  0FEE  3400               	retlw	0
   702  0FEF  3400               	retlw	0
   703  0FF0  3400               	retlw	0
   704  0FF1  3400               	retlw	0
   705  0FF2  3400               	retlw	0
   706  0FF3  3400               	retlw	0
   707  0FF4  3400               	retlw	0
   708  0FF5  3400               	retlw	0
   709  0FF6  3400               	retlw	0
   710  0FF7  3400               	retlw	0
   711  0FF8  3400               	retlw	0
   712  0FF9  3400               	retlw	0
   713  0FFA  3400               	retlw	0
   714  0FFB  3400               	retlw	0
   715  0FFC  3400               	retlw	0
   716  0FFD  3400               	retlw	0
   717  0FFE  3400               	retlw	0
   718  0FFF  3400               	retlw	0
   719  000B                     _INTCONbits	set	11
   720  0012                     _PIR2bits	set	18
   721  000C                     _PORTAbits	set	12
   722  000E                     _PORTC	set	14
   723  0060                     _RA0	set	96
   724  0061                     _RA1	set	97
   725  0062                     _RA2	set	98
   726  005D                     _TMR0IE	set	93
   727  005A                     _TMR0IF	set	90
   728  0095                     _OPTION_REGbits	set	149
   729  0099                     _OSCCONbits	set	153
   730  008C                     _TRISAbits	set	140
   731  008E                     _TRISC	set	142
   732  008E                     _TRISCbits	set	142
   733  018C                     _ANSELA	set	396
   734  018E                     _ANSELC	set	398
   735  0211                     _SSP1BUF	set	529
   736  0215                     _SSP1CON1	set	533
   737  0215                     _SSP1CON1bits	set	533
   738  0216                     _SSP1CON2bits	set	534
   739  0217                     _SSP1CON3bits	set	535
   740  0213                     _SSP1MSK	set	531
   741  0214                     _SSP1STATbits	set	532
   742  0212                     _SSPADD	set	530
   743                           
   744                           	psect	stringtext
   745  0700                     __pstringtext:	
   746  0700                     __stringdata:	
   747  0700                     STR_14:	
   748  0700  3469               	retlw	105	;'i'
   749  0701  3420               	retlw	32	;' '
   750  0702  346D               	retlw	109	;'m'
   751  0703  3461               	retlw	97	;'a'
   752  0704  346C               	retlw	108	;'l'
   753  0705  3475               	retlw	117	;'u'
   754  0706  3420               	retlw	32	;' '
   755  0707  344C               	retlw	76	;'L'
   756  0708  3461               	retlw	97	;'a'
   757  0709  3472               	retlw	114	;'r'
   758  070A  3469               	retlw	105	;'i'
   759  070B  3463               	retlw	99	;'c'
   760  070C  3475               	retlw	117	;'u'
   761  070D  3420               	retlw	32	;' '
   762  070E  343A               	retlw	58	;':'
   763  070F  3429               	retlw	41	;')'
   764  0710  3400               	retlw	0
   765  0711                     STR_13:	
   766  0711  3453               	retlw	83	;'S'
   767  0712  3461               	retlw	97	;'a'
   768  0713  346C               	retlw	108	;'l'
   769  0714  3465               	retlw	101	;'e'
   770  0715  3420               	retlw	32	;' '
   771  0716  3476               	retlw	118	;'v'
   772  0717  346F               	retlw	111	;'o'
   773  0718  346C               	retlw	108	;'l'
   774  0719  3469               	retlw	105	;'i'
   775  071A  3420               	retlw	32	;' '
   776  071B  345A               	retlw	90	;'Z'
   777  071C  3461               	retlw	97	;'a'
   778  071D  346E               	retlw	110	;'n'
   779  071E  3475               	retlw	117	;'u'
   780  071F  3400               	retlw	0
   781  0720                     STR_5:	
   782  0720  3457               	retlw	87	;'W'
   783  0721  3465               	retlw	101	;'e'
   784  0722  3464               	retlw	100	;'d'
   785  0723  3420               	retlw	32	;' '
   786  0724  3400               	retlw	0
   787  0725                     STR_4:	
   788  0725  3454               	retlw	84	;'T'
   789  0726  3475               	retlw	117	;'u'
   790  0727  3465               	retlw	101	;'e'
   791  0728  3420               	retlw	32	;' '
   792  0729  3400               	retlw	0
   793  072A                     STR_7:	
   794  072A  3446               	retlw	70	;'F'
   795  072B  3472               	retlw	114	;'r'
   796  072C  3469               	retlw	105	;'i'
   797  072D  3420               	retlw	32	;' '
   798  072E  3400               	retlw	0
   799  072F                     STR_3:	
   800  072F  344D               	retlw	77	;'M'
   801  0730  346F               	retlw	111	;'o'
   802  0731  346E               	retlw	110	;'n'
   803  0732  3420               	retlw	32	;' '
   804  0733  3400               	retlw	0
   805  0734                     STR_9:	
   806  0734  3453               	retlw	83	;'S'
   807  0735  3475               	retlw	117	;'u'
   808  0736  346E               	retlw	110	;'n'
   809  0737  3420               	retlw	32	;' '
   810  0738  3400               	retlw	0
   811  0739                     STR_8:	
   812  0739  3453               	retlw	83	;'S'
   813  073A  3461               	retlw	97	;'a'
   814  073B  3474               	retlw	116	;'t'
   815  073C  3420               	retlw	32	;' '
   816  073D  3400               	retlw	0
   817  073E                     STR_6:	
   818  073E  3454               	retlw	84	;'T'
   819  073F  3468               	retlw	104	;'h'
   820  0740  3475               	retlw	117	;'u'
   821  0741  3420               	retlw	32	;' '
   822  0742  3400               	retlw	0
   823  0743                     STR_10:	
   824  0743  342E               	retlw	46	;'.'
   825  0744  3400               	retlw	0
   826  0745                     STR_1:	
   827  0745  343A               	retlw	58	;':'
   828  0746  3400               	retlw	0
   829  0747                     STR_16:	
   830  0747  343C               	retlw	60	;'<'
   831  0748  3400               	retlw	0
   832  0749                     STR_15:	
   833  0749  343E               	retlw	62	;'>'
   834  074A  3400               	retlw	0
   835  074B                     __end_of__stringdata:	
   836                           
   837                           ; #config settings
   838  0000                     
   839                           	psect	cinit
   840  0037                     start_initialization:	
   841  0037                     __initialization:	
   842                           
   843                           ; Clear objects allocated to COMMON
   844  0037  01FB               	clrf	__pbssCOMMON& (0+127)
   845                           
   846                           ; Clear objects allocated to BANK0
   847  0038  303D               	movlw	low __pbssBANK0
   848  0039  0084               	movwf	4
   849  003A  3000               	movlw	high __pbssBANK0
   850  003B  0085               	movwf	5
   851  003C  300E               	movlw	14
   852  003D  3187  27F9  3180   	fcall	clear_ram0
   853                           
   854                           ; Initialize objects allocated to BANK0
   855  0040  304D               	movlw	low __pidataBANK0
   856  0041  0084               	movwf	4
   857  0042  308E               	movlw	(high __pidataBANK0)| (0+128)
   858  0043  0085               	movwf	5
   859  0044  304B               	movlw	low __pdataBANK0
   860  0045  0086               	movwf	6
   861  0046  3000               	movlw	high __pdataBANK0
   862  0047  0087               	movwf	7
   863  0048  3005               	movlw	5
   864  0049  318E  2658  3180   	fcall	init_ram
   865                           
   866                           ; Initialize objects allocated to BANK1
   867  004C  30C0               	movlw	low __pidataBANK1
   868  004D  0084               	movwf	4
   869  004E  308F               	movlw	(high __pidataBANK1)| (0+128)
   870  004F  0085               	movwf	5
   871  0050  30A0               	movlw	low __pdataBANK1
   872  0051  0086               	movwf	6
   873  0052  3000               	movlw	high __pdataBANK1
   874  0053  0087               	movwf	7
   875  0054  3040               	movlw	64
   876  0055  318E  2658         	fcall	init_ram
   877  0057                     end_of_initialization:	
   878                           ;End of C runtime variable initialization code
   879                           
   880  0057                     __end_of__initialization:	
   881  0057  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   882  0058  0020               	movlb	0
   883  0059  3180  285B         	ljmp	_main	;jump to C main() function
   884                           
   885                           	psect	bssCOMMON
   886  007B                     __pbssCOMMON:	
   887  007B                     _I2C1_STATE:	
   888  007B                     	ds	1
   889                           
   890                           	psect	bssBANK0
   891  003D                     __pbssBANK0:	
   892  003D                     LCDWriteInt@F2720:	
   893  003D                     	ds	5
   894  0042                     _CounterRefreshTime:	
   895  0042                     	ds	2
   896  0044                     _Timer0Count:	
   897  0044                     	ds	2
   898  0046                     _SetUpON:	
   899  0046                     	ds	1
   900  0047                     _TimeRefresh:	
   901  0047                     	ds	1
   902  0048                     _hours:	
   903  0048                     	ds	1
   904  0049                     _minutes:	
   905  0049                     	ds	1
   906  004A                     _seconds:	
   907  004A                     	ds	1
   908                           
   909                           	psect	dataBANK0
   910  004B                     __pdataBANK0:	
   911  004B                     _HourBlink:	
   912  004B                     	ds	1
   913  004C                     _day:	
   914  004C                     	ds	1
   915  004D                     _dayoftheweek:	
   916  004D                     	ds	1
   917  004E                     _month:	
   918  004E                     	ds	1
   919  004F                     _year:	
   920  004F                     	ds	1
   921                           
   922                           	psect	dataBANK1
   923  00A0                     __pdataBANK1:	
   924  00A0                     ___cgram:	
   925  00A0                     	ds	64
   926                           
   927                           	psect	clrtext
   928  07F9                     clear_ram0:	
   929                           ;	Called with FSR0 containing the base address, and
   930                           ;	WREG with the size to clear
   931                           
   932  07F9  0064               	clrwdt	;clear the watchdog before getting into this loop
   933  07FA                     clrloop0:	
   934  07FA  0180               	clrf	0	;clear RAM location pointed to by FSR
   935  07FB  3101               	addfsr 0,1
   936  07FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   937  07FD  2FFA               	goto	clrloop0	;have we reached the end yet?
   938  07FE  3400               	retlw	0	;all done for this memory range, return
   939                           
   940                           	psect	inittext
   941  0E58                     init_ram:	
   942  0E58  00FE               	movwf	126
   943  0E59                     initloop:	
   944  0E59  0012               	moviw fsr0++
   945  0E5A  001E               	movwi fsr1++
   946  0E5B  0BFE               	decfsz	126,f
   947  0E5C  2E59               	goto	initloop
   948  0E5D  3400               	retlw	0
   949                           
   950                           	psect	cstackCOMMON
   951  0070                     __pcstackCOMMON:	
   952  0070                     ?_i2c_Start:	
   953  0070                     ?_i2c_Stop:	
   954                           ; 0 bytes @ 0x0
   955                           
   956  0070                     ?_i2c_sendNACK:	
   957                           ; 0 bytes @ 0x0
   958                           
   959  0070                     ?_SetUpDevice:	
   960                           ; 0 bytes @ 0x0
   961                           
   962  0070                     ?_LCDInit:	
   963                           ; 0 bytes @ 0x0
   964                           
   965  0070                     ?_i2c_init:	
   966                           ; 0 bytes @ 0x0
   967                           
   968  0070                     ?_LCDBusyLoop:	
   969                           ; 0 bytes @ 0x0
   970                           
   971  0070                     ?_DS1307StartOsc:	
   972                           ; 0 bytes @ 0x0
   973                           
   974  0070                     ?_main:	
   975                           ; 0 bytes @ 0x0
   976                           
   977  0070                     ?_ISRRoutine:	
   978                           ; 0 bytes @ 0x0
   979                           
   980  0070                     ??_ISRRoutine:	
   981                           ; 0 bytes @ 0x0
   982                           
   983  0070                     ?_i2c_waitIDLE:	
   984                           ; 0 bytes @ 0x0
   985                           
   986  0070                     ?_i2c_Write:	
   987                           ; 0 bytes @ 0x0
   988                           
   989  0070                     ?_i2c_readByte:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     ?_DS1307ReadDataFrom:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ?_DS1307GetSeconds:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ?_DS1307GetMinutes:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ?_DS1307GetHours:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ?_DS1307GetDayOfWeek:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_DS1307GetDay:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ?_DS1307GetMonth:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ?_DS1307GetYear:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016                           
  1017                           ; 1 bytes @ 0x0
  1018  0070                     	ds	2
  1019  0072                     ??_i2c_Start:	
  1020  0072                     ??_i2c_Stop:	
  1021                           ; 0 bytes @ 0x2
  1022                           
  1023  0072                     ??_i2c_readByte:	
  1024                           ; 0 bytes @ 0x2
  1025                           
  1026  0072                     ??_i2c_sendNACK:	
  1027                           ; 0 bytes @ 0x2
  1028                           
  1029  0072                     ??_SetUpDevice:	
  1030                           ; 0 bytes @ 0x2
  1031                           
  1032  0072                     ??_i2c_init:	
  1033                           ; 0 bytes @ 0x2
  1034                           
  1035  0072                     ??_LCDBusyLoop:	
  1036                           ; 0 bytes @ 0x2
  1037                           
  1038  0072                     ??_i2c_waitIDLE:	
  1039                           ; 0 bytes @ 0x2
  1040                           
  1041  0072                     ?___bmul:	
  1042                           ; 0 bytes @ 0x2
  1043                           
  1044  0072                     ?___awdiv:	
  1045                           ; 1 bytes @ 0x2
  1046                           
  1047  0072                     ?___awmod:	
  1048                           ; 2 bytes @ 0x2
  1049                           
  1050  0072                     ___bmul@multiplicand:	
  1051                           ; 2 bytes @ 0x2
  1052                           
  1053  0072                     ___awdiv@divisor:	
  1054                           ; 1 bytes @ 0x2
  1055                           
  1056  0072                     ___awmod@divisor:	
  1057                           ; 2 bytes @ 0x2
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x2
  1061  0072                     	ds	1
  1062  0073                     ??___bmul:	
  1063                           
  1064                           ; 0 bytes @ 0x3
  1065  0073                     	ds	1
  1066  0074                     ?_LCDByte:	
  1067  0074                     LCDByte@isdata:	
  1068                           ; 0 bytes @ 0x4
  1069                           
  1070  0074                     ___bmul@product:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     ___awdiv@dividend:	
  1074                           ; 1 bytes @ 0x4
  1075                           
  1076  0074                     ___awmod@dividend:	
  1077                           ; 2 bytes @ 0x4
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x4
  1081  0074                     	ds	1
  1082  0075                     ??_LCDByte:	
  1083  0075                     ___bmul@multiplier:	
  1084                           ; 0 bytes @ 0x5
  1085                           
  1086                           
  1087                           ; 1 bytes @ 0x5
  1088  0075                     	ds	1
  1089  0076                     ??___awdiv:	
  1090  0076                     ??___awmod:	
  1091                           ; 0 bytes @ 0x6
  1092                           
  1093                           
  1094                           ; 0 bytes @ 0x6
  1095  0076                     	ds	1
  1096  0077                     LCDByte@hn:	
  1097  0077                     ___awdiv@counter:	
  1098                           ; 1 bytes @ 0x7
  1099                           
  1100  0077                     ___awmod@counter:	
  1101                           ; 1 bytes @ 0x7
  1102                           
  1103                           
  1104                           ; 1 bytes @ 0x7
  1105  0077                     	ds	1
  1106  0078                     ??_i2c_Write:	
  1107  0078                     LCDByte@ln:	
  1108                           ; 0 bytes @ 0x8
  1109                           
  1110  0078                     i2c_Write@data:	
  1111                           ; 1 bytes @ 0x8
  1112                           
  1113  0078                     ___awdiv@sign:	
  1114                           ; 1 bytes @ 0x8
  1115                           
  1116  0078                     ___awmod@sign:	
  1117                           ; 1 bytes @ 0x8
  1118                           
  1119                           
  1120                           ; 1 bytes @ 0x8
  1121  0078                     	ds	1
  1122  0079                     ??_DS1307StartOsc:	
  1123  0079                     ??_DS1307ReadDataFrom:	
  1124                           ; 0 bytes @ 0x9
  1125                           
  1126  0079                     LCDByte@c:	
  1127                           ; 0 bytes @ 0x9
  1128                           
  1129  0079                     ___awdiv@quotient:	
  1130                           ; 1 bytes @ 0x9
  1131                           
  1132                           
  1133                           ; 2 bytes @ 0x9
  1134  0079                     	ds	1
  1135  007A                     ??_DS1307GetDayOfWeek:	
  1136  007A                     DS1307GetMinutes@u8data:	
  1137                           ; 0 bytes @ 0xA
  1138                           
  1139  007A                     DS1307GetHours@u8data:	
  1140                           ; 1 bytes @ 0xA
  1141                           
  1142  007A                     DS1307GetDay@u8data:	
  1143                           ; 1 bytes @ 0xA
  1144                           
  1145  007A                     DS1307GetMonth@u8data:	
  1146                           ; 1 bytes @ 0xA
  1147                           
  1148  007A                     DS1307GetYear@u8data:	
  1149                           ; 1 bytes @ 0xA
  1150                           
  1151  007A                     LCDByte@temp:	
  1152                           ; 1 bytes @ 0xA
  1153                           
  1154                           
  1155                           ; 1 bytes @ 0xA
  1156  007A                     	ds	1
  1157                           
  1158                           	psect	cstackBANK0
  1159  0020                     __pcstackBANK0:	
  1160  0020                     ?_LCDGotoXY:	
  1161  0020                     ?_LCDWriteInt:	
  1162                           ; 0 bytes @ 0x0
  1163                           
  1164  0020                     ?_LCDWriteString:	
  1165                           ; 0 bytes @ 0x0
  1166                           
  1167  0020                     ??_LCDInit:	
  1168                           ; 0 bytes @ 0x0
  1169                           
  1170  0020                     ?_DS1307SetTimeAndDate:	
  1171                           ; 0 bytes @ 0x0
  1172                           
  1173  0020                     DS1307SetTimeAndDate@funcm:	
  1174                           ; 0 bytes @ 0x0
  1175                           
  1176  0020                     DS1307ReadDataFrom@mem:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0020                     LCDGotoXY@y:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182  0020                     LCDWriteString@msg:	
  1183                           ; 1 bytes @ 0x0
  1184                           
  1185  0020                     LCDWriteInt@val:	
  1186                           ; 2 bytes @ 0x0
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x0
  1190  0020                     	ds	1
  1191  0021                     ??_LCDGotoXY:	
  1192  0021                     DS1307SetTimeAndDate@funcs:	
  1193                           ; 0 bytes @ 0x1
  1194                           
  1195  0021                     DS1307ReadDataFrom@u8data:	
  1196                           ; 1 bytes @ 0x1
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0x1
  1200  0021                     	ds	1
  1201  0022                     ??_LCDWriteString:	
  1202  0022                     ??_DS1307GetSeconds:	
  1203                           ; 0 bytes @ 0x2
  1204                           
  1205  0022                     ??_DS1307GetMinutes:	
  1206                           ; 0 bytes @ 0x2
  1207                           
  1208  0022                     ??_DS1307GetHours:	
  1209                           ; 0 bytes @ 0x2
  1210                           
  1211  0022                     ??_DS1307GetDay:	
  1212                           ; 0 bytes @ 0x2
  1213                           
  1214  0022                     ??_DS1307GetMonth:	
  1215                           ; 0 bytes @ 0x2
  1216                           
  1217  0022                     ??_DS1307GetYear:	
  1218                           ; 0 bytes @ 0x2
  1219                           
  1220  0022                     DS1307SetTimeAndDate@funcDayOfTheWeek:	
  1221                           ; 0 bytes @ 0x2
  1222                           
  1223  0022                     DS1307GetDayOfWeek@u8data:	
  1224                           ; 1 bytes @ 0x2
  1225                           
  1226  0022                     LCDWriteInt@field_length:	
  1227                           ; 1 bytes @ 0x2
  1228                           
  1229  0022                     LCDGotoXY@x:	
  1230                           ; 1 bytes @ 0x2
  1231                           
  1232                           
  1233                           ; 1 bytes @ 0x2
  1234  0022                     	ds	1
  1235  0023                     ??_LCDWriteInt:	
  1236  0023                     DS1307SetTimeAndDate@funcday:	
  1237                           ; 0 bytes @ 0x3
  1238                           
  1239  0023                     LCDInit@style:	
  1240                           ; 1 bytes @ 0x3
  1241                           
  1242  0023                     LCDWriteString@cc:	
  1243                           ; 1 bytes @ 0x3
  1244                           
  1245                           
  1246                           ; 1 bytes @ 0x3
  1247  0023                     	ds	1
  1248  0024                     DS1307SetTimeAndDate@funcmonth:	
  1249  0024                     LCDInit@__i:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x4
  1254  0024                     	ds	1
  1255  0025                     DS1307SetTimeAndDate@funcyear:	
  1256  0025                     DS1307GetSeconds@sec10:	
  1257                           ; 1 bytes @ 0x5
  1258                           
  1259  0025                     LCDWriteInt@str:	
  1260                           ; 1 bytes @ 0x5
  1261                           
  1262                           
  1263                           ; 5 bytes @ 0x5
  1264  0025                     	ds	1
  1265  0026                     ??_DS1307SetTimeAndDate:	
  1266  0026                     DS1307GetSeconds@u8data:	
  1267                           ; 0 bytes @ 0x6
  1268                           
  1269                           
  1270                           ; 1 bytes @ 0x6
  1271  0026                     	ds	4
  1272  002A                     LCDWriteInt@j:	
  1273                           
  1274                           ; 2 bytes @ 0xA
  1275  002A                     	ds	2
  1276  002C                     LCDWriteInt@i:	
  1277                           
  1278                           ; 2 bytes @ 0xC
  1279  002C                     	ds	2
  1280  002E                     ?_ShowTime:	
  1281  002E                     ?_ShowDate:	
  1282                           ; 0 bytes @ 0xE
  1283                           
  1284  002E                     ShowTime@y:	
  1285                           ; 0 bytes @ 0xE
  1286                           
  1287  002E                     ShowDate@y:	
  1288                           ; 1 bytes @ 0xE
  1289                           
  1290  002E                     DS1307SetTimeAndDate@values:	
  1291                           ; 1 bytes @ 0xE
  1292                           
  1293                           
  1294                           ; 8 bytes @ 0xE
  1295  002E                     	ds	1
  1296  002F                     ShowTime@clear:	
  1297  002F                     ShowDate@clear:	
  1298                           ; 1 bytes @ 0xF
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0xF
  1302  002F                     	ds	1
  1303  0030                     ShowTime@hh:	
  1304  0030                     ShowDate@dow:	
  1305                           ; 1 bytes @ 0x10
  1306                           
  1307                           
  1308                           ; 1 bytes @ 0x10
  1309  0030                     	ds	1
  1310  0031                     ShowTime@mm:	
  1311  0031                     ShowDate@dd:	
  1312                           ; 1 bytes @ 0x11
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0x11
  1316  0031                     	ds	1
  1317  0032                     ??_ShowTime:	
  1318  0032                     ShowDate@mm:	
  1319                           ; 0 bytes @ 0x12
  1320                           
  1321                           
  1322                           ; 1 bytes @ 0x12
  1323  0032                     	ds	1
  1324  0033                     ShowDate@yy:	
  1325                           
  1326                           ; 1 bytes @ 0x13
  1327  0033                     	ds	1
  1328  0034                     ??_ShowDate:	
  1329                           
  1330                           ; 0 bytes @ 0x14
  1331  0034                     	ds	1
  1332  0035                     ShowTime@x:	
  1333                           
  1334                           ; 1 bytes @ 0x15
  1335  0035                     	ds	1
  1336  0036                     DS1307SetTimeAndDate@funch:	
  1337                           
  1338                           ; 1 bytes @ 0x16
  1339  0036                     	ds	1
  1340  0037                     DS1307SetTimeAndDate@i:	
  1341  0037                     ShowDate@x:	
  1342                           ; 1 bytes @ 0x17
  1343                           
  1344                           
  1345                           ; 1 bytes @ 0x17
  1346  0037                     	ds	1
  1347  0038                     ??_main:	
  1348                           
  1349                           ; 0 bytes @ 0x18
  1350  0038                     	ds	5
  1351                           
  1352                           	psect	maintext
  1353  005B                     __pmaintext:	
  1354 ;;
  1355 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1356 ;;
  1357 ;; *************** function _main *****************
  1358 ;; Defined at:
  1359 ;;		line 73 in file "main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;		None               void
  1366 ;; Registers used:
  1367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 17F/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1375 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1376 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1377 ;;Total ram usage:        5 bytes
  1378 ;; Hardware stack levels required when called:    5
  1379 ;; This function calls:
  1380 ;;		_DS1307GetDay
  1381 ;;		_DS1307GetDayOfWeek
  1382 ;;		_DS1307GetHours
  1383 ;;		_DS1307GetMinutes
  1384 ;;		_DS1307GetMonth
  1385 ;;		_DS1307GetSeconds
  1386 ;;		_DS1307GetYear
  1387 ;;		_DS1307SetTimeAndDate
  1388 ;;		_DS1307StartOsc
  1389 ;;		_LCDByte
  1390 ;;		_LCDGotoXY
  1391 ;;		_LCDInit
  1392 ;;		_LCDWriteString
  1393 ;;		_SetUpDevice
  1394 ;;		_ShowDate
  1395 ;;		_ShowTime
  1396 ;;		_i2c_init
  1397 ;; This function is called by:
  1398 ;;		Startup code after reset
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _main
  1404  005B                     _main:	
  1405                           
  1406                           ;main.c: 74: SetUpDevice();
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1410  005B  318E  26A8  3180   	fcall	_SetUpDevice
  1411                           
  1412                           ;main.c: 77: LCDInit(0B00000000);
  1413  005E  3000               	movlw	0
  1414  005F  3185  25AC  3180   	fcall	_LCDInit
  1415                           
  1416                           ;main.c: 80: (LCDByte(0b00000001,0));
  1417  0062  01F4               	clrf	LCDByte@isdata
  1418  0063  3001               	movlw	1
  1419  0064  3186  2657  3180   	fcall	_LCDByte
  1420                           
  1421                           ;main.c: 83: LCDGotoXY(0,0);
  1422  0067  0020               	movlb	0	; select bank0
  1423  0068  01A0               	clrf	LCDGotoXY@y
  1424  0069  3000               	movlw	0
  1425  006A  318F  279C  3180   	fcall	_LCDGotoXY
  1426                           
  1427                           ;main.c: 84: LCDWriteString("Sale voli Zanu");
  1428  006D  3011               	movlw	low (STR_13| (0+32768))
  1429  006E  0020               	movlb	0	; select bank0
  1430  006F  00A0               	movwf	LCDWriteString@msg
  1431  0070  3087               	movlw	high (STR_13| (0+32768))
  1432  0071  00A1               	movwf	LCDWriteString@msg+1
  1433  0072  3187  2792  3180   	fcall	_LCDWriteString
  1434                           
  1435                           ;main.c: 85: LCDGotoXY(0,1);
  1436  0075  0020               	movlb	0	; select bank0
  1437  0076  01A0               	clrf	LCDGotoXY@y
  1438  0077  0AA0               	incf	LCDGotoXY@y,f
  1439  0078  3000               	movlw	0
  1440  0079  318F  279C  3180   	fcall	_LCDGotoXY
  1441                           
  1442                           ;main.c: 86: LCDWriteString("i malu Laricu :)");
  1443  007C  3000               	movlw	low (STR_14| (0+32768))
  1444  007D  0020               	movlb	0	; select bank0
  1445  007E  00A0               	movwf	LCDWriteString@msg
  1446  007F  3087               	movlw	high (STR_14| (0+32768))
  1447  0080  00A1               	movwf	LCDWriteString@msg+1
  1448  0081  3187  2792  3180   	fcall	_LCDWriteString
  1449                           
  1450                           ;main.c: 90: i2c_init();
  1451  0084  318E  2693  3180   	fcall	_i2c_init
  1452                           
  1453                           ;main.c: 91: _delay((unsigned long)((2000)*(32000000ULL/4000.0)));
  1454  0087  3052               	movlw	82
  1455  0088  0020               	movlb	0	; select bank0
  1456  0089  00BA               	movwf	??_main+2
  1457  008A  302C               	movlw	44
  1458  008B  00B9               	movwf	??_main+1
  1459  008C  304F               	movlw	79
  1460  008D  00B8               	movwf	??_main
  1461  008E                     u2487:	
  1462  008E  0BB8               	decfsz	??_main,f
  1463  008F  288E               	goto	u2487
  1464  0090  0BB9               	decfsz	??_main+1,f
  1465  0091  288E               	goto	u2487
  1466  0092  0BBA               	decfsz	??_main+2,f
  1467  0093  288E               	goto	u2487
  1468  0094  3200               	nop2
  1469                           
  1470                           ;main.c: 94: DS1307StartOsc();
  1471  0095  318E  2681  3180   	fcall	_DS1307StartOsc
  1472                           
  1473                           ;main.c: 99: hours = DS1307GetHours();
  1474  0098  318E  26FC  3180   	fcall	_DS1307GetHours
  1475  009B  0020               	movlb	0	; select bank0
  1476  009C  00B8               	movwf	??_main
  1477  009D  0838               	movf	??_main,w
  1478  009E  00C8               	movwf	_hours	;volatile
  1479                           
  1480                           ;main.c: 100: minutes = DS1307GetMinutes();
  1481  009F  318F  271B  3180   	fcall	_DS1307GetMinutes
  1482  00A2  0020               	movlb	0	; select bank0
  1483  00A3  00B8               	movwf	??_main
  1484  00A4  0838               	movf	??_main,w
  1485  00A5  00C9               	movwf	_minutes	;volatile
  1486                           
  1487                           ;main.c: 101: seconds = DS1307GetSeconds();
  1488  00A6  3187  27D3  3180   	fcall	_DS1307GetSeconds
  1489  00A9  0020               	movlb	0	; select bank0
  1490  00AA  00B8               	movwf	??_main
  1491  00AB  0838               	movf	??_main,w
  1492  00AC  00CA               	movwf	_seconds	;volatile
  1493                           
  1494                           ;main.c: 102: dayoftheweek= DS1307GetDayOfWeek();
  1495  00AD  318E  2667  3180   	fcall	_DS1307GetDayOfWeek
  1496  00B0  0020               	movlb	0	; select bank0
  1497  00B1  00B8               	movwf	??_main
  1498  00B2  0838               	movf	??_main,w
  1499  00B3  00CD               	movwf	_dayoftheweek	;volatile
  1500                           
  1501                           ;main.c: 103: day = DS1307GetDay();
  1502  00B4  318E  26DD  3180   	fcall	_DS1307GetDay
  1503  00B7  0020               	movlb	0	; select bank0
  1504  00B8  00B8               	movwf	??_main
  1505  00B9  0838               	movf	??_main,w
  1506  00BA  00CC               	movwf	_day	;volatile
  1507                           
  1508                           ;main.c: 105: month = DS1307GetMonth();
  1509  00BB  318F  273A  3180   	fcall	_DS1307GetMonth
  1510  00BE  0020               	movlb	0	; select bank0
  1511  00BF  00B8               	movwf	??_main
  1512  00C0  0838               	movf	??_main,w
  1513  00C1  00CE               	movwf	_month	;volatile
  1514                           
  1515                           ;main.c: 106: year = DS1307GetYear();
  1516  00C2  318F  2759  3180   	fcall	_DS1307GetYear
  1517  00C5  0020               	movlb	0	; select bank0
  1518  00C6  00B8               	movwf	??_main
  1519  00C7  0838               	movf	??_main,w
  1520  00C8  00CF               	movwf	_year	;volatile
  1521                           
  1522                           ;main.c: 111: ShowTime(5, 0, 1, hours, minutes);
  1523  00C9  01AE               	clrf	ShowTime@y
  1524  00CA  01AF               	clrf	ShowTime@clear
  1525  00CB  0AAF               	incf	ShowTime@clear,f
  1526  00CC  0848               	movf	_hours,w	;volatile
  1527  00CD  00B8               	movwf	??_main
  1528  00CE  0838               	movf	??_main,w
  1529  00CF  00B0               	movwf	ShowTime@hh
  1530  00D0  0849               	movf	_minutes,w	;volatile
  1531  00D1  00B9               	movwf	??_main+1
  1532  00D2  0839               	movf	??_main+1,w
  1533  00D3  00B1               	movwf	ShowTime@mm
  1534  00D4  3005               	movlw	5
  1535  00D5  3186  26A8  3180   	fcall	_ShowTime
  1536                           
  1537                           ;main.c: 115: ShowDate(1, 1, 0, dayoftheweek, day, month, year);
  1538  00D8  0020               	movlb	0	; select bank0
  1539  00D9  01AE               	clrf	ShowDate@y
  1540  00DA  0AAE               	incf	ShowDate@y,f
  1541  00DB  01AF               	clrf	ShowDate@clear
  1542  00DC  084D               	movf	_dayoftheweek,w	;volatile
  1543  00DD  00B8               	movwf	??_main
  1544  00DE  0838               	movf	??_main,w
  1545  00DF  00B0               	movwf	ShowDate@dow
  1546  00E0  084C               	movf	_day,w	;volatile
  1547  00E1  00B9               	movwf	??_main+1
  1548  00E2  0839               	movf	??_main+1,w
  1549  00E3  00B1               	movwf	ShowDate@dd
  1550  00E4  084E               	movf	_month,w	;volatile
  1551  00E5  00BA               	movwf	??_main+2
  1552  00E6  083A               	movf	??_main+2,w
  1553  00E7  00B2               	movwf	ShowDate@mm
  1554  00E8  084F               	movf	_year,w	;volatile
  1555  00E9  00BB               	movwf	??_main+3
  1556  00EA  083B               	movf	??_main+3,w
  1557  00EB  00B3               	movwf	ShowDate@yy
  1558  00EC  3001               	movlw	1
  1559  00ED  3184  2460  3180   	fcall	_ShowDate
  1560                           
  1561                           ;main.c: 119: INTCONbits.GIE = 1;
  1562  00F0  178B               	bsf	11,7	;volatile
  1563                           
  1564                           ;main.c: 120: INTCONbits.T0IE = 1;
  1565  00F1  168B               	bsf	11,5	;volatile
  1566                           
  1567                           ;main.c: 121: INTCONbits.PEIE = 1;
  1568  00F2  170B               	bsf	11,6	;volatile
  1569  00F3                     l2786:	
  1570                           ;main.c: 123: while(1) {
  1571                           
  1572                           
  1573                           ;main.c: 125: if(PORTAbits.RA4 == 0) {
  1574  00F3  0020               	movlb	0	; select bank0
  1575  00F4  1A0C               	btfsc	12,4	;volatile
  1576  00F5  29C4               	goto	l2820
  1577                           
  1578                           ;main.c: 126: INTCONbits.GIE = 0;
  1579  00F6  138B               	bcf	11,7	;volatile
  1580                           
  1581                           ;main.c: 127: SetUpON++;
  1582  00F7  3001               	movlw	1
  1583  00F8  00B8               	movwf	??_main
  1584  00F9  0838               	movf	??_main,w
  1585  00FA  07C6               	addwf	_SetUpON,f	;volatile
  1586                           
  1587                           ;main.c: 128: ShowTime(5, 0, 1, hours, minutes);
  1588  00FB  01AE               	clrf	ShowTime@y
  1589  00FC  01AF               	clrf	ShowTime@clear
  1590  00FD  0AAF               	incf	ShowTime@clear,f
  1591  00FE  0848               	movf	_hours,w	;volatile
  1592  00FF  00B8               	movwf	??_main
  1593  0100  0838               	movf	??_main,w
  1594  0101  00B0               	movwf	ShowTime@hh
  1595  0102  0849               	movf	_minutes,w	;volatile
  1596  0103  00B9               	movwf	??_main+1
  1597  0104  0839               	movf	??_main+1,w
  1598  0105  00B1               	movwf	ShowTime@mm
  1599  0106  3005               	movlw	5
  1600  0107  3186  26A8  3180   	fcall	_ShowTime
  1601                           
  1602                           ;main.c: 129: ShowDate(1, 1, 0, dayoftheweek, day, month, year);
  1603  010A  0020               	movlb	0	; select bank0
  1604  010B  01AE               	clrf	ShowDate@y
  1605  010C  0AAE               	incf	ShowDate@y,f
  1606  010D  01AF               	clrf	ShowDate@clear
  1607  010E  084D               	movf	_dayoftheweek,w	;volatile
  1608  010F  00B8               	movwf	??_main
  1609  0110  0838               	movf	??_main,w
  1610  0111  00B0               	movwf	ShowDate@dow
  1611  0112  084C               	movf	_day,w	;volatile
  1612  0113  00B9               	movwf	??_main+1
  1613  0114  0839               	movf	??_main+1,w
  1614  0115  00B1               	movwf	ShowDate@dd
  1615  0116  084E               	movf	_month,w	;volatile
  1616  0117  00BA               	movwf	??_main+2
  1617  0118  083A               	movf	??_main+2,w
  1618  0119  00B2               	movwf	ShowDate@mm
  1619  011A  084F               	movf	_year,w	;volatile
  1620  011B  00BB               	movwf	??_main+3
  1621  011C  083B               	movf	??_main+3,w
  1622  011D  00B3               	movwf	ShowDate@yy
  1623  011E  3001               	movlw	1
  1624  011F  3184  2460  3180   	fcall	_ShowDate
  1625                           
  1626                           ;main.c: 130: switch (SetUpON) {
  1627  0122  299E               	goto	l2816
  1628  0123                     l2796:	
  1629                           ;main.c: 131: case 1: { LCDGotoXY(4,0); LCDWriteString(">");}; break;
  1630                           
  1631  0123  0020               	movlb	0	; select bank0
  1632  0124  01A0               	clrf	LCDGotoXY@y
  1633  0125  3004               	movlw	4
  1634  0126  318F  279C  3180   	fcall	_LCDGotoXY
  1635  0129  3049               	movlw	low (STR_15| (0+32768))
  1636  012A  0020               	movlb	0	; select bank0
  1637  012B  00A0               	movwf	LCDWriteString@msg
  1638  012C  3087               	movlw	high (STR_15| (0+32768))
  1639  012D  00A1               	movwf	LCDWriteString@msg+1
  1640  012E  3187  2792  3180   	fcall	_LCDWriteString
  1641  0131  29B6               	goto	l2818
  1642  0132                     l2798:	
  1643                           ;main.c: 132: case 2: { LCDGotoXY(10,0); LCDWriteString("<");}; break;
  1644                           
  1645  0132  0020               	movlb	0	; select bank0
  1646  0133  01A0               	clrf	LCDGotoXY@y
  1647  0134  300A               	movlw	10
  1648  0135  318F  279C  3180   	fcall	_LCDGotoXY
  1649  0138  3047               	movlw	low (STR_16| (0+32768))
  1650  0139  0020               	movlb	0	; select bank0
  1651  013A  00A0               	movwf	LCDWriteString@msg
  1652  013B  3087               	movlw	high (STR_16| (0+32768))
  1653  013C  00A1               	movwf	LCDWriteString@msg+1
  1654  013D  3187  2792  3180   	fcall	_LCDWriteString
  1655  0140  29B6               	goto	l2818
  1656  0141                     l2800:	
  1657                           ;main.c: 133: case 3: { LCDGotoXY(0,1); LCDWriteString(">");}; break;
  1658                           
  1659  0141  0020               	movlb	0	; select bank0
  1660  0142  01A0               	clrf	LCDGotoXY@y
  1661  0143  0AA0               	incf	LCDGotoXY@y,f
  1662  0144  3000               	movlw	0
  1663  0145  318F  279C  3180   	fcall	_LCDGotoXY
  1664  0148  3049               	movlw	low (STR_15| (0+32768))
  1665  0149  0020               	movlb	0	; select bank0
  1666  014A  00A0               	movwf	LCDWriteString@msg
  1667  014B  3087               	movlw	high (STR_15| (0+32768))
  1668  014C  00A1               	movwf	LCDWriteString@msg+1
  1669  014D  3187  2792  3180   	fcall	_LCDWriteString
  1670  0150  29B6               	goto	l2818
  1671  0151                     l2802:	
  1672                           ;main.c: 134: case 4: { LCDGotoXY(4,1); LCDWriteString(">");}; break;
  1673                           
  1674  0151  0020               	movlb	0	; select bank0
  1675  0152  01A0               	clrf	LCDGotoXY@y
  1676  0153  0AA0               	incf	LCDGotoXY@y,f
  1677  0154  3004               	movlw	4
  1678  0155  318F  279C  3180   	fcall	_LCDGotoXY
  1679  0158  3049               	movlw	low (STR_15| (0+32768))
  1680  0159  0020               	movlb	0	; select bank0
  1681  015A  00A0               	movwf	LCDWriteString@msg
  1682  015B  3087               	movlw	high (STR_15| (0+32768))
  1683  015C  00A1               	movwf	LCDWriteString@msg+1
  1684  015D  3187  2792  3180   	fcall	_LCDWriteString
  1685  0160  29B6               	goto	l2818
  1686  0161                     l2804:	
  1687                           ;main.c: 135: case 5: { LCDGotoXY(7,1); LCDWriteString(">");}; break;
  1688                           
  1689  0161  0020               	movlb	0	; select bank0
  1690  0162  01A0               	clrf	LCDGotoXY@y
  1691  0163  0AA0               	incf	LCDGotoXY@y,f
  1692  0164  3007               	movlw	7
  1693  0165  318F  279C  3180   	fcall	_LCDGotoXY
  1694  0168  3049               	movlw	low (STR_15| (0+32768))
  1695  0169  0020               	movlb	0	; select bank0
  1696  016A  00A0               	movwf	LCDWriteString@msg
  1697  016B  3087               	movlw	high (STR_15| (0+32768))
  1698  016C  00A1               	movwf	LCDWriteString@msg+1
  1699  016D  3187  2792  3180   	fcall	_LCDWriteString
  1700  0170  29B6               	goto	l2818
  1701  0171                     l2806:	
  1702                           ;main.c: 136: case 6: { LCDGotoXY(14,1); LCDWriteString("<");}; break;
  1703                           
  1704  0171  0020               	movlb	0	; select bank0
  1705  0172  01A0               	clrf	LCDGotoXY@y
  1706  0173  0AA0               	incf	LCDGotoXY@y,f
  1707  0174  300E               	movlw	14
  1708  0175  318F  279C  3180   	fcall	_LCDGotoXY
  1709  0178  3047               	movlw	low (STR_16| (0+32768))
  1710  0179  0020               	movlb	0	; select bank0
  1711  017A  00A0               	movwf	LCDWriteString@msg
  1712  017B  3087               	movlw	high (STR_16| (0+32768))
  1713  017C  00A1               	movwf	LCDWriteString@msg+1
  1714  017D  3187  2792  3180   	fcall	_LCDWriteString
  1715  0180  29B6               	goto	l2818
  1716  0181                     l2808:	
  1717                           ;main.c: 137: case 7:
  1718                           
  1719                           
  1720                           ;main.c: 138: SetUpON = 0;
  1721  0181  0020               	movlb	0	; select bank0
  1722  0182  01C6               	clrf	_SetUpON	;volatile
  1723                           
  1724                           ;main.c: 139: DS1307SetTimeAndDate(hours, minutes, 0, dayoftheweek, day, month, year);
  1725  0183  0849               	movf	_minutes,w	;volatile
  1726  0184  00B8               	movwf	??_main
  1727  0185  0838               	movf	??_main,w
  1728  0186  00A0               	movwf	DS1307SetTimeAndDate@funcm
  1729  0187  01A1               	clrf	DS1307SetTimeAndDate@funcs
  1730  0188  084D               	movf	_dayoftheweek,w	;volatile
  1731  0189  00B9               	movwf	??_main+1
  1732  018A  0839               	movf	??_main+1,w
  1733  018B  00A2               	movwf	DS1307SetTimeAndDate@funcDayOfTheWeek
  1734  018C  084C               	movf	_day,w	;volatile
  1735  018D  00BA               	movwf	??_main+2
  1736  018E  083A               	movf	??_main+2,w
  1737  018F  00A3               	movwf	DS1307SetTimeAndDate@funcday
  1738  0190  084E               	movf	_month,w	;volatile
  1739  0191  00BB               	movwf	??_main+3
  1740  0192  083B               	movf	??_main+3,w
  1741  0193  00A4               	movwf	DS1307SetTimeAndDate@funcmonth
  1742  0194  084F               	movf	_year,w	;volatile
  1743  0195  00BC               	movwf	??_main+4
  1744  0196  083C               	movf	??_main+4,w
  1745  0197  00A5               	movwf	DS1307SetTimeAndDate@funcyear
  1746  0198  0848               	movf	_hours,w	;volatile
  1747  0199  3183  2335  3180   	fcall	_DS1307SetTimeAndDate
  1748                           
  1749                           ;main.c: 140: INTCONbits.GIE = 1;
  1750  019C  178B               	bsf	11,7	;volatile
  1751                           
  1752                           ;main.c: 143: }
  1753                           
  1754                           ;main.c: 142: default: break;
  1755                           
  1756                           ;main.c: 141: break;
  1757  019D  29B6               	goto	l2818
  1758  019E                     l2816:	
  1759  019E  0020               	movlb	0	; select bank0
  1760  019F  0846               	movf	_SetUpON,w	;volatile
  1761                           
  1762                           ; Switch size 1, requested type "space"
  1763                           ; Number of cases is 7, Range of values is 1 to 7
  1764                           ; switch strategies available:
  1765                           ; Name         Instructions Cycles
  1766                           ; simple_byte           22    12 (average)
  1767                           ; direct_byte           23     9 (fixed)
  1768                           ; jumptable            263     9 (fixed)
  1769                           ;	Chosen strategy is simple_byte
  1770  01A0  3A01               	xorlw	1	; case 1
  1771  01A1  1903               	skipnz
  1772  01A2  2923               	goto	l2796
  1773  01A3  3A03               	xorlw	3	; case 2
  1774  01A4  1903               	skipnz
  1775  01A5  2932               	goto	l2798
  1776  01A6  3A01               	xorlw	1	; case 3
  1777  01A7  1903               	skipnz
  1778  01A8  2941               	goto	l2800
  1779  01A9  3A07               	xorlw	7	; case 4
  1780  01AA  1903               	skipnz
  1781  01AB  2951               	goto	l2802
  1782  01AC  3A01               	xorlw	1	; case 5
  1783  01AD  1903               	skipnz
  1784  01AE  2961               	goto	l2804
  1785  01AF  3A03               	xorlw	3	; case 6
  1786  01B0  1903               	skipnz
  1787  01B1  2971               	goto	l2806
  1788  01B2  3A01               	xorlw	1	; case 7
  1789  01B3  1903               	skipnz
  1790  01B4  2981               	goto	l2808
  1791  01B5  29B6               	goto	l2818
  1792  01B6                     l2818:	
  1793                           
  1794                           ;main.c: 145: _delay((unsigned long)((500)*(32000000ULL/4000.0)));
  1795  01B6  3015               	movlw	21
  1796  01B7  0020               	movlb	0	; select bank0
  1797  01B8  00BA               	movwf	??_main+2
  1798  01B9  304B               	movlw	75
  1799  01BA  00B9               	movwf	??_main+1
  1800  01BB  30D1               	movlw	209
  1801  01BC  00B8               	movwf	??_main
  1802  01BD                     u2497:	
  1803  01BD  0BB8               	decfsz	??_main,f
  1804  01BE  29BD               	goto	u2497
  1805  01BF  0BB9               	decfsz	??_main+1,f
  1806  01C0  29BD               	goto	u2497
  1807  01C1  0BBA               	decfsz	??_main+2,f
  1808  01C2  29BD               	goto	u2497
  1809  01C3  0000               	nop
  1810  01C4                     l2820:	
  1811                           
  1812                           ;main.c: 146: }
  1813                           ;main.c: 147: if(PORTAbits.RA5 == 0) {
  1814  01C4  0020               	movlb	0	; select bank0
  1815  01C5  1E8C               	btfss	12,5	;volatile
  1816  01C6  2A16               	goto	l2862
  1817  01C7  2AD3               	goto	l181
  1818  01C8                     l2824:	
  1819                           ;main.c: 149: case 1: if(hours >= 23) { hours = 0; } else { hours++; } break;
  1820                           
  1821                           ;main.c: 148: switch(SetUpON) {
  1822                           
  1823  01C8  3017               	movlw	23
  1824  01C9  0248               	subwf	_hours,w	;volatile
  1825  01CA  1C03               	skipc
  1826  01CB  29CE               	goto	l2828
  1827  01CC  01C8               	clrf	_hours	;volatile
  1828  01CD  2A2A               	goto	l2864
  1829  01CE                     l2828:	
  1830  01CE  3001               	movlw	1
  1831  01CF  00B8               	movwf	??_main
  1832  01D0  0838               	movf	??_main,w
  1833  01D1  07C8               	addwf	_hours,f	;volatile
  1834  01D2  2A2A               	goto	l2864
  1835  01D3                     l2830:	
  1836                           ;main.c: 150: case 2: if(minutes >= 59) { minutes = 0; } else { minutes++; } break;
  1837                           
  1838  01D3  303B               	movlw	59
  1839  01D4  0249               	subwf	_minutes,w	;volatile
  1840  01D5  1C03               	skipc
  1841  01D6  29D9               	goto	l2834
  1842  01D7  01C9               	clrf	_minutes	;volatile
  1843  01D8  2A2A               	goto	l2864
  1844  01D9                     l2834:	
  1845  01D9  3001               	movlw	1
  1846  01DA  00B8               	movwf	??_main
  1847  01DB  0838               	movf	??_main,w
  1848  01DC  07C9               	addwf	_minutes,f	;volatile
  1849  01DD  2A2A               	goto	l2864
  1850  01DE                     l2836:	
  1851                           ;main.c: 151: case 3: if(dayoftheweek >= 7) { dayoftheweek = 1; } else { dayoftheweek++;
      +                           } break;
  1852                           
  1853  01DE  3007               	movlw	7
  1854  01DF  024D               	subwf	_dayoftheweek,w	;volatile
  1855  01E0  1C03               	skipc
  1856  01E1  29E7               	goto	l2840
  1857  01E2  3001               	movlw	1
  1858  01E3  00B8               	movwf	??_main
  1859  01E4  0838               	movf	??_main,w
  1860  01E5  00CD               	movwf	_dayoftheweek	;volatile
  1861  01E6  2A2A               	goto	l2864
  1862  01E7                     l2840:	
  1863  01E7  3001               	movlw	1
  1864  01E8  00B8               	movwf	??_main
  1865  01E9  0838               	movf	??_main,w
  1866  01EA  07CD               	addwf	_dayoftheweek,f	;volatile
  1867  01EB  2A2A               	goto	l2864
  1868  01EC                     l2842:	
  1869                           ;main.c: 152: case 4: if(day >= 31) { day = 1; } else { day++; } break;
  1870                           
  1871  01EC  301F               	movlw	31
  1872  01ED  024C               	subwf	_day,w	;volatile
  1873  01EE  1C03               	skipc
  1874  01EF  29F5               	goto	l2846
  1875  01F0  3001               	movlw	1
  1876  01F1  00B8               	movwf	??_main
  1877  01F2  0838               	movf	??_main,w
  1878  01F3  00CC               	movwf	_day	;volatile
  1879  01F4  2A2A               	goto	l2864
  1880  01F5                     l2846:	
  1881  01F5  3001               	movlw	1
  1882  01F6  00B8               	movwf	??_main
  1883  01F7  0838               	movf	??_main,w
  1884  01F8  07CC               	addwf	_day,f	;volatile
  1885  01F9  2A2A               	goto	l2864
  1886  01FA                     l2848:	
  1887                           ;main.c: 153: case 5: if(month >= 12) { month = 1; } else { month++; } break;
  1888                           
  1889  01FA  300C               	movlw	12
  1890  01FB  024E               	subwf	_month,w	;volatile
  1891  01FC  1C03               	skipc
  1892  01FD  2A03               	goto	l2852
  1893  01FE  3001               	movlw	1
  1894  01FF  00B8               	movwf	??_main
  1895  0200  0838               	movf	??_main,w
  1896  0201  00CE               	movwf	_month	;volatile
  1897  0202  2A2A               	goto	l2864
  1898  0203                     l2852:	
  1899  0203  3001               	movlw	1
  1900  0204  00B8               	movwf	??_main
  1901  0205  0838               	movf	??_main,w
  1902  0206  07CE               	addwf	_month,f	;volatile
  1903  0207  2A2A               	goto	l2864
  1904  0208                     l2854:	
  1905                           ;main.c: 154: case 6: if(year >= 20) { year = 15; } else { year++; } break;
  1906                           
  1907  0208  3014               	movlw	20
  1908  0209  024F               	subwf	_year,w	;volatile
  1909  020A  1C03               	skipc
  1910  020B  2A11               	goto	l2858
  1911  020C  300F               	movlw	15
  1912  020D  00B8               	movwf	??_main
  1913  020E  0838               	movf	??_main,w
  1914  020F  00CF               	movwf	_year	;volatile
  1915  0210  2A2A               	goto	l2864
  1916  0211                     l2858:	
  1917  0211  3001               	movlw	1
  1918  0212  00B8               	movwf	??_main
  1919  0213  0838               	movf	??_main,w
  1920  0214  07CF               	addwf	_year,f	;volatile
  1921                           
  1922                           ;main.c: 155: }
  1923  0215  2A2A               	goto	l2864
  1924  0216                     l2862:	
  1925  0216  0846               	movf	_SetUpON,w	;volatile
  1926                           
  1927                           ; Switch size 1, requested type "space"
  1928                           ; Number of cases is 6, Range of values is 1 to 6
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte           19    10 (average)
  1932                           ; direct_byte           21     9 (fixed)
  1933                           ; jumptable            263     9 (fixed)
  1934                           ;	Chosen strategy is simple_byte
  1935  0217  3A01               	xorlw	1	; case 1
  1936  0218  1903               	skipnz
  1937  0219  29C8               	goto	l2824
  1938  021A  3A03               	xorlw	3	; case 2
  1939  021B  1903               	skipnz
  1940  021C  29D3               	goto	l2830
  1941  021D  3A01               	xorlw	1	; case 3
  1942  021E  1903               	skipnz
  1943  021F  29DE               	goto	l2836
  1944  0220  3A07               	xorlw	7	; case 4
  1945  0221  1903               	skipnz
  1946  0222  29EC               	goto	l2842
  1947  0223  3A01               	xorlw	1	; case 5
  1948  0224  1903               	skipnz
  1949  0225  29FA               	goto	l2848
  1950  0226  3A03               	xorlw	3	; case 6
  1951  0227  1903               	skipnz
  1952  0228  2A08               	goto	l2854
  1953  0229  2A2A               	goto	l2864
  1954  022A                     l2864:	
  1955                           
  1956                           ;main.c: 157: ShowTime(5, 0, 1, hours, minutes);
  1957  022A  01AE               	clrf	ShowTime@y
  1958  022B  01AF               	clrf	ShowTime@clear
  1959  022C  0AAF               	incf	ShowTime@clear,f
  1960  022D  0848               	movf	_hours,w	;volatile
  1961  022E  00B8               	movwf	??_main
  1962  022F  0838               	movf	??_main,w
  1963  0230  00B0               	movwf	ShowTime@hh
  1964  0231  0849               	movf	_minutes,w	;volatile
  1965  0232  00B9               	movwf	??_main+1
  1966  0233  0839               	movf	??_main+1,w
  1967  0234  00B1               	movwf	ShowTime@mm
  1968  0235  3005               	movlw	5
  1969  0236  3186  26A8  3180   	fcall	_ShowTime
  1970                           
  1971                           ;main.c: 158: ShowDate(1, 1, 0, dayoftheweek, day, month, year);
  1972  0239  0020               	movlb	0	; select bank0
  1973  023A  01AE               	clrf	ShowDate@y
  1974  023B  0AAE               	incf	ShowDate@y,f
  1975  023C  01AF               	clrf	ShowDate@clear
  1976  023D  084D               	movf	_dayoftheweek,w	;volatile
  1977  023E  00B8               	movwf	??_main
  1978  023F  0838               	movf	??_main,w
  1979  0240  00B0               	movwf	ShowDate@dow
  1980  0241  084C               	movf	_day,w	;volatile
  1981  0242  00B9               	movwf	??_main+1
  1982  0243  0839               	movf	??_main+1,w
  1983  0244  00B1               	movwf	ShowDate@dd
  1984  0245  084E               	movf	_month,w	;volatile
  1985  0246  00BA               	movwf	??_main+2
  1986  0247  083A               	movf	??_main+2,w
  1987  0248  00B2               	movwf	ShowDate@mm
  1988  0249  084F               	movf	_year,w	;volatile
  1989  024A  00BB               	movwf	??_main+3
  1990  024B  083B               	movf	??_main+3,w
  1991  024C  00B3               	movwf	ShowDate@yy
  1992  024D  3001               	movlw	1
  1993  024E  3184  2460  3180   	fcall	_ShowDate
  1994                           
  1995                           ;main.c: 160: switch (SetUpON) {
  1996  0251  2AB0               	goto	l2880
  1997  0252                     l2866:	
  1998                           ;main.c: 161: case 1: { LCDGotoXY(4,0); LCDWriteString(">");}; break;
  1999                           
  2000  0252  0020               	movlb	0	; select bank0
  2001  0253  01A0               	clrf	LCDGotoXY@y
  2002  0254  3004               	movlw	4
  2003  0255  318F  279C  3180   	fcall	_LCDGotoXY
  2004  0258  3049               	movlw	low (STR_15| (0+32768))
  2005  0259  0020               	movlb	0	; select bank0
  2006  025A  00A0               	movwf	LCDWriteString@msg
  2007  025B  3087               	movlw	high (STR_15| (0+32768))
  2008  025C  00A1               	movwf	LCDWriteString@msg+1
  2009  025D  3187  2792  3180   	fcall	_LCDWriteString
  2010  0260  2AC5               	goto	l2882
  2011  0261                     l2868:	
  2012                           ;main.c: 162: case 2: { LCDGotoXY(10,0); LCDWriteString("<");}; break;
  2013                           
  2014  0261  0020               	movlb	0	; select bank0
  2015  0262  01A0               	clrf	LCDGotoXY@y
  2016  0263  300A               	movlw	10
  2017  0264  318F  279C  3180   	fcall	_LCDGotoXY
  2018  0267  3047               	movlw	low (STR_16| (0+32768))
  2019  0268  0020               	movlb	0	; select bank0
  2020  0269  00A0               	movwf	LCDWriteString@msg
  2021  026A  3087               	movlw	high (STR_16| (0+32768))
  2022  026B  00A1               	movwf	LCDWriteString@msg+1
  2023  026C  3187  2792  3180   	fcall	_LCDWriteString
  2024  026F  2AC5               	goto	l2882
  2025  0270                     l2870:	
  2026                           ;main.c: 163: case 3: { LCDGotoXY(0,1); LCDWriteString(">");}; break;
  2027                           
  2028  0270  0020               	movlb	0	; select bank0
  2029  0271  01A0               	clrf	LCDGotoXY@y
  2030  0272  0AA0               	incf	LCDGotoXY@y,f
  2031  0273  3000               	movlw	0
  2032  0274  318F  279C  3180   	fcall	_LCDGotoXY
  2033  0277  3049               	movlw	low (STR_15| (0+32768))
  2034  0278  0020               	movlb	0	; select bank0
  2035  0279  00A0               	movwf	LCDWriteString@msg
  2036  027A  3087               	movlw	high (STR_15| (0+32768))
  2037  027B  00A1               	movwf	LCDWriteString@msg+1
  2038  027C  3187  2792  3180   	fcall	_LCDWriteString
  2039  027F  2AC5               	goto	l2882
  2040  0280                     l2872:	
  2041                           ;main.c: 164: case 4: { LCDGotoXY(4,1); LCDWriteString(">");}; break;
  2042                           
  2043  0280  0020               	movlb	0	; select bank0
  2044  0281  01A0               	clrf	LCDGotoXY@y
  2045  0282  0AA0               	incf	LCDGotoXY@y,f
  2046  0283  3004               	movlw	4
  2047  0284  318F  279C  3180   	fcall	_LCDGotoXY
  2048  0287  3049               	movlw	low (STR_15| (0+32768))
  2049  0288  0020               	movlb	0	; select bank0
  2050  0289  00A0               	movwf	LCDWriteString@msg
  2051  028A  3087               	movlw	high (STR_15| (0+32768))
  2052  028B  00A1               	movwf	LCDWriteString@msg+1
  2053  028C  3187  2792  3180   	fcall	_LCDWriteString
  2054  028F  2AC5               	goto	l2882
  2055  0290                     l2874:	
  2056                           ;main.c: 165: case 5: { LCDGotoXY(7,1); LCDWriteString(">");}; break;
  2057                           
  2058  0290  0020               	movlb	0	; select bank0
  2059  0291  01A0               	clrf	LCDGotoXY@y
  2060  0292  0AA0               	incf	LCDGotoXY@y,f
  2061  0293  3007               	movlw	7
  2062  0294  318F  279C  3180   	fcall	_LCDGotoXY
  2063  0297  3049               	movlw	low (STR_15| (0+32768))
  2064  0298  0020               	movlb	0	; select bank0
  2065  0299  00A0               	movwf	LCDWriteString@msg
  2066  029A  3087               	movlw	high (STR_15| (0+32768))
  2067  029B  00A1               	movwf	LCDWriteString@msg+1
  2068  029C  3187  2792  3180   	fcall	_LCDWriteString
  2069  029F  2AC5               	goto	l2882
  2070  02A0                     l2876:	
  2071                           ;main.c: 166: case 6: { LCDGotoXY(14,1); LCDWriteString("<");}; break;
  2072                           
  2073  02A0  0020               	movlb	0	; select bank0
  2074  02A1  01A0               	clrf	LCDGotoXY@y
  2075  02A2  0AA0               	incf	LCDGotoXY@y,f
  2076  02A3  300E               	movlw	14
  2077  02A4  318F  279C  3180   	fcall	_LCDGotoXY
  2078  02A7  3047               	movlw	low (STR_16| (0+32768))
  2079  02A8  0020               	movlb	0	; select bank0
  2080  02A9  00A0               	movwf	LCDWriteString@msg
  2081  02AA  3087               	movlw	high (STR_16| (0+32768))
  2082  02AB  00A1               	movwf	LCDWriteString@msg+1
  2083  02AC  3187  2792  3180   	fcall	_LCDWriteString
  2084                           
  2085                           ;main.c: 168: }
  2086                           
  2087                           ;main.c: 167: default: break;
  2088  02AF  2AC5               	goto	l2882
  2089  02B0                     l2880:	
  2090  02B0  0020               	movlb	0	; select bank0
  2091  02B1  0846               	movf	_SetUpON,w	;volatile
  2092                           
  2093                           ; Switch size 1, requested type "space"
  2094                           ; Number of cases is 6, Range of values is 1 to 6
  2095                           ; switch strategies available:
  2096                           ; Name         Instructions Cycles
  2097                           ; simple_byte           19    10 (average)
  2098                           ; direct_byte           21     9 (fixed)
  2099                           ; jumptable            263     9 (fixed)
  2100                           ;	Chosen strategy is simple_byte
  2101  02B2  3A01               	xorlw	1	; case 1
  2102  02B3  1903               	skipnz
  2103  02B4  2A52               	goto	l2866
  2104  02B5  3A03               	xorlw	3	; case 2
  2105  02B6  1903               	skipnz
  2106  02B7  2A61               	goto	l2868
  2107  02B8  3A01               	xorlw	1	; case 3
  2108  02B9  1903               	skipnz
  2109  02BA  2A70               	goto	l2870
  2110  02BB  3A07               	xorlw	7	; case 4
  2111  02BC  1903               	skipnz
  2112  02BD  2A80               	goto	l2872
  2113  02BE  3A01               	xorlw	1	; case 5
  2114  02BF  1903               	skipnz
  2115  02C0  2A90               	goto	l2874
  2116  02C1  3A03               	xorlw	3	; case 6
  2117  02C2  1903               	skipnz
  2118  02C3  2AA0               	goto	l2876
  2119  02C4  2AC5               	goto	l2882
  2120  02C5                     l2882:	
  2121                           
  2122                           ;main.c: 170: _delay((unsigned long)((250)*(32000000ULL/4000.0)));
  2123  02C5  300B               	movlw	11
  2124  02C6  0020               	movlb	0	; select bank0
  2125  02C7  00BA               	movwf	??_main+2
  2126  02C8  3026               	movlw	38
  2127  02C9  00B9               	movwf	??_main+1
  2128  02CA  3066               	movlw	102
  2129  02CB  00B8               	movwf	??_main
  2130  02CC                     u2507:	
  2131  02CC  0BB8               	decfsz	??_main,f
  2132  02CD  2ACC               	goto	u2507
  2133  02CE  0BB9               	decfsz	??_main+1,f
  2134  02CF  2ACC               	goto	u2507
  2135  02D0  0BBA               	decfsz	??_main+2,f
  2136  02D1  2ACC               	goto	u2507
  2137  02D2  3200               	nop2
  2138  02D3                     l181:	
  2139                           
  2140                           ;main.c: 171: }
  2141                           ;main.c: 173: if((TimeRefresh == 1) && (SetUpON == 0)) {
  2142  02D3  0020               	movlb	0	; select bank0
  2143  02D4  0847               	movf	_TimeRefresh,w	;volatile
  2144  02D5  3A01               	xorlw	1
  2145  02D6  1D03               	skipz
  2146  02D7  28F3               	goto	l2786
  2147  02D8  08C6               	movf	_SetUpON,f	;volatile
  2148  02D9  1D03               	skipz
  2149  02DA  28F3               	goto	l2786
  2150                           
  2151                           ;main.c: 174: hours = DS1307GetHours();
  2152  02DB  318E  26FC  3180   	fcall	_DS1307GetHours
  2153  02DE  0020               	movlb	0	; select bank0
  2154  02DF  00B8               	movwf	??_main
  2155  02E0  0838               	movf	??_main,w
  2156  02E1  00C8               	movwf	_hours	;volatile
  2157                           
  2158                           ;main.c: 175: minutes = DS1307GetMinutes();
  2159  02E2  318F  271B  3180   	fcall	_DS1307GetMinutes
  2160  02E5  0020               	movlb	0	; select bank0
  2161  02E6  00B8               	movwf	??_main
  2162  02E7  0838               	movf	??_main,w
  2163  02E8  00C9               	movwf	_minutes	;volatile
  2164                           
  2165                           ;main.c: 176: seconds = DS1307GetSeconds();
  2166  02E9  3187  27D3  3180   	fcall	_DS1307GetSeconds
  2167  02EC  0020               	movlb	0	; select bank0
  2168  02ED  00B8               	movwf	??_main
  2169  02EE  0838               	movf	??_main,w
  2170  02EF  00CA               	movwf	_seconds	;volatile
  2171                           
  2172                           ;main.c: 177: dayoftheweek= DS1307GetDayOfWeek();
  2173  02F0  318E  2667  3180   	fcall	_DS1307GetDayOfWeek
  2174  02F3  0020               	movlb	0	; select bank0
  2175  02F4  00B8               	movwf	??_main
  2176  02F5  0838               	movf	??_main,w
  2177  02F6  00CD               	movwf	_dayoftheweek	;volatile
  2178                           
  2179                           ;main.c: 178: day = DS1307GetDay();
  2180  02F7  318E  26DD  3180   	fcall	_DS1307GetDay
  2181  02FA  0020               	movlb	0	; select bank0
  2182  02FB  00B8               	movwf	??_main
  2183  02FC  0838               	movf	??_main,w
  2184  02FD  00CC               	movwf	_day	;volatile
  2185                           
  2186                           ;main.c: 180: month = DS1307GetMonth();
  2187  02FE  318F  273A  3180   	fcall	_DS1307GetMonth
  2188  0301  0020               	movlb	0	; select bank0
  2189  0302  00B8               	movwf	??_main
  2190  0303  0838               	movf	??_main,w
  2191  0304  00CE               	movwf	_month	;volatile
  2192                           
  2193                           ;main.c: 181: year = DS1307GetYear();
  2194  0305  318F  2759  3180   	fcall	_DS1307GetYear
  2195  0308  0020               	movlb	0	; select bank0
  2196  0309  00B8               	movwf	??_main
  2197  030A  0838               	movf	??_main,w
  2198  030B  00CF               	movwf	_year	;volatile
  2199                           
  2200                           ;main.c: 190: ShowTime(5, 0, 0, hours, minutes);
  2201  030C  01AE               	clrf	ShowTime@y
  2202  030D  01AF               	clrf	ShowTime@clear
  2203  030E  0848               	movf	_hours,w	;volatile
  2204  030F  00B8               	movwf	??_main
  2205  0310  0838               	movf	??_main,w
  2206  0311  00B0               	movwf	ShowTime@hh
  2207  0312  0849               	movf	_minutes,w	;volatile
  2208  0313  00B9               	movwf	??_main+1
  2209  0314  0839               	movf	??_main+1,w
  2210  0315  00B1               	movwf	ShowTime@mm
  2211  0316  3005               	movlw	5
  2212  0317  3186  26A8  3180   	fcall	_ShowTime
  2213                           
  2214                           ;main.c: 191: ShowDate(1, 1, 0, dayoftheweek, day, month, year);
  2215  031A  0020               	movlb	0	; select bank0
  2216  031B  01AE               	clrf	ShowDate@y
  2217  031C  0AAE               	incf	ShowDate@y,f
  2218  031D  01AF               	clrf	ShowDate@clear
  2219  031E  084D               	movf	_dayoftheweek,w	;volatile
  2220  031F  00B8               	movwf	??_main
  2221  0320  0838               	movf	??_main,w
  2222  0321  00B0               	movwf	ShowDate@dow
  2223  0322  084C               	movf	_day,w	;volatile
  2224  0323  00B9               	movwf	??_main+1
  2225  0324  0839               	movf	??_main+1,w
  2226  0325  00B1               	movwf	ShowDate@dd
  2227  0326  084E               	movf	_month,w	;volatile
  2228  0327  00BA               	movwf	??_main+2
  2229  0328  083A               	movf	??_main+2,w
  2230  0329  00B2               	movwf	ShowDate@mm
  2231  032A  084F               	movf	_year,w	;volatile
  2232  032B  00BB               	movwf	??_main+3
  2233  032C  083B               	movf	??_main+3,w
  2234  032D  00B3               	movwf	ShowDate@yy
  2235  032E  3001               	movlw	1
  2236  032F  3184  2460  3180   	fcall	_ShowDate
  2237                           
  2238                           ;main.c: 193: TimeRefresh = 0;
  2239  0332  0020               	movlb	0	; select bank0
  2240  0333  01C7               	clrf	_TimeRefresh	;volatile
  2241  0334  28F3               	goto	l2786
  2242  0335                     __end_of_main:	
  2243                           
  2244                           	psect	text1
  2245  0E93                     __ptext1:	
  2246 ;; *************** function _i2c_init *****************
  2247 ;; Defined at:
  2248 ;;		line 8 in file "i2cbysk.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;		None               void
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;Total ram usage:        0 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_main
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _i2c_init
  2278  0E93                     _i2c_init:	
  2279                           
  2280                           ;i2cbysk.c: 26: TRISCbits.TRISC0 = 1;
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2284  0E93  0021               	movlb	1	; select bank1
  2285  0E94  140E               	bsf	14,0	;volatile
  2286                           
  2287                           ;i2cbysk.c: 27: TRISCbits.TRISC1 = 1;
  2288  0E95  148E               	bsf	14,1	;volatile
  2289                           
  2290                           ;i2cbysk.c: 30: SSPADD = 39;
  2291  0E96  3027               	movlw	39
  2292  0E97  0024               	movlb	4	; select bank4
  2293  0E98  0092               	movwf	18	;volatile
  2294                           
  2295                           ;i2cbysk.c: 34: SSP1STATbits.SMP = 1;
  2296  0E99  1794               	bsf	20,7	;volatile
  2297                           
  2298                           ;i2cbysk.c: 35: SSP1STATbits.CKE = 1;
  2299  0E9A  1714               	bsf	20,6	;volatile
  2300                           
  2301                           ;i2cbysk.c: 39: SSP1CON1 = 0x24;
  2302  0E9B  3024               	movlw	36
  2303  0E9C  0095               	movwf	21	;volatile
  2304                           
  2305                           ;i2cbysk.c: 40: SSP1CON1bits.SSPEN = 1;
  2306  0E9D  1695               	bsf	21,5	;volatile
  2307                           
  2308                           ;i2cbysk.c: 41: SSP1CON1bits.SSPM = 0b1000;
  2309  0E9E  0815               	movf	21,w	;volatile
  2310  0E9F  39F0               	andlw	-16
  2311  0EA0  3808               	iorlw	8
  2312  0EA1  0095               	movwf	21	;volatile
  2313                           
  2314                           ;i2cbysk.c: 48: SSP1CON3bits.SDAHT = 1;
  2315  0EA2  1597               	bsf	23,3	;volatile
  2316                           
  2317                           ;i2cbysk.c: 49: SSP1CON3bits.AHEN = 0;
  2318  0EA3  1097               	bcf	23,1	;volatile
  2319                           
  2320                           ;i2cbysk.c: 50: SSP1CON3bits.DHEN = 0;
  2321  0EA4  1017               	bcf	23,0	;volatile
  2322                           
  2323                           ;i2cbysk.c: 53: SSP1BUF = 0x00;
  2324  0EA5  0191               	clrf	17	;volatile
  2325                           
  2326                           ;i2cbysk.c: 56: SSP1MSK = 0x00;
  2327  0EA6  0193               	clrf	19	;volatile
  2328  0EA7  0008               	return
  2329  0EA8                     __end_of_i2c_init:	
  2330                           
  2331                           	psect	text2
  2332  06A8                     __ptext2:	
  2333 ;; *************** function _ShowTime *****************
  2334 ;; Defined at:
  2335 ;;		line 19 in file "main.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  x               1    wreg     unsigned char 
  2338 ;;  y               1   14[BANK0 ] unsigned char 
  2339 ;;  clear           1   15[BANK0 ] unsigned char 
  2340 ;;  hh              1   16[BANK0 ] unsigned char 
  2341 ;;  mm              1   17[BANK0 ] unsigned char 
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  x               1   21[BANK0 ] unsigned char 
  2344 ;; Return value:  Size  Location     Type
  2345 ;;		None               void
  2346 ;; Registers used:
  2347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2357 ;;Total ram usage:        8 bytes
  2358 ;; Hardware stack levels used:    1
  2359 ;; Hardware stack levels required when called:    4
  2360 ;; This function calls:
  2361 ;;		_LCDByte
  2362 ;;		_LCDGotoXY
  2363 ;;		_LCDWriteInt
  2364 ;;		_LCDWriteString
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function _ShowTime
  2372  06A8                     _ShowTime:	
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in _ShowTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2376                           ;ShowTime@x stored from wreg
  2377  06A8  0020               	movlb	0	; select bank0
  2378  06A9  00B5               	movwf	ShowTime@x
  2379                           
  2380                           ;main.c: 21: if(clear) { (LCDByte(0b00000001,0)); }
  2381  06AA  082F               	movf	ShowTime@clear,w
  2382  06AB  1903               	btfsc	3,2
  2383  06AC  2EB3               	goto	l2650
  2384  06AD  01F4               	clrf	LCDByte@isdata
  2385  06AE  3001               	movlw	1
  2386  06AF  3186  2657  3186   	fcall	_LCDByte
  2387  06B2  0020               	movlb	0	; select bank0
  2388  06B3                     l2650:	
  2389                           
  2390                           ;main.c: 23: LCDGotoXY(x,y);
  2391  06B3  0020               	movlb	0	; select bank0
  2392  06B4  082E               	movf	ShowTime@y,w
  2393  06B5  00B2               	movwf	??_ShowTime
  2394  06B6  0832               	movf	??_ShowTime,w
  2395  06B7  00A0               	movwf	LCDGotoXY@y
  2396  06B8  0835               	movf	ShowTime@x,w
  2397  06B9  318F  279C  3186   	fcall	_LCDGotoXY
  2398                           
  2399                           ;main.c: 24: LCDWriteInt(hh, 2);
  2400  06BC  0020               	movlb	0	; select bank0
  2401  06BD  0830               	movf	ShowTime@hh,w
  2402  06BE  00B2               	movwf	??_ShowTime
  2403  06BF  01B3               	clrf	??_ShowTime+1
  2404  06C0  0832               	movf	??_ShowTime,w
  2405  06C1  00A0               	movwf	LCDWriteInt@val
  2406  06C2  0833               	movf	??_ShowTime+1,w
  2407  06C3  00A1               	movwf	LCDWriteInt@val+1
  2408  06C4  3002               	movlw	2
  2409  06C5  00B4               	movwf	??_ShowTime+2
  2410  06C6  0834               	movf	??_ShowTime+2,w
  2411  06C7  00A2               	movwf	LCDWriteInt@field_length
  2412  06C8  3185  2511  3186   	fcall	_LCDWriteInt
  2413                           
  2414                           ;main.c: 27: if(HourBlink == 1) {
  2415  06CB  0020               	movlb	0	; select bank0
  2416  06CC  084B               	movf	_HourBlink,w	;volatile
  2417  06CD  3A01               	xorlw	1
  2418  06CE  1D03               	skipz
  2419  06CF  2EDA               	goto	l2660
  2420                           
  2421                           ;main.c: 28: LCDWriteString(":");
  2422  06D0  3045               	movlw	low (STR_1| (0+32768))
  2423  06D1  00A0               	movwf	LCDWriteString@msg
  2424  06D2  3087               	movlw	high (STR_1| (0+32768))
  2425  06D3  00A1               	movwf	LCDWriteString@msg+1
  2426  06D4  3187  2792  3186   	fcall	_LCDWriteString
  2427                           
  2428                           ;main.c: 29: HourBlink = 0;
  2429  06D7  0020               	movlb	0	; select bank0
  2430  06D8  01CB               	clrf	_HourBlink	;volatile
  2431                           
  2432                           ;main.c: 30: }
  2433  06D9  2EE6               	goto	l2664
  2434  06DA                     l2660:	
  2435                           
  2436                           ;main.c: 31: else {
  2437                           ;main.c: 32: LCDWriteString(" ");
  2438  06DA  3023               	movlw	low ((STR_5+3)| (0+32768))
  2439  06DB  00A0               	movwf	LCDWriteString@msg
  2440  06DC  3087               	movlw	high ((STR_5+3)| (0+32768))
  2441  06DD  00A1               	movwf	LCDWriteString@msg+1
  2442  06DE  3187  2792  3186   	fcall	_LCDWriteString
  2443                           
  2444                           ;main.c: 33: HourBlink = 1;
  2445  06E1  3001               	movlw	1
  2446  06E2  0020               	movlb	0	; select bank0
  2447  06E3  00B2               	movwf	??_ShowTime
  2448  06E4  0832               	movf	??_ShowTime,w
  2449  06E5  00CB               	movwf	_HourBlink	;volatile
  2450  06E6                     l2664:	
  2451                           
  2452                           ;main.c: 34: }
  2453                           ;main.c: 36: LCDWriteInt(mm, 2);
  2454  06E6  0831               	movf	ShowTime@mm,w
  2455  06E7  00B2               	movwf	??_ShowTime
  2456  06E8  01B3               	clrf	??_ShowTime+1
  2457  06E9  0832               	movf	??_ShowTime,w
  2458  06EA  00A0               	movwf	LCDWriteInt@val
  2459  06EB  0833               	movf	??_ShowTime+1,w
  2460  06EC  00A1               	movwf	LCDWriteInt@val+1
  2461  06ED  3002               	movlw	2
  2462  06EE  00B4               	movwf	??_ShowTime+2
  2463  06EF  0834               	movf	??_ShowTime+2,w
  2464  06F0  00A2               	movwf	LCDWriteInt@field_length
  2465  06F1  3185  2511         	fcall	_LCDWriteInt
  2466  06F3  0008               	return
  2467  06F4                     __end_of_ShowTime:	
  2468                           
  2469                           	psect	text3
  2470  0460                     __ptext3:	
  2471 ;; *************** function _ShowDate *****************
  2472 ;; Defined at:
  2473 ;;		line 42 in file "main.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  x               1    wreg     unsigned char 
  2476 ;;  y               1   14[BANK0 ] unsigned char 
  2477 ;;  clear           1   15[BANK0 ] unsigned char 
  2478 ;;  dow             1   16[BANK0 ] unsigned char 
  2479 ;;  dd              1   17[BANK0 ] unsigned char 
  2480 ;;  mm              1   18[BANK0 ] unsigned char 
  2481 ;;  yy              1   19[BANK0 ] unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  x               1   23[BANK0 ] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;		None               void
  2486 ;; Registers used:
  2487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2493 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2494 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2495 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;Total ram usage:       10 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    4
  2500 ;; This function calls:
  2501 ;;		_LCDByte
  2502 ;;		_LCDGotoXY
  2503 ;;		_LCDWriteInt
  2504 ;;		_LCDWriteString
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _ShowDate
  2512  0460                     _ShowDate:	
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in _ShowDate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2516                           ;ShowDate@x stored from wreg
  2517  0460  0020               	movlb	0	; select bank0
  2518  0461  00B7               	movwf	ShowDate@x
  2519                           
  2520                           ;main.c: 44: if(clear) { (LCDByte(0b00000001,0)); }
  2521  0462  082F               	movf	ShowDate@clear,w
  2522  0463  1903               	btfsc	3,2
  2523  0464  2C6B               	goto	l2670
  2524  0465  01F4               	clrf	LCDByte@isdata
  2525  0466  3001               	movlw	1
  2526  0467  3186  2657  3184   	fcall	_LCDByte
  2527  046A  0020               	movlb	0	; select bank0
  2528  046B                     l2670:	
  2529                           
  2530                           ;main.c: 46: LCDGotoXY(x,y);
  2531  046B  0020               	movlb	0	; select bank0
  2532  046C  082E               	movf	ShowDate@y,w
  2533  046D  00B4               	movwf	??_ShowDate
  2534  046E  0834               	movf	??_ShowDate,w
  2535  046F  00A0               	movwf	LCDGotoXY@y
  2536  0470  0837               	movf	ShowDate@x,w
  2537  0471  318F  279C  3184   	fcall	_LCDGotoXY
  2538                           
  2539                           ;main.c: 49: switch (dayoftheweek) {
  2540  0474  2CB4               	goto	l2688
  2541  0475                     l2672:	
  2542                           ;main.c: 50: case 1: LCDWriteString("Mon "); break;
  2543                           
  2544  0475  302F               	movlw	low (STR_3| (0+32768))
  2545  0476  0020               	movlb	0	; select bank0
  2546  0477  00A0               	movwf	LCDWriteString@msg
  2547  0478  3087               	movlw	high (STR_3| (0+32768))
  2548  0479  00A1               	movwf	LCDWriteString@msg+1
  2549  047A  3187  2792  3184   	fcall	_LCDWriteString
  2550  047D  2CCC               	goto	l2690
  2551  047E                     l2674:	
  2552                           ;main.c: 51: case 2: LCDWriteString("Tue "); break;
  2553                           
  2554  047E  3025               	movlw	low (STR_4| (0+32768))
  2555  047F  0020               	movlb	0	; select bank0
  2556  0480  00A0               	movwf	LCDWriteString@msg
  2557  0481  3087               	movlw	high (STR_4| (0+32768))
  2558  0482  00A1               	movwf	LCDWriteString@msg+1
  2559  0483  3187  2792  3184   	fcall	_LCDWriteString
  2560  0486  2CCC               	goto	l2690
  2561  0487                     l2676:	
  2562                           ;main.c: 52: case 3: LCDWriteString("Wed "); break;
  2563                           
  2564  0487  3020               	movlw	low (STR_5| (0+32768))
  2565  0488  0020               	movlb	0	; select bank0
  2566  0489  00A0               	movwf	LCDWriteString@msg
  2567  048A  3087               	movlw	high (STR_5| (0+32768))
  2568  048B  00A1               	movwf	LCDWriteString@msg+1
  2569  048C  3187  2792  3184   	fcall	_LCDWriteString
  2570  048F  2CCC               	goto	l2690
  2571  0490                     l2678:	
  2572                           ;main.c: 53: case 4: LCDWriteString("Thu "); break;
  2573                           
  2574  0490  303E               	movlw	low (STR_6| (0+32768))
  2575  0491  0020               	movlb	0	; select bank0
  2576  0492  00A0               	movwf	LCDWriteString@msg
  2577  0493  3087               	movlw	high (STR_6| (0+32768))
  2578  0494  00A1               	movwf	LCDWriteString@msg+1
  2579  0495  3187  2792  3184   	fcall	_LCDWriteString
  2580  0498  2CCC               	goto	l2690
  2581  0499                     l2680:	
  2582                           ;main.c: 54: case 5: LCDWriteString("Fri "); break;
  2583                           
  2584  0499  302A               	movlw	low (STR_7| (0+32768))
  2585  049A  0020               	movlb	0	; select bank0
  2586  049B  00A0               	movwf	LCDWriteString@msg
  2587  049C  3087               	movlw	high (STR_7| (0+32768))
  2588  049D  00A1               	movwf	LCDWriteString@msg+1
  2589  049E  3187  2792  3184   	fcall	_LCDWriteString
  2590  04A1  2CCC               	goto	l2690
  2591  04A2                     l2682:	
  2592                           ;main.c: 55: case 6: LCDWriteString("Sat "); break;
  2593                           
  2594  04A2  3039               	movlw	low (STR_8| (0+32768))
  2595  04A3  0020               	movlb	0	; select bank0
  2596  04A4  00A0               	movwf	LCDWriteString@msg
  2597  04A5  3087               	movlw	high (STR_8| (0+32768))
  2598  04A6  00A1               	movwf	LCDWriteString@msg+1
  2599  04A7  3187  2792  3184   	fcall	_LCDWriteString
  2600  04AA  2CCC               	goto	l2690
  2601  04AB                     l2684:	
  2602                           ;main.c: 56: case 7: LCDWriteString("Sun "); break;
  2603                           
  2604  04AB  3034               	movlw	low (STR_9| (0+32768))
  2605  04AC  0020               	movlb	0	; select bank0
  2606  04AD  00A0               	movwf	LCDWriteString@msg
  2607  04AE  3087               	movlw	high (STR_9| (0+32768))
  2608  04AF  00A1               	movwf	LCDWriteString@msg+1
  2609  04B0  3187  2792  3184   	fcall	_LCDWriteString
  2610                           
  2611                           ;main.c: 58: }
  2612                           
  2613                           ;main.c: 57: default:break;
  2614  04B3  2CCC               	goto	l2690
  2615  04B4                     l2688:	
  2616  04B4  0020               	movlb	0	; select bank0
  2617  04B5  084D               	movf	_dayoftheweek,w	;volatile
  2618                           
  2619                           ; Switch size 1, requested type "space"
  2620                           ; Number of cases is 7, Range of values is 1 to 7
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte           22    12 (average)
  2624                           ; direct_byte           23     9 (fixed)
  2625                           ; jumptable            263     9 (fixed)
  2626                           ;	Chosen strategy is simple_byte
  2627  04B6  3A01               	xorlw	1	; case 1
  2628  04B7  1903               	skipnz
  2629  04B8  2C75               	goto	l2672
  2630  04B9  3A03               	xorlw	3	; case 2
  2631  04BA  1903               	skipnz
  2632  04BB  2C7E               	goto	l2674
  2633  04BC  3A01               	xorlw	1	; case 3
  2634  04BD  1903               	skipnz
  2635  04BE  2C87               	goto	l2676
  2636  04BF  3A07               	xorlw	7	; case 4
  2637  04C0  1903               	skipnz
  2638  04C1  2C90               	goto	l2678
  2639  04C2  3A01               	xorlw	1	; case 5
  2640  04C3  1903               	skipnz
  2641  04C4  2C99               	goto	l2680
  2642  04C5  3A03               	xorlw	3	; case 6
  2643  04C6  1903               	skipnz
  2644  04C7  2CA2               	goto	l2682
  2645  04C8  3A01               	xorlw	1	; case 7
  2646  04C9  1903               	skipnz
  2647  04CA  2CAB               	goto	l2684
  2648  04CB  2CCC               	goto	l2690
  2649  04CC                     l2690:	
  2650                           
  2651                           ;main.c: 61: LCDWriteInt(day, 2);
  2652  04CC  0020               	movlb	0	; select bank0
  2653  04CD  084C               	movf	_day,w	;volatile
  2654  04CE  00B4               	movwf	??_ShowDate
  2655  04CF  01B5               	clrf	??_ShowDate+1
  2656  04D0  0834               	movf	??_ShowDate,w
  2657  04D1  00A0               	movwf	LCDWriteInt@val
  2658  04D2  0835               	movf	??_ShowDate+1,w
  2659  04D3  00A1               	movwf	LCDWriteInt@val+1
  2660  04D4  3002               	movlw	2
  2661  04D5  00B6               	movwf	??_ShowDate+2
  2662  04D6  0836               	movf	??_ShowDate+2,w
  2663  04D7  00A2               	movwf	LCDWriteInt@field_length
  2664  04D8  3185  2511  3184   	fcall	_LCDWriteInt
  2665                           
  2666                           ;main.c: 62: LCDWriteString(".");
  2667  04DB  3043               	movlw	low (STR_10| (0+32768))
  2668  04DC  0020               	movlb	0	; select bank0
  2669  04DD  00A0               	movwf	LCDWriteString@msg
  2670  04DE  3087               	movlw	high (STR_10| (0+32768))
  2671  04DF  00A1               	movwf	LCDWriteString@msg+1
  2672  04E0  3187  2792  3184   	fcall	_LCDWriteString
  2673                           
  2674                           ;main.c: 63: LCDWriteInt(month, 2);
  2675  04E3  0020               	movlb	0	; select bank0
  2676  04E4  084E               	movf	_month,w	;volatile
  2677  04E5  00B4               	movwf	??_ShowDate
  2678  04E6  01B5               	clrf	??_ShowDate+1
  2679  04E7  0834               	movf	??_ShowDate,w
  2680  04E8  00A0               	movwf	LCDWriteInt@val
  2681  04E9  0835               	movf	??_ShowDate+1,w
  2682  04EA  00A1               	movwf	LCDWriteInt@val+1
  2683  04EB  3002               	movlw	2
  2684  04EC  00B6               	movwf	??_ShowDate+2
  2685  04ED  0836               	movf	??_ShowDate+2,w
  2686  04EE  00A2               	movwf	LCDWriteInt@field_length
  2687  04EF  3185  2511  3184   	fcall	_LCDWriteInt
  2688                           
  2689                           ;main.c: 64: LCDWriteString(".");
  2690  04F2  3043               	movlw	low (STR_10| (0+32768))
  2691  04F3  0020               	movlb	0	; select bank0
  2692  04F4  00A0               	movwf	LCDWriteString@msg
  2693  04F5  3087               	movlw	high (STR_10| (0+32768))
  2694  04F6  00A1               	movwf	LCDWriteString@msg+1
  2695  04F7  3187  2792  3184   	fcall	_LCDWriteString
  2696                           
  2697                           ;main.c: 65: LCDWriteInt(year, 2);
  2698  04FA  0020               	movlb	0	; select bank0
  2699  04FB  084F               	movf	_year,w	;volatile
  2700  04FC  00B4               	movwf	??_ShowDate
  2701  04FD  01B5               	clrf	??_ShowDate+1
  2702  04FE  0834               	movf	??_ShowDate,w
  2703  04FF  00A0               	movwf	LCDWriteInt@val
  2704  0500  0835               	movf	??_ShowDate+1,w
  2705  0501  00A1               	movwf	LCDWriteInt@val+1
  2706  0502  3002               	movlw	2
  2707  0503  00B6               	movwf	??_ShowDate+2
  2708  0504  0836               	movf	??_ShowDate+2,w
  2709  0505  00A2               	movwf	LCDWriteInt@field_length
  2710  0506  3185  2511  3184   	fcall	_LCDWriteInt
  2711                           
  2712                           ;main.c: 66: LCDWriteString(".");
  2713  0509  3043               	movlw	low (STR_10| (0+32768))
  2714  050A  0020               	movlb	0	; select bank0
  2715  050B  00A0               	movwf	LCDWriteString@msg
  2716  050C  3087               	movlw	high (STR_10| (0+32768))
  2717  050D  00A1               	movwf	LCDWriteString@msg+1
  2718  050E  3187  2792         	fcall	_LCDWriteString
  2719  0510  0008               	return
  2720  0511                     __end_of_ShowDate:	
  2721                           
  2722                           	psect	text4
  2723  0792                     __ptext4:	
  2724 ;; *************** function _LCDWriteString *****************
  2725 ;; Defined at:
  2726 ;;		line 257 in file "lcd_hd44780_pic16.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  msg             2    0[BANK0 ] PTR const unsigned char 
  2729 ;;		 -> STR_26(2), STR_25(2), STR_24(2), STR_23(2), 
  2730 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2731 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2732 ;;		 -> STR_14(17), STR_13(15), STR_12(2), STR_11(2), 
  2733 ;;		 -> STR_10(2), STR_9(5), STR_8(5), STR_7(5), 
  2734 ;;		 -> STR_6(5), STR_5(5), STR_4(5), STR_3(5), 
  2735 ;;		 -> STR_2(2), STR_1(2), 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  cc              1    3[BANK0 ] char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;		None               void
  2740 ;; Registers used:
  2741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2747 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2750 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2751 ;;Total ram usage:        4 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; Hardware stack levels required when called:    3
  2754 ;; This function calls:
  2755 ;;		_LCDByte
  2756 ;; This function is called by:
  2757 ;;		_ShowTime
  2758 ;;		_ShowDate
  2759 ;;		_main
  2760 ;;		_Debug
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           
  2765                           ;psect for function _LCDWriteString
  2766  0792                     _LCDWriteString:	
  2767  0792                     l2524:	
  2768                           ;lcd_hd44780_pic16.c: 287: while(*msg!='\0')
  2769                           
  2770                           ;incstack = 0
  2771                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2772                           
  2773  0792  0020               	movlb	0	; select bank0
  2774  0793  0820               	movf	LCDWriteString@msg,w
  2775  0794  0084               	movwf	4
  2776  0795  0821               	movf	LCDWriteString@msg+1,w
  2777  0796  0085               	movwf	5
  2778  0797  0800               	movf	0,w	;code access
  2779  0798  3800               	iorlw	0
  2780  0799  1903               	btfsc	3,2
  2781  079A  0008               	return
  2782                           
  2783                           ;lcd_hd44780_pic16.c: 288: {
  2784                           ;lcd_hd44780_pic16.c: 290: if(*msg=='%')
  2785  079B  0020               	movlb	0	; select bank0
  2786  079C  0820               	movf	LCDWriteString@msg,w
  2787  079D  0084               	movwf	4
  2788  079E  0821               	movf	LCDWriteString@msg+1,w
  2789  079F  0085               	movwf	5
  2790  07A0  0800               	movf	0,w	;code access
  2791  07A1  3A25               	xorlw	37
  2792  07A2  1D03               	skipz
  2793  07A3  2FC2               	goto	l2520
  2794                           
  2795                           ;lcd_hd44780_pic16.c: 291: {
  2796                           ;lcd_hd44780_pic16.c: 292: msg++;
  2797  07A4  3001               	movlw	1
  2798  07A5  07A0               	addwf	LCDWriteString@msg,f
  2799  07A6  3000               	movlw	0
  2800  07A7  3DA1               	addwfc	LCDWriteString@msg+1,f
  2801                           
  2802                           ;lcd_hd44780_pic16.c: 293: int8_t cc=*msg-'0';
  2803  07A8  0820               	movf	LCDWriteString@msg,w
  2804  07A9  0084               	movwf	4
  2805  07AA  0821               	movf	LCDWriteString@msg+1,w
  2806  07AB  0085               	movwf	5
  2807  07AC  0800               	movf	0,w	;code access
  2808  07AD  3ED0               	addlw	-48
  2809  07AE  00A2               	movwf	??_LCDWriteString
  2810  07AF  0822               	movf	??_LCDWriteString,w
  2811  07B0  00A3               	movwf	LCDWriteString@cc
  2812                           
  2813                           ;lcd_hd44780_pic16.c: 295: if(cc>=0 && cc<=7)
  2814  07B1  1BA3               	btfsc	LCDWriteString@cc,7
  2815  07B2  2FBC               	goto	l2516
  2816  07B3  0823               	movf	LCDWriteString@cc,w
  2817  07B4  3A80               	xorlw	128
  2818  07B5  3E78               	addlw	-136
  2819  07B6  1803               	skipnc
  2820  07B7  2FBC               	goto	l2516
  2821                           
  2822                           ;lcd_hd44780_pic16.c: 296: {
  2823                           ;lcd_hd44780_pic16.c: 297: (LCDByte(cc,1));
  2824  07B8  01F4               	clrf	LCDByte@isdata
  2825  07B9  0AF4               	incf	LCDByte@isdata,f
  2826  07BA  0823               	movf	LCDWriteString@cc,w
  2827  07BB  2FCA               	goto	L1
  2828  07BC                     l2516:	
  2829                           ;lcd_hd44780_pic16.c: 298: }
  2830                           
  2831                           
  2832                           ;lcd_hd44780_pic16.c: 299: else
  2833                           ;lcd_hd44780_pic16.c: 300: {
  2834                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  2835  07BC  01F4               	clrf	LCDByte@isdata
  2836  07BD  0AF4               	incf	LCDByte@isdata,f
  2837  07BE  3025               	movlw	37
  2838  07BF  3186  2657  3187   	fcall	_LCDByte
  2839  07C2                     l2520:	
  2840                           ;lcd_hd44780_pic16.c: 303: }
  2841                           ;lcd_hd44780_pic16.c: 304: }
  2842                           
  2843                           ;lcd_hd44780_pic16.c: 302: (LCDByte(*msg,1));
  2844                           
  2845                           
  2846                           ;lcd_hd44780_pic16.c: 305: else
  2847                           ;lcd_hd44780_pic16.c: 306: {
  2848                           ;lcd_hd44780_pic16.c: 307: (LCDByte(*msg,1));
  2849  07C2  01F4               	clrf	LCDByte@isdata
  2850  07C3  0AF4               	incf	LCDByte@isdata,f
  2851  07C4  0020               	movlb	0	; select bank0
  2852  07C5  0820               	movf	LCDWriteString@msg,w
  2853  07C6  0084               	movwf	4
  2854  07C7  0821               	movf	LCDWriteString@msg+1,w
  2855  07C8  0085               	movwf	5
  2856  07C9  0800               	movf	0,w	;code access
  2857  07CA                     L1:	
  2858  07CA  3186  2657  3187   	fcall	_LCDByte
  2859                           
  2860                           ;lcd_hd44780_pic16.c: 308: }
  2861                           ;lcd_hd44780_pic16.c: 309: msg++;
  2862  07CD  3001               	movlw	1
  2863  07CE  0020               	movlb	0	; select bank0
  2864  07CF  07A0               	addwf	LCDWriteString@msg,f
  2865  07D0  3000               	movlw	0
  2866  07D1  3DA1               	addwfc	LCDWriteString@msg+1,f
  2867  07D2  2F92               	goto	l2524
  2868  07D3                     __end_of_LCDWriteString:	
  2869                           
  2870                           	psect	text5
  2871  0511                     __ptext5:	
  2872 ;; *************** function _LCDWriteInt *****************
  2873 ;; Defined at:
  2874 ;;		line 313 in file "lcd_hd44780_pic16.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  val             2    0[BANK0 ] int 
  2877 ;;  field_length    1    2[BANK0 ] char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  str             5    5[BANK0 ] unsigned char [5]
  2880 ;;  i               2   12[BANK0 ] int 
  2881 ;;  j               2   10[BANK0 ] int 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;		None               void
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2891 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2892 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2893 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2895 ;;Total ram usage:       14 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    3
  2898 ;; This function calls:
  2899 ;;		_LCDByte
  2900 ;;		___awdiv
  2901 ;;		___awmod
  2902 ;; This function is called by:
  2903 ;;		_ShowTime
  2904 ;;		_ShowDate
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _LCDWriteInt
  2910  0511                     _LCDWriteInt:	
  2911                           
  2912                           ;lcd_hd44780_pic16.c: 326: char str[5]={0,0,0,0,0};
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2916  0511  303D               	movlw	low LCDWriteInt@F2720
  2917  0512  0086               	movwf	6
  2918  0513  3000               	movlw	high LCDWriteInt@F2720
  2919  0514  0087               	movwf	7
  2920  0515  3025               	movlw	low LCDWriteInt@str
  2921  0516  0084               	movwf	4
  2922  0517  3000               	movlw	high LCDWriteInt@str
  2923  0518  0085               	movwf	5
  2924  0519  3005               	movlw	5
  2925  051A  0020               	movlb	0	; select bank0
  2926  051B  00A3               	movwf	??_LCDWriteInt
  2927  051C                     u1540:	
  2928  051C  0016               	moviw fsr1++
  2929  051D  001A               	movwi fsr0++
  2930  051E  0BA3               	decfsz	??_LCDWriteInt,f
  2931  051F  2D1C               	goto	u1540
  2932                           
  2933                           ;lcd_hd44780_pic16.c: 327: int i=4,j=0;
  2934  0520  3004               	movlw	4
  2935  0521  00AC               	movwf	LCDWriteInt@i
  2936  0522  3000               	movlw	0
  2937  0523  00AD               	movwf	LCDWriteInt@i+1
  2938  0524  01AA               	clrf	LCDWriteInt@j
  2939  0525  01AB               	clrf	LCDWriteInt@j+1
  2940                           
  2941                           ;lcd_hd44780_pic16.c: 330: if(val<0)
  2942  0526  1FA1               	btfss	LCDWriteInt@val+1,7
  2943  0527  2D34               	goto	l1908
  2944                           
  2945                           ;lcd_hd44780_pic16.c: 331: {
  2946                           ;lcd_hd44780_pic16.c: 332: (LCDByte('-',1));
  2947  0528  01F4               	clrf	LCDByte@isdata
  2948  0529  0AF4               	incf	LCDByte@isdata,f
  2949  052A  302D               	movlw	45
  2950  052B  3186  2657  3185   	fcall	_LCDByte
  2951                           
  2952                           ;lcd_hd44780_pic16.c: 333: val=val*-1;
  2953  052E  0020               	movlb	0	; select bank0
  2954  052F  09A0               	comf	LCDWriteInt@val,f
  2955  0530  09A1               	comf	LCDWriteInt@val+1,f
  2956  0531  0AA0               	incf	LCDWriteInt@val,f
  2957  0532  1903               	skipnz
  2958  0533  0AA1               	incf	LCDWriteInt@val+1,f
  2959  0534                     l1908:	
  2960                           ;lcd_hd44780_pic16.c: 334: }
  2961                           ;lcd_hd44780_pic16.c: 336: while(val)
  2962                           
  2963  0534  0821               	movf	LCDWriteInt@val+1,w
  2964  0535  0420               	iorwf	LCDWriteInt@val,w
  2965  0536  1903               	btfsc	3,2
  2966  0537  2D67               	goto	l1910
  2967                           
  2968                           ;lcd_hd44780_pic16.c: 337: {
  2969                           ;lcd_hd44780_pic16.c: 338: str[i]=val%10;
  2970  0538  300A               	movlw	10
  2971  0539  00F2               	movwf	___awmod@divisor
  2972  053A  3000               	movlw	0
  2973  053B  00F3               	movwf	___awmod@divisor+1
  2974  053C  0821               	movf	LCDWriteInt@val+1,w
  2975  053D  01F5               	clrf	___awmod@dividend+1
  2976  053E  07F5               	addwf	___awmod@dividend+1,f
  2977  053F  0820               	movf	LCDWriteInt@val,w
  2978  0540  01F4               	clrf	___awmod@dividend
  2979  0541  07F4               	addwf	___awmod@dividend,f
  2980  0542  3187  274B  3185   	fcall	___awmod
  2981  0545  0872               	movf	?___awmod,w
  2982  0546  0020               	movlb	0	; select bank0
  2983  0547  00A3               	movwf	??_LCDWriteInt
  2984  0548  082C               	movf	LCDWriteInt@i,w
  2985  0549  3E25               	addlw	LCDWriteInt@str& (0+255)
  2986  054A  0086               	movwf	6
  2987  054B  0187               	clrf	7
  2988  054C  0823               	movf	??_LCDWriteInt,w
  2989  054D  0081               	movwf	1
  2990                           
  2991                           ;lcd_hd44780_pic16.c: 339: val=val/10;
  2992  054E  300A               	movlw	10
  2993  054F  00F2               	movwf	___awdiv@divisor
  2994  0550  3000               	movlw	0
  2995  0551  00F3               	movwf	___awdiv@divisor+1
  2996  0552  0821               	movf	LCDWriteInt@val+1,w
  2997  0553  01F5               	clrf	___awdiv@dividend+1
  2998  0554  07F5               	addwf	___awdiv@dividend+1,f
  2999  0555  0820               	movf	LCDWriteInt@val,w
  3000  0556  01F4               	clrf	___awdiv@dividend
  3001  0557  07F4               	addwf	___awdiv@dividend,f
  3002  0558  3186  2604  3185   	fcall	___awdiv
  3003  055B  0873               	movf	?___awdiv+1,w
  3004  055C  0020               	movlb	0	; select bank0
  3005  055D  01A1               	clrf	LCDWriteInt@val+1
  3006  055E  07A1               	addwf	LCDWriteInt@val+1,f
  3007  055F  0872               	movf	?___awdiv,w
  3008  0560  01A0               	clrf	LCDWriteInt@val
  3009  0561  07A0               	addwf	LCDWriteInt@val,f
  3010                           
  3011                           ;lcd_hd44780_pic16.c: 340: i--;
  3012  0562  30FF               	movlw	255
  3013  0563  07AC               	addwf	LCDWriteInt@i,f
  3014  0564  30FF               	movlw	255
  3015  0565  3DAD               	addwfc	LCDWriteInt@i+1,f
  3016  0566  2D34               	goto	l1908
  3017  0567                     l1910:	
  3018                           
  3019                           ;lcd_hd44780_pic16.c: 341: }
  3020                           ;lcd_hd44780_pic16.c: 342: if(field_length==-1)
  3021  0567  0822               	movf	LCDWriteInt@field_length,w
  3022  0568  3AFF               	xorlw	255
  3023  0569  1903               	btfsc	3,2
  3024  056A  2D70               	goto	l1916
  3025  056B  2D79               	goto	l1918
  3026  056C                     l1914:	
  3027                           ;lcd_hd44780_pic16.c: 343: while(str[j]==0) j++;
  3028                           
  3029  056C  3001               	movlw	1
  3030  056D  07AA               	addwf	LCDWriteInt@j,f
  3031  056E  3000               	movlw	0
  3032  056F  3DAB               	addwfc	LCDWriteInt@j+1,f
  3033  0570                     l1916:	
  3034  0570  082A               	movf	LCDWriteInt@j,w
  3035  0571  3E25               	addlw	LCDWriteInt@str& (0+255)
  3036  0572  0086               	movwf	6
  3037  0573  0187               	clrf	7
  3038  0574  0801               	movf	1,w
  3039  0575  3A00               	xorlw	0
  3040  0576  1D03               	btfss	3,2
  3041  0577  2D89               	goto	l280
  3042  0578  2D6C               	goto	l1914
  3043  0579                     l1918:	
  3044                           
  3045                           ;lcd_hd44780_pic16.c: 344: else
  3046                           ;lcd_hd44780_pic16.c: 345: j=5-field_length;
  3047  0579  0822               	movf	LCDWriteInt@field_length,w
  3048  057A  00A3               	movwf	??_LCDWriteInt
  3049  057B  01A4               	clrf	??_LCDWriteInt+1
  3050  057C  1BA3               	btfsc	??_LCDWriteInt,7
  3051  057D  03A4               	decf	??_LCDWriteInt+1,f
  3052  057E  09A3               	comf	??_LCDWriteInt,f
  3053  057F  09A4               	comf	??_LCDWriteInt+1,f
  3054  0580  0AA3               	incf	??_LCDWriteInt,f
  3055  0581  1903               	skipnz
  3056  0582  0AA4               	incf	??_LCDWriteInt+1,f
  3057  0583  0823               	movf	??_LCDWriteInt,w
  3058  0584  3E05               	addlw	5
  3059  0585  00AA               	movwf	LCDWriteInt@j
  3060  0586  3000               	movlw	0
  3061  0587  3D24               	addwfc	??_LCDWriteInt+1,w
  3062  0588  00AB               	movwf	LCDWriteInt@j+1
  3063  0589                     l280:	
  3064                           
  3065                           ;lcd_hd44780_pic16.c: 348: for(i=j;i<5;i++)
  3066  0589  082B               	movf	LCDWriteInt@j+1,w
  3067  058A  01AD               	clrf	LCDWriteInt@i+1
  3068  058B  07AD               	addwf	LCDWriteInt@i+1,f
  3069  058C  082A               	movf	LCDWriteInt@j,w
  3070  058D  01AC               	clrf	LCDWriteInt@i
  3071  058E  07AC               	addwf	LCDWriteInt@i,f
  3072  058F                     L2:	
  3073  058F  082D               	movf	LCDWriteInt@i+1,w
  3074  0590  3A80               	xorlw	128
  3075  0591  00A3               	movwf	??_LCDWriteInt
  3076  0592  3080               	movlw	128
  3077  0593  0223               	subwf	??_LCDWriteInt,w
  3078  0594  1D03               	skipz
  3079  0595  2D98               	goto	u1595
  3080  0596  3005               	movlw	5
  3081  0597  022C               	subwf	LCDWriteInt@i,w
  3082  0598                     u1595:	
  3083  0598  1803               	btfsc	3,0
  3084  0599  0008               	return
  3085                           
  3086                           ;lcd_hd44780_pic16.c: 349: {
  3087                           ;lcd_hd44780_pic16.c: 350: (LCDByte(48+str[i],1));
  3088  059A  01F4               	clrf	LCDByte@isdata
  3089  059B  0AF4               	incf	LCDByte@isdata,f
  3090  059C  0020               	movlb	0	; select bank0
  3091  059D  082C               	movf	LCDWriteInt@i,w
  3092  059E  3E25               	addlw	LCDWriteInt@str& (0+255)
  3093  059F  0086               	movwf	6
  3094  05A0  0187               	clrf	7
  3095  05A1  0801               	movf	1,w
  3096  05A2  3E30               	addlw	48
  3097  05A3  3186  2657  3185   	fcall	_LCDByte
  3098  05A6  3001               	movlw	1
  3099  05A7  0020               	movlb	0	; select bank0
  3100  05A8  07AC               	addwf	LCDWriteInt@i,f
  3101  05A9  3000               	movlw	0
  3102  05AA  3DAD               	addwfc	LCDWriteInt@i+1,f
  3103  05AB  2D8F               	goto	L2
  3104  05AC                     __end_of_LCDWriteInt:	
  3105                           
  3106                           	psect	text6
  3107  0F9C                     __ptext6:	
  3108 ;; *************** function _LCDGotoXY *****************
  3109 ;; Defined at:
  3110 ;;		line 358 in file "lcd_hd44780_pic16.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  x               1    wreg     unsigned char 
  3113 ;;  y               1    0[BANK0 ] unsigned char 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  x               1    2[BANK0 ] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;		None               void
  3118 ;; Registers used:
  3119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3125 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;Total ram usage:        3 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    3
  3132 ;; This function calls:
  3133 ;;		_LCDByte
  3134 ;; This function is called by:
  3135 ;;		_ShowTime
  3136 ;;		_ShowDate
  3137 ;;		_main
  3138 ;;		_Debug
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           
  3143                           ;psect for function _LCDGotoXY
  3144  0F9C                     _LCDGotoXY:	
  3145                           
  3146                           ;incstack = 0
  3147                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3148                           ;LCDGotoXY@x stored from wreg
  3149  0F9C  0020               	movlb	0	; select bank0
  3150  0F9D  00A2               	movwf	LCDGotoXY@x
  3151                           
  3152                           ;lcd_hd44780_pic16.c: 360: if(x>=20) return;
  3153  0F9E  3014               	movlw	20
  3154  0F9F  0222               	subwf	LCDGotoXY@x,w
  3155  0FA0  1803               	btfsc	3,0
  3156  0FA1  0008               	return
  3157  0FA2  2FAC               	goto	l2498
  3158  0FA3                     l291:	
  3159                           ;lcd_hd44780_pic16.c: 368: case 1:
  3160                           
  3161                           ;lcd_hd44780_pic16.c: 367: break;
  3162                           
  3163                           ;lcd_hd44780_pic16.c: 365: {
  3164                           ;lcd_hd44780_pic16.c: 366: case 0:
  3165                           
  3166                           ;lcd_hd44780_pic16.c: 364: switch(y)
  3167                           
  3168                           
  3169                           ;lcd_hd44780_pic16.c: 369: x|=0b01000000;
  3170  0FA3  1722               	bsf	LCDGotoXY@x,6
  3171                           
  3172                           ;lcd_hd44780_pic16.c: 370: break;
  3173  0FA4  2FBA               	goto	l290
  3174  0FA5                     l2492:	
  3175                           ;lcd_hd44780_pic16.c: 371: case 2:
  3176                           
  3177                           
  3178                           ;lcd_hd44780_pic16.c: 372: x+=0x14;
  3179  0FA5  3014               	movlw	20
  3180  0FA6  2FA8               	goto	L3
  3181  0FA7                     l2494:	
  3182                           ;lcd_hd44780_pic16.c: 374: case 3:
  3183                           
  3184                           ;lcd_hd44780_pic16.c: 373: break;
  3185                           
  3186                           
  3187                           ;lcd_hd44780_pic16.c: 375: x+=0x54;
  3188  0FA7  3054               	movlw	84
  3189  0FA8                     L3:	
  3190  0FA8  00A1               	movwf	??_LCDGotoXY
  3191  0FA9  0821               	movf	??_LCDGotoXY,w
  3192  0FAA  07A2               	addwf	LCDGotoXY@x,f
  3193                           
  3194                           ;lcd_hd44780_pic16.c: 377: }
  3195                           
  3196                           ;lcd_hd44780_pic16.c: 376: break;
  3197  0FAB  2FBA               	goto	l290
  3198  0FAC                     l2498:	
  3199  0FAC  0820               	movf	LCDGotoXY@y,w
  3200                           
  3201                           ; Switch size 1, requested type "space"
  3202                           ; Number of cases is 4, Range of values is 0 to 3
  3203                           ; switch strategies available:
  3204                           ; Name         Instructions Cycles
  3205                           ; simple_byte           13     7 (average)
  3206                           ; direct_byte           14     6 (fixed)
  3207                           ; jumptable            260     6 (fixed)
  3208                           ;	Chosen strategy is simple_byte
  3209  0FAD  3A00               	xorlw	0	; case 0
  3210  0FAE  1903               	skipnz
  3211  0FAF  2FBA               	goto	l290
  3212  0FB0  3A01               	xorlw	1	; case 1
  3213  0FB1  1903               	skipnz
  3214  0FB2  2FA3               	goto	l291
  3215  0FB3  3A03               	xorlw	3	; case 2
  3216  0FB4  1903               	skipnz
  3217  0FB5  2FA5               	goto	l2492
  3218  0FB6  3A01               	xorlw	1	; case 3
  3219  0FB7  1903               	skipnz
  3220  0FB8  2FA7               	goto	l2494
  3221  0FB9  2FBA               	goto	l290
  3222  0FBA                     l290:	
  3223                           
  3224                           ;lcd_hd44780_pic16.c: 399: x|=0b10000000;
  3225  0FBA  17A2               	bsf	LCDGotoXY@x,7
  3226                           
  3227                           ;lcd_hd44780_pic16.c: 400: (LCDByte(x,0));
  3228  0FBB  01F4               	clrf	LCDByte@isdata
  3229  0FBC  0822               	movf	LCDGotoXY@x,w
  3230  0FBD  3186  2657         	fcall	_LCDByte
  3231  0FBF  0008               	return
  3232  0FC0                     __end_of_LCDGotoXY:	
  3233                           
  3234                           	psect	text7
  3235  0EA8                     __ptext7:	
  3236 ;; *************** function _SetUpDevice *****************
  3237 ;; Defined at:
  3238 ;;		line 204 in file "main.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;		None               void
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function _SetUpDevice
  3268  0EA8                     _SetUpDevice:	
  3269                           
  3270                           ;main.c: 206: OSCCONbits.IRCF = 0b1110;
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _SetUpDevice: [wreg+status,2+status,0]
  3274  0EA8  0021               	movlb	1	; select bank1
  3275  0EA9  0819               	movf	25,w	;volatile
  3276  0EAA  3987               	andlw	-121
  3277  0EAB  3870               	iorlw	112
  3278  0EAC  0099               	movwf	25	;volatile
  3279                           
  3280                           ;main.c: 230: OSCCONbits.SCS = 0x00;
  3281  0EAD  30FC               	movlw	-4
  3282  0EAE  0599               	andwf	25,f	;volatile
  3283                           
  3284                           ;main.c: 231: OSCCONbits.SPLLEN = 1;
  3285  0EAF  1799               	bsf	25,7	;volatile
  3286                           
  3287                           ;main.c: 234: OPTION_REGbits.TMR0CS = 0;
  3288  0EB0  1295               	bcf	21,5	;volatile
  3289                           
  3290                           ;main.c: 235: OPTION_REGbits.PS = 0b101;
  3291  0EB1  0815               	movf	21,w	;volatile
  3292  0EB2  39F8               	andlw	-8
  3293  0EB3  3805               	iorlw	5
  3294  0EB4  0095               	movwf	21	;volatile
  3295                           
  3296                           ;main.c: 236: OPTION_REGbits.PSA = 0;
  3297  0EB5  1195               	bcf	21,3	;volatile
  3298                           
  3299                           ;main.c: 239: ANSELA = 0x00;
  3300  0EB6  0023               	movlb	3	; select bank3
  3301  0EB7  018C               	clrf	12	;volatile
  3302                           
  3303                           ;main.c: 240: ANSELC = 0x00;
  3304  0EB8  018E               	clrf	14	;volatile
  3305                           
  3306                           ;main.c: 242: TRISC = 0x00;
  3307  0EB9  0021               	movlb	1	; select bank1
  3308  0EBA  018E               	clrf	14	;volatile
  3309                           
  3310                           ;main.c: 244: TRISAbits.TRISA5 = 1;
  3311  0EBB  168C               	bsf	12,5	;volatile
  3312                           
  3313                           ;main.c: 245: TRISAbits.TRISA4 = 1;
  3314  0EBC  160C               	bsf	12,4	;volatile
  3315  0EBD  0008               	return
  3316  0EBE                     __end_of_SetUpDevice:	
  3317                           
  3318                           	psect	text8
  3319  05AC                     __ptext8:	
  3320 ;; *************** function _LCDInit *****************
  3321 ;; Defined at:
  3322 ;;		line 199 in file "lcd_hd44780_pic16.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  style           1    wreg     unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  style           1    3[BANK0 ] unsigned char 
  3327 ;;  __i             1    4[BANK0 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;		None               void
  3330 ;; Registers used:
  3331 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:        5 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    3
  3344 ;; This function calls:
  3345 ;;		_LCDBusyLoop
  3346 ;;		_LCDByte
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _LCDInit
  3354  05AC                     _LCDInit:	
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3358                           ;LCDInit@style stored from wreg
  3359  05AC  0020               	movlb	0	; select bank0
  3360  05AD  00A3               	movwf	LCDInit@style
  3361                           
  3362                           ;lcd_hd44780_pic16.c: 215: _delay((unsigned long)((30)*(32000000ULL/4000.0)));
  3363  05AE  3002               	movlw	2
  3364  05AF  00A2               	movwf	??_LCDInit+2
  3365  05B0  3038               	movlw	56
  3366  05B1  00A1               	movwf	??_LCDInit+1
  3367  05B2  30AD               	movlw	173
  3368  05B3  00A0               	movwf	??_LCDInit
  3369  05B4                     u2517:	
  3370  05B4  0BA0               	decfsz	??_LCDInit,f
  3371  05B5  2DB4               	goto	u2517
  3372  05B6  0BA1               	decfsz	??_LCDInit+1,f
  3373  05B7  2DB4               	goto	u2517
  3374  05B8  0BA2               	decfsz	??_LCDInit+2,f
  3375  05B9  2DB4               	goto	u2517
  3376                           
  3377                           ;lcd_hd44780_pic16.c: 218: TRISC&=(~(0x0F<<2));
  3378  05BA  30C3               	movlw	195
  3379  05BB  0020               	movlb	0	; select bank0
  3380  05BC  00A0               	movwf	??_LCDInit
  3381  05BD  0820               	movf	??_LCDInit,w
  3382  05BE  0021               	movlb	1	; select bank1
  3383  05BF  058E               	andwf	14,f	;volatile
  3384                           
  3385                           ;lcd_hd44780_pic16.c: 220: TRISAbits.TRISA2=0;
  3386  05C0  110C               	bcf	12,2	;volatile
  3387                           
  3388                           ;lcd_hd44780_pic16.c: 221: TRISAbits.TRISA0=0;
  3389  05C1  100C               	bcf	12,0	;volatile
  3390                           
  3391                           ;lcd_hd44780_pic16.c: 222: TRISAbits.TRISA1=0;
  3392  05C2  108C               	bcf	12,1	;volatile
  3393                           
  3394                           ;lcd_hd44780_pic16.c: 224: PORTC&=(~(0x0F<<2));
  3395  05C3  30C3               	movlw	195
  3396  05C4  0020               	movlb	0	; select bank0
  3397  05C5  00A0               	movwf	??_LCDInit
  3398  05C6  0820               	movf	??_LCDInit,w
  3399  05C7  058E               	andwf	14,f	;volatile
  3400                           
  3401                           ;lcd_hd44780_pic16.c: 226: (RA2=0);
  3402  05C8  110C               	bcf	12,2	;volatile
  3403                           
  3404                           ;lcd_hd44780_pic16.c: 227: (RA1=0);
  3405  05C9  108C               	bcf	12,1	;volatile
  3406                           
  3407                           ;lcd_hd44780_pic16.c: 228: (RA0=0);
  3408  05CA  100C               	bcf	12,0	;volatile
  3409                           
  3410                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((0.5)*(32000000ULL/4000000.0)));
  3411  05CB  3200               	nop2	;2 cycle nop
  3412  05CC  3200               	nop2	;2 cycle nop
  3413                           
  3414                           ;lcd_hd44780_pic16.c: 233: (RA2=1);
  3415  05CD  0020               	movlb	0	; select bank0
  3416  05CE  150C               	bsf	12,2	;volatile
  3417                           
  3418                           ;lcd_hd44780_pic16.c: 234: PORTC|=((0b00000010)<<2);
  3419  05CF  158E               	bsf	14,3	;volatile
  3420                           
  3421                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3422  05D0  3200               	nop2	;2 cycle nop
  3423  05D1  3200               	nop2	;2 cycle nop
  3424  05D2  3200               	nop2	;2 cycle nop
  3425  05D3  3200               	nop2	;2 cycle nop
  3426                           
  3427                           ;lcd_hd44780_pic16.c: 236: (RA2=0);
  3428  05D4  0020               	movlb	0	; select bank0
  3429  05D5  110C               	bcf	12,2	;volatile
  3430                           
  3431                           ;lcd_hd44780_pic16.c: 237: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3432  05D6  3200               	nop2	;2 cycle nop
  3433  05D7  3200               	nop2	;2 cycle nop
  3434  05D8  3200               	nop2	;2 cycle nop
  3435  05D9  3200               	nop2	;2 cycle nop
  3436                           
  3437                           ;lcd_hd44780_pic16.c: 240: LCDBusyLoop();
  3438  05DA  3186  26F4  3185   	fcall	_LCDBusyLoop
  3439                           
  3440                           ;lcd_hd44780_pic16.c: 245: (LCDByte(0b00101000,0));
  3441  05DD  01F4               	clrf	LCDByte@isdata
  3442  05DE  3028               	movlw	40
  3443  05DF  3186  2657  3185   	fcall	_LCDByte
  3444                           
  3445                           ;lcd_hd44780_pic16.c: 246: (LCDByte(0b00001100|style,0));
  3446  05E2  01F4               	clrf	LCDByte@isdata
  3447  05E3  0020               	movlb	0	; select bank0
  3448  05E4  0823               	movf	LCDInit@style,w
  3449  05E5  380C               	iorlw	12
  3450  05E6  3186  2657  3185   	fcall	_LCDByte
  3451                           
  3452                           ;lcd_hd44780_pic16.c: 249: (LCDByte(0b01000000,0));
  3453  05E9  01F4               	clrf	LCDByte@isdata
  3454  05EA  3040               	movlw	64
  3455  05EB  3186  2657  3185   	fcall	_LCDByte
  3456                           
  3457                           ;lcd_hd44780_pic16.c: 251: uint8_t __i;
  3458                           ;lcd_hd44780_pic16.c: 252: for(__i=0;__i<sizeof(__cgram);__i++)
  3459  05EE  0020               	movlb	0	; select bank0
  3460  05EF  01A4               	clrf	LCDInit@__i
  3461  05F0                     L4:	
  3462  05F0  3040               	movlw	64
  3463  05F1  0224               	subwf	LCDInit@__i,w
  3464  05F2  1803               	btfsc	3,0
  3465  05F3  0008               	return
  3466                           
  3467                           ;lcd_hd44780_pic16.c: 253: (LCDByte(__cgram[__i],1));
  3468  05F4  01F4               	clrf	LCDByte@isdata
  3469  05F5  0AF4               	incf	LCDByte@isdata,f
  3470  05F6  0824               	movf	LCDInit@__i,w
  3471  05F7  3EA0               	addlw	___cgram& (0+255)
  3472  05F8  0086               	movwf	6
  3473  05F9  0187               	clrf	7
  3474  05FA  0801               	movf	1,w
  3475  05FB  3186  2657  3185   	fcall	_LCDByte
  3476  05FE  3001               	movlw	1
  3477  05FF  0020               	movlb	0	; select bank0
  3478  0600  00A0               	movwf	??_LCDInit
  3479  0601  0820               	movf	??_LCDInit,w
  3480  0602  07A4               	addwf	LCDInit@__i,f
  3481  0603  2DF0               	goto	L4
  3482  0604                     __end_of_LCDInit:	
  3483                           
  3484                           	psect	text9
  3485  0657                     __ptext9:	
  3486 ;; *************** function _LCDByte *****************
  3487 ;; Defined at:
  3488 ;;		line 82 in file "lcd_hd44780_pic16.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  c               1    wreg     unsigned char 
  3491 ;;  isdata          1    4[COMMON] unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  c               1    9[COMMON] unsigned char 
  3494 ;;  temp            1   10[COMMON] unsigned char 
  3495 ;;  ln              1    8[COMMON] unsigned char 
  3496 ;;  hn              1    7[COMMON] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;		None               void
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;Total ram usage:        7 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    2
  3513 ;; This function calls:
  3514 ;;		_LCDBusyLoop
  3515 ;; This function is called by:
  3516 ;;		_ShowTime
  3517 ;;		_ShowDate
  3518 ;;		_main
  3519 ;;		_LCDInit
  3520 ;;		_LCDWriteString
  3521 ;;		_LCDWriteInt
  3522 ;;		_LCDGotoXY
  3523 ;;		_Debug
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _LCDByte
  3529  0657                     _LCDByte:	
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  3533                           ;LCDByte@c stored from wreg
  3534  0657  00F9               	movwf	LCDByte@c
  3535                           
  3536                           ;lcd_hd44780_pic16.c: 91: uint8_t hn,ln;
  3537                           ;lcd_hd44780_pic16.c: 92: uint8_t temp;
  3538                           ;lcd_hd44780_pic16.c: 94: hn=c>>4;
  3539  0658  0879               	movf	LCDByte@c,w
  3540  0659  00F5               	movwf	??_LCDByte
  3541  065A  3004               	movlw	4
  3542  065B                     u1305:	
  3543  065B  36F5               	lsrf	??_LCDByte,f
  3544  065C  0B89               	decfsz	9,f
  3545  065D  2E5B               	goto	u1305
  3546  065E  0875               	movf	??_LCDByte,w
  3547  065F  00F6               	movwf	??_LCDByte+1
  3548  0660  0876               	movf	??_LCDByte+1,w
  3549  0661  00F7               	movwf	LCDByte@hn
  3550                           
  3551                           ;lcd_hd44780_pic16.c: 95: ln=(c & 0x0F);
  3552  0662  0879               	movf	LCDByte@c,w
  3553  0663  390F               	andlw	15
  3554  0664  00F5               	movwf	??_LCDByte
  3555  0665  0875               	movf	??_LCDByte,w
  3556  0666  00F8               	movwf	LCDByte@ln
  3557                           
  3558                           ;lcd_hd44780_pic16.c: 97: if(isdata==0)
  3559  0667  08F4               	movf	LCDByte@isdata,f
  3560  0668  1D03               	skipz
  3561  0669  2E6D               	goto	l247
  3562                           
  3563                           ;lcd_hd44780_pic16.c: 98: (RA0=0);
  3564  066A  0020               	movlb	0	; select bank0
  3565  066B  100C               	bcf	12,0	;volatile
  3566  066C  2E6F               	goto	l248
  3567  066D                     l247:	
  3568                           
  3569                           ;lcd_hd44780_pic16.c: 99: else
  3570                           ;lcd_hd44780_pic16.c: 100: (RA0=1);
  3571  066D  0020               	movlb	0	; select bank0
  3572  066E  140C               	bsf	12,0	;volatile
  3573  066F                     l248:	
  3574                           
  3575                           ;lcd_hd44780_pic16.c: 102: _delay((unsigned long)((0.5)*(32000000ULL/4000000.0)));
  3576  066F  3200               	nop2	;2 cycle nop
  3577  0670  3200               	nop2	;2 cycle nop
  3578                           
  3579                           ;lcd_hd44780_pic16.c: 104: (RA2=1);
  3580  0671  0020               	movlb	0	; select bank0
  3581  0672  150C               	bsf	12,2	;volatile
  3582                           
  3583                           ;lcd_hd44780_pic16.c: 108: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  3584  0673  0877               	movf	LCDByte@hn,w
  3585  0674  00F5               	movwf	??_LCDByte
  3586  0675  3002               	movlw	2
  3587  0676                     u1325:	
  3588  0676  35F5               	lslf	??_LCDByte,f
  3589  0677  0B89               	decfsz	9,f
  3590  0678  2E76               	goto	u1325
  3591  0679  080E               	movf	14,w	;volatile
  3592  067A  39C3               	andlw	195
  3593  067B  0475               	iorwf	??_LCDByte,w
  3594  067C  00F6               	movwf	??_LCDByte+1
  3595  067D  0876               	movf	??_LCDByte+1,w
  3596  067E  00FA               	movwf	LCDByte@temp
  3597                           
  3598                           ;lcd_hd44780_pic16.c: 109: PORTC=temp;
  3599  067F  087A               	movf	LCDByte@temp,w
  3600  0680  008E               	movwf	14	;volatile
  3601                           
  3602                           ;lcd_hd44780_pic16.c: 111: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3603  0681  3200               	nop2	;2 cycle nop
  3604  0682  3200               	nop2	;2 cycle nop
  3605  0683  3200               	nop2	;2 cycle nop
  3606  0684  3200               	nop2	;2 cycle nop
  3607                           
  3608                           ;lcd_hd44780_pic16.c: 115: (RA2=0);
  3609  0685  0020               	movlb	0	; select bank0
  3610  0686  110C               	bcf	12,2	;volatile
  3611                           
  3612                           ;lcd_hd44780_pic16.c: 117: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3613  0687  3200               	nop2	;2 cycle nop
  3614  0688  3200               	nop2	;2 cycle nop
  3615  0689  3200               	nop2	;2 cycle nop
  3616  068A  3200               	nop2	;2 cycle nop
  3617                           
  3618                           ;lcd_hd44780_pic16.c: 120: (RA2=1);
  3619  068B  0020               	movlb	0	; select bank0
  3620  068C  150C               	bsf	12,2	;volatile
  3621                           
  3622                           ;lcd_hd44780_pic16.c: 122: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  3623  068D  0878               	movf	LCDByte@ln,w
  3624  068E  00F5               	movwf	??_LCDByte
  3625  068F  3002               	movlw	2
  3626  0690                     u1335:	
  3627  0690  35F5               	lslf	??_LCDByte,f
  3628  0691  0B89               	decfsz	9,f
  3629  0692  2E90               	goto	u1335
  3630  0693  080E               	movf	14,w	;volatile
  3631  0694  39C3               	andlw	195
  3632  0695  0475               	iorwf	??_LCDByte,w
  3633  0696  00F6               	movwf	??_LCDByte+1
  3634  0697  0876               	movf	??_LCDByte+1,w
  3635  0698  00FA               	movwf	LCDByte@temp
  3636                           
  3637                           ;lcd_hd44780_pic16.c: 124: PORTC=temp;
  3638  0699  087A               	movf	LCDByte@temp,w
  3639  069A  008E               	movwf	14	;volatile
  3640                           
  3641                           ;lcd_hd44780_pic16.c: 126: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3642  069B  3200               	nop2	;2 cycle nop
  3643  069C  3200               	nop2	;2 cycle nop
  3644  069D  3200               	nop2	;2 cycle nop
  3645  069E  3200               	nop2	;2 cycle nop
  3646                           
  3647                           ;lcd_hd44780_pic16.c: 130: (RA2=0);
  3648  069F  0020               	movlb	0	; select bank0
  3649  06A0  110C               	bcf	12,2	;volatile
  3650                           
  3651                           ;lcd_hd44780_pic16.c: 132: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3652  06A1  3200               	nop2	;2 cycle nop
  3653  06A2  3200               	nop2	;2 cycle nop
  3654  06A3  3200               	nop2	;2 cycle nop
  3655  06A4  3200               	nop2	;2 cycle nop
  3656                           
  3657                           ;lcd_hd44780_pic16.c: 134: LCDBusyLoop();
  3658  06A5  3186  26F4         	fcall	_LCDBusyLoop
  3659  06A7  0008               	return
  3660  06A8                     __end_of_LCDByte:	
  3661                           
  3662                           	psect	text10
  3663  06F4                     __ptext10:	
  3664 ;; *************** function _LCDBusyLoop *****************
  3665 ;; Defined at:
  3666 ;;		line 139 in file "lcd_hd44780_pic16.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;		None               void
  3673 ;; Registers used:
  3674 ;;		wreg
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;Total ram usage:        2 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_LCDByte
  3691 ;;		_LCDInit
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _LCDBusyLoop
  3697  06F4                     _LCDBusyLoop:	
  3698                           
  3699                           ;lcd_hd44780_pic16.c: 141: _delay((unsigned long)((5)*(32000000ULL/4000.0)));
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _LCDBusyLoop: [wreg]
  3703  06F4  3034               	movlw	52
  3704  06F5  00F3               	movwf	??_LCDBusyLoop+1
  3705  06F6  30F1               	movlw	241
  3706  06F7  00F2               	movwf	??_LCDBusyLoop
  3707  06F8                     u2527:	
  3708  06F8  0BF2               	decfsz	??_LCDBusyLoop,f
  3709  06F9  2EF8               	goto	u2527
  3710  06FA  0BF3               	decfsz	??_LCDBusyLoop+1,f
  3711  06FB  2EF8               	goto	u2527
  3712  06FC  3200               	nop2
  3713  06FD  0008               	return
  3714  06FE                     __end_of_LCDBusyLoop:	
  3715                           ;lcd_hd44780_pic16.c: 142: return;
  3716                           
  3717                           
  3718                           	psect	text11
  3719  0E81                     __ptext11:	
  3720 ;; *************** function _DS1307StartOsc *****************
  3721 ;; Defined at:
  3722 ;;		line 20 in file "ds1307.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;		None               void
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    3
  3743 ;; This function calls:
  3744 ;;		_i2c_Start
  3745 ;;		_i2c_Stop
  3746 ;;		_i2c_Write
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           
  3753                           ;psect for function _DS1307StartOsc
  3754  0E81                     _DS1307StartOsc:	
  3755                           
  3756                           ;ds1307.c: 21: i2c_Start();
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _DS1307StartOsc: [wreg+status,2+status,0+pclath+cstack]
  3760  0E81  318E  2643  318E   	fcall	_i2c_Start
  3761                           
  3762                           ;ds1307.c: 24: i2c_Write((uint8_t)(0xD0));
  3763  0E84  30D0               	movlw	208
  3764  0E85  318E  265E  318E   	fcall	_i2c_Write
  3765                           
  3766                           ;ds1307.c: 27: i2c_Write((uint8_t)(0x00));
  3767  0E88  3000               	movlw	0
  3768  0E89  318E  265E  318E   	fcall	_i2c_Write
  3769                           
  3770                           ;ds1307.c: 30: i2c_Write((uint8_t)(0x00));
  3771  0E8C  3000               	movlw	0
  3772  0E8D  318E  265E  318E   	fcall	_i2c_Write
  3773                           
  3774                           ;ds1307.c: 33: i2c_Stop();
  3775  0E90  318E  2648         	fcall	_i2c_Stop
  3776  0E92  0008               	return
  3777  0E93                     __end_of_DS1307StartOsc:	
  3778                           
  3779                           	psect	text12
  3780  0335                     __ptext12:	
  3781 ;; *************** function _DS1307SetTimeAndDate *****************
  3782 ;; Defined at:
  3783 ;;		line 36 in file "ds1307.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  funch           1    wreg     unsigned char 
  3786 ;;  funcm           1    0[BANK0 ] unsigned char 
  3787 ;;  funcs           1    1[BANK0 ] unsigned char 
  3788 ;;  funcDayOfThe    1    2[BANK0 ] unsigned char 
  3789 ;;  funcday         1    3[BANK0 ] unsigned char 
  3790 ;;  funcmonth       1    4[BANK0 ] unsigned char 
  3791 ;;  funcyear        1    5[BANK0 ] unsigned char 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  funch           1   22[BANK0 ] unsigned char 
  3794 ;;  values          8   14[BANK0 ] unsigned char [8]
  3795 ;;  i               1   23[BANK0 ] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;		None               void
  3798 ;; Registers used:
  3799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3805 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3808 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3809 ;;Total ram usage:       24 bytes
  3810 ;; Hardware stack levels used:    1
  3811 ;; Hardware stack levels required when called:    3
  3812 ;; This function calls:
  3813 ;;		___awdiv
  3814 ;;		___awmod
  3815 ;;		_i2c_Start
  3816 ;;		_i2c_Stop
  3817 ;;		_i2c_Write
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           
  3824                           ;psect for function _DS1307SetTimeAndDate
  3825  0335                     _DS1307SetTimeAndDate:	
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _DS1307SetTimeAndDate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3829                           ;DS1307SetTimeAndDate@funch stored from wreg
  3830  0335  0020               	movlb	0	; select bank0
  3831  0336  00B6               	movwf	DS1307SetTimeAndDate@funch
  3832                           
  3833                           ;ds1307.c: 38: funcs = 0x00;
  3834  0337  01A1               	clrf	DS1307SetTimeAndDate@funcs
  3835                           
  3836                           ;ds1307.c: 39: funcm = (((unsigned char)(funcm/10))<<4)|((unsigned char)(funcm%10));
  3837  0338  300A               	movlw	10
  3838  0339  00F2               	movwf	___awmod@divisor
  3839  033A  3000               	movlw	0
  3840  033B  00F3               	movwf	___awmod@divisor+1
  3841  033C  0820               	movf	DS1307SetTimeAndDate@funcm,w
  3842  033D  00A6               	movwf	??_DS1307SetTimeAndDate
  3843  033E  01A7               	clrf	??_DS1307SetTimeAndDate+1
  3844  033F  0826               	movf	??_DS1307SetTimeAndDate,w
  3845  0340  00F4               	movwf	___awmod@dividend
  3846  0341  0827               	movf	??_DS1307SetTimeAndDate+1,w
  3847  0342  00F5               	movwf	___awmod@dividend+1
  3848  0343  3187  274B  3183   	fcall	___awmod
  3849  0346  0872               	movf	?___awmod,w
  3850  0347  0020               	movlb	0	; select bank0
  3851  0348  00A8               	movwf	??_DS1307SetTimeAndDate+2
  3852  0349  0873               	movf	?___awmod+1,w
  3853  034A  00A9               	movwf	??_DS1307SetTimeAndDate+3
  3854  034B  300A               	movlw	10
  3855  034C  00F2               	movwf	___awdiv@divisor
  3856  034D  3000               	movlw	0
  3857  034E  00F3               	movwf	___awdiv@divisor+1
  3858  034F  0820               	movf	DS1307SetTimeAndDate@funcm,w
  3859  0350  00AA               	movwf	??_DS1307SetTimeAndDate+4
  3860  0351  01AB               	clrf	??_DS1307SetTimeAndDate+5
  3861  0352  082A               	movf	??_DS1307SetTimeAndDate+4,w
  3862  0353  00F4               	movwf	___awdiv@dividend
  3863  0354  082B               	movf	??_DS1307SetTimeAndDate+5,w
  3864  0355  00F5               	movwf	___awdiv@dividend+1
  3865  0356  3186  2604  3183   	fcall	___awdiv
  3866  0359  0872               	movf	?___awdiv,w
  3867  035A  0020               	movlb	0	; select bank0
  3868  035B  00AC               	movwf	??_DS1307SetTimeAndDate+6
  3869  035C  3003               	movlw	3
  3870  035D                     u2165:	
  3871  035D  35AC               	lslf	??_DS1307SetTimeAndDate+6,f
  3872  035E  3EFF               	addlw	-1
  3873  035F  1D03               	skipz
  3874  0360  2B5D               	goto	u2165
  3875  0361  352C               	lslf	??_DS1307SetTimeAndDate+6,w
  3876  0362  0428               	iorwf	??_DS1307SetTimeAndDate+2,w
  3877  0363  00AD               	movwf	??_DS1307SetTimeAndDate+7
  3878  0364  082D               	movf	??_DS1307SetTimeAndDate+7,w
  3879  0365  00A0               	movwf	DS1307SetTimeAndDate@funcm
  3880                           
  3881                           ;ds1307.c: 40: funch = (((unsigned char)(funch/10))<<4)|((unsigned char)(funch%10));
  3882  0366  300A               	movlw	10
  3883  0367  00F2               	movwf	___awmod@divisor
  3884  0368  3000               	movlw	0
  3885  0369  00F3               	movwf	___awmod@divisor+1
  3886  036A  0836               	movf	DS1307SetTimeAndDate@funch,w
  3887  036B  00A6               	movwf	??_DS1307SetTimeAndDate
  3888  036C  01A7               	clrf	??_DS1307SetTimeAndDate+1
  3889  036D  0826               	movf	??_DS1307SetTimeAndDate,w
  3890  036E  00F4               	movwf	___awmod@dividend
  3891  036F  0827               	movf	??_DS1307SetTimeAndDate+1,w
  3892  0370  00F5               	movwf	___awmod@dividend+1
  3893  0371  3187  274B  3183   	fcall	___awmod
  3894  0374  0872               	movf	?___awmod,w
  3895  0375  0020               	movlb	0	; select bank0
  3896  0376  00A8               	movwf	??_DS1307SetTimeAndDate+2
  3897  0377  0873               	movf	?___awmod+1,w
  3898  0378  00A9               	movwf	??_DS1307SetTimeAndDate+3
  3899  0379  300A               	movlw	10
  3900  037A  00F2               	movwf	___awdiv@divisor
  3901  037B  3000               	movlw	0
  3902  037C  00F3               	movwf	___awdiv@divisor+1
  3903  037D  0836               	movf	DS1307SetTimeAndDate@funch,w
  3904  037E  00AA               	movwf	??_DS1307SetTimeAndDate+4
  3905  037F  01AB               	clrf	??_DS1307SetTimeAndDate+5
  3906  0380  082A               	movf	??_DS1307SetTimeAndDate+4,w
  3907  0381  00F4               	movwf	___awdiv@dividend
  3908  0382  082B               	movf	??_DS1307SetTimeAndDate+5,w
  3909  0383  00F5               	movwf	___awdiv@dividend+1
  3910  0384  3186  2604  3183   	fcall	___awdiv
  3911  0387  0872               	movf	?___awdiv,w
  3912  0388  0020               	movlb	0	; select bank0
  3913  0389  00AC               	movwf	??_DS1307SetTimeAndDate+6
  3914  038A  3003               	movlw	3
  3915  038B                     u2175:	
  3916  038B  35AC               	lslf	??_DS1307SetTimeAndDate+6,f
  3917  038C  3EFF               	addlw	-1
  3918  038D  1D03               	skipz
  3919  038E  2B8B               	goto	u2175
  3920  038F  352C               	lslf	??_DS1307SetTimeAndDate+6,w
  3921  0390  0428               	iorwf	??_DS1307SetTimeAndDate+2,w
  3922  0391  00AD               	movwf	??_DS1307SetTimeAndDate+7
  3923  0392  082D               	movf	??_DS1307SetTimeAndDate+7,w
  3924  0393  00B6               	movwf	DS1307SetTimeAndDate@funch
  3925                           
  3926                           ;ds1307.c: 41: funcday = ( ((funcday/10) << 4) | (funcday%10) );
  3927  0394  300A               	movlw	10
  3928  0395  00F2               	movwf	___awmod@divisor
  3929  0396  3000               	movlw	0
  3930  0397  00F3               	movwf	___awmod@divisor+1
  3931  0398  0823               	movf	DS1307SetTimeAndDate@funcday,w
  3932  0399  00A6               	movwf	??_DS1307SetTimeAndDate
  3933  039A  01A7               	clrf	??_DS1307SetTimeAndDate+1
  3934  039B  0826               	movf	??_DS1307SetTimeAndDate,w
  3935  039C  00F4               	movwf	___awmod@dividend
  3936  039D  0827               	movf	??_DS1307SetTimeAndDate+1,w
  3937  039E  00F5               	movwf	___awmod@dividend+1
  3938  039F  3187  274B  3183   	fcall	___awmod
  3939  03A2  0872               	movf	?___awmod,w
  3940  03A3  0020               	movlb	0	; select bank0
  3941  03A4  00A8               	movwf	??_DS1307SetTimeAndDate+2
  3942  03A5  0873               	movf	?___awmod+1,w
  3943  03A6  00A9               	movwf	??_DS1307SetTimeAndDate+3
  3944  03A7  300A               	movlw	10
  3945  03A8  00F2               	movwf	___awdiv@divisor
  3946  03A9  3000               	movlw	0
  3947  03AA  00F3               	movwf	___awdiv@divisor+1
  3948  03AB  0823               	movf	DS1307SetTimeAndDate@funcday,w
  3949  03AC  00AA               	movwf	??_DS1307SetTimeAndDate+4
  3950  03AD  01AB               	clrf	??_DS1307SetTimeAndDate+5
  3951  03AE  082A               	movf	??_DS1307SetTimeAndDate+4,w
  3952  03AF  00F4               	movwf	___awdiv@dividend
  3953  03B0  082B               	movf	??_DS1307SetTimeAndDate+5,w
  3954  03B1  00F5               	movwf	___awdiv@dividend+1
  3955  03B2  3186  2604  3183   	fcall	___awdiv
  3956  03B5  0872               	movf	?___awdiv,w
  3957  03B6  0020               	movlb	0	; select bank0
  3958  03B7  00AC               	movwf	??_DS1307SetTimeAndDate+6
  3959  03B8  3003               	movlw	3
  3960  03B9                     u2185:	
  3961  03B9  35AC               	lslf	??_DS1307SetTimeAndDate+6,f
  3962  03BA  3EFF               	addlw	-1
  3963  03BB  1D03               	skipz
  3964  03BC  2BB9               	goto	u2185
  3965  03BD  352C               	lslf	??_DS1307SetTimeAndDate+6,w
  3966  03BE  0428               	iorwf	??_DS1307SetTimeAndDate+2,w
  3967  03BF  00AD               	movwf	??_DS1307SetTimeAndDate+7
  3968  03C0  082D               	movf	??_DS1307SetTimeAndDate+7,w
  3969  03C1  00A3               	movwf	DS1307SetTimeAndDate@funcday
  3970                           
  3971                           ;ds1307.c: 42: funcmonth = ( ((funcmonth/10)<<4) | (funcmonth%10) );
  3972  03C2  300A               	movlw	10
  3973  03C3  00F2               	movwf	___awmod@divisor
  3974  03C4  3000               	movlw	0
  3975  03C5  00F3               	movwf	___awmod@divisor+1
  3976  03C6  0824               	movf	DS1307SetTimeAndDate@funcmonth,w
  3977  03C7  00A6               	movwf	??_DS1307SetTimeAndDate
  3978  03C8  01A7               	clrf	??_DS1307SetTimeAndDate+1
  3979  03C9  0826               	movf	??_DS1307SetTimeAndDate,w
  3980  03CA  00F4               	movwf	___awmod@dividend
  3981  03CB  0827               	movf	??_DS1307SetTimeAndDate+1,w
  3982  03CC  00F5               	movwf	___awmod@dividend+1
  3983  03CD  3187  274B  3183   	fcall	___awmod
  3984  03D0  0872               	movf	?___awmod,w
  3985  03D1  0020               	movlb	0	; select bank0
  3986  03D2  00A8               	movwf	??_DS1307SetTimeAndDate+2
  3987  03D3  0873               	movf	?___awmod+1,w
  3988  03D4  00A9               	movwf	??_DS1307SetTimeAndDate+3
  3989  03D5  300A               	movlw	10
  3990  03D6  00F2               	movwf	___awdiv@divisor
  3991  03D7  3000               	movlw	0
  3992  03D8  00F3               	movwf	___awdiv@divisor+1
  3993  03D9  0824               	movf	DS1307SetTimeAndDate@funcmonth,w
  3994  03DA  00AA               	movwf	??_DS1307SetTimeAndDate+4
  3995  03DB  01AB               	clrf	??_DS1307SetTimeAndDate+5
  3996  03DC  082A               	movf	??_DS1307SetTimeAndDate+4,w
  3997  03DD  00F4               	movwf	___awdiv@dividend
  3998  03DE  082B               	movf	??_DS1307SetTimeAndDate+5,w
  3999  03DF  00F5               	movwf	___awdiv@dividend+1
  4000  03E0  3186  2604  3183   	fcall	___awdiv
  4001  03E3  0872               	movf	?___awdiv,w
  4002  03E4  0020               	movlb	0	; select bank0
  4003  03E5  00AC               	movwf	??_DS1307SetTimeAndDate+6
  4004  03E6  3003               	movlw	3
  4005  03E7                     u2195:	
  4006  03E7  35AC               	lslf	??_DS1307SetTimeAndDate+6,f
  4007  03E8  3EFF               	addlw	-1
  4008  03E9  1D03               	skipz
  4009  03EA  2BE7               	goto	u2195
  4010  03EB  352C               	lslf	??_DS1307SetTimeAndDate+6,w
  4011  03EC  0428               	iorwf	??_DS1307SetTimeAndDate+2,w
  4012  03ED  00AD               	movwf	??_DS1307SetTimeAndDate+7
  4013  03EE  082D               	movf	??_DS1307SetTimeAndDate+7,w
  4014  03EF  00A4               	movwf	DS1307SetTimeAndDate@funcmonth
  4015                           
  4016                           ;ds1307.c: 43: funcyear = ( ((funcyear/10)<<4) | (funcyear%10) );
  4017  03F0  300A               	movlw	10
  4018  03F1  00F2               	movwf	___awmod@divisor
  4019  03F2  3000               	movlw	0
  4020  03F3  00F3               	movwf	___awmod@divisor+1
  4021  03F4  0825               	movf	DS1307SetTimeAndDate@funcyear,w
  4022  03F5  00A6               	movwf	??_DS1307SetTimeAndDate
  4023  03F6  01A7               	clrf	??_DS1307SetTimeAndDate+1
  4024  03F7  0826               	movf	??_DS1307SetTimeAndDate,w
  4025  03F8  00F4               	movwf	___awmod@dividend
  4026  03F9  0827               	movf	??_DS1307SetTimeAndDate+1,w
  4027  03FA  00F5               	movwf	___awmod@dividend+1
  4028  03FB  3187  274B  3183   	fcall	___awmod
  4029  03FE  0872               	movf	?___awmod,w
  4030  03FF  0020               	movlb	0	; select bank0
  4031  0400  00A8               	movwf	??_DS1307SetTimeAndDate+2
  4032  0401  0873               	movf	?___awmod+1,w
  4033  0402  00A9               	movwf	??_DS1307SetTimeAndDate+3
  4034  0403  300A               	movlw	10
  4035  0404  00F2               	movwf	___awdiv@divisor
  4036  0405  3000               	movlw	0
  4037  0406  00F3               	movwf	___awdiv@divisor+1
  4038  0407  0825               	movf	DS1307SetTimeAndDate@funcyear,w
  4039  0408  00AA               	movwf	??_DS1307SetTimeAndDate+4
  4040  0409  01AB               	clrf	??_DS1307SetTimeAndDate+5
  4041  040A  082A               	movf	??_DS1307SetTimeAndDate+4,w
  4042  040B  00F4               	movwf	___awdiv@dividend
  4043  040C  082B               	movf	??_DS1307SetTimeAndDate+5,w
  4044  040D  00F5               	movwf	___awdiv@dividend+1
  4045  040E  3186  2604  3183   	fcall	___awdiv
  4046  0411  0872               	movf	?___awdiv,w
  4047  0412  0020               	movlb	0	; select bank0
  4048  0413  00AC               	movwf	??_DS1307SetTimeAndDate+6
  4049  0414  3003               	movlw	3
  4050  0415                     u2205:	
  4051  0415  35AC               	lslf	??_DS1307SetTimeAndDate+6,f
  4052  0416  3EFF               	addlw	-1
  4053  0417  1D03               	skipz
  4054  0418  2C15               	goto	u2205
  4055  0419  352C               	lslf	??_DS1307SetTimeAndDate+6,w
  4056  041A  0428               	iorwf	??_DS1307SetTimeAndDate+2,w
  4057  041B  00AD               	movwf	??_DS1307SetTimeAndDate+7
  4058  041C  082D               	movf	??_DS1307SetTimeAndDate+7,w
  4059  041D  00A5               	movwf	DS1307SetTimeAndDate@funcyear
  4060                           
  4061                           ;ds1307.c: 45: uint8_t values[8];
  4062                           ;ds1307.c: 47: values[0] = funcs;
  4063  041E  0821               	movf	DS1307SetTimeAndDate@funcs,w
  4064  041F  00A6               	movwf	??_DS1307SetTimeAndDate
  4065  0420  0826               	movf	??_DS1307SetTimeAndDate,w
  4066  0421  00AE               	movwf	DS1307SetTimeAndDate@values
  4067                           
  4068                           ;ds1307.c: 48: values[1] = funcm;
  4069  0422  0820               	movf	DS1307SetTimeAndDate@funcm,w
  4070  0423  00A6               	movwf	??_DS1307SetTimeAndDate
  4071  0424  0826               	movf	??_DS1307SetTimeAndDate,w
  4072  0425  00AF               	movwf	DS1307SetTimeAndDate@values+1
  4073                           
  4074                           ;ds1307.c: 49: values[2] = funch;
  4075  0426  0836               	movf	DS1307SetTimeAndDate@funch,w
  4076  0427  00A6               	movwf	??_DS1307SetTimeAndDate
  4077  0428  0826               	movf	??_DS1307SetTimeAndDate,w
  4078  0429  00B0               	movwf	DS1307SetTimeAndDate@values+2
  4079                           
  4080                           ;ds1307.c: 50: values[3] = funcDayOfTheWeek;
  4081  042A  0822               	movf	DS1307SetTimeAndDate@funcDayOfTheWeek,w
  4082  042B  00A6               	movwf	??_DS1307SetTimeAndDate
  4083  042C  0826               	movf	??_DS1307SetTimeAndDate,w
  4084  042D  00B1               	movwf	DS1307SetTimeAndDate@values+3
  4085                           
  4086                           ;ds1307.c: 51: values[4] = funcday;
  4087  042E  0823               	movf	DS1307SetTimeAndDate@funcday,w
  4088  042F  00A6               	movwf	??_DS1307SetTimeAndDate
  4089  0430  0826               	movf	??_DS1307SetTimeAndDate,w
  4090  0431  00B2               	movwf	DS1307SetTimeAndDate@values+4
  4091                           
  4092                           ;ds1307.c: 52: values[5] = funcmonth;
  4093  0432  0824               	movf	DS1307SetTimeAndDate@funcmonth,w
  4094  0433  00A6               	movwf	??_DS1307SetTimeAndDate
  4095  0434  0826               	movf	??_DS1307SetTimeAndDate,w
  4096  0435  00B3               	movwf	DS1307SetTimeAndDate@values+5
  4097                           
  4098                           ;ds1307.c: 53: values[6] = funcyear;
  4099  0436  0825               	movf	DS1307SetTimeAndDate@funcyear,w
  4100  0437  00A6               	movwf	??_DS1307SetTimeAndDate
  4101  0438  0826               	movf	??_DS1307SetTimeAndDate,w
  4102  0439  00B4               	movwf	DS1307SetTimeAndDate@values+6
  4103                           
  4104                           ;ds1307.c: 54: values[7] = 0;
  4105  043A  01B5               	clrf	DS1307SetTimeAndDate@values+7
  4106                           
  4107                           ;ds1307.c: 56: i2c_Start();
  4108  043B  318E  2643  3183   	fcall	_i2c_Start
  4109                           
  4110                           ;ds1307.c: 59: i2c_Write((uint8_t)(0xD0));
  4111  043E  30D0               	movlw	208
  4112  043F  318E  265E  3183   	fcall	_i2c_Write
  4113                           
  4114                           ;ds1307.c: 62: i2c_Write((uint8_t)(0x00));
  4115  0442  3000               	movlw	0
  4116  0443  318E  265E  3183   	fcall	_i2c_Write
  4117                           
  4118                           ;ds1307.c: 65: uint8_t i = 0;
  4119  0446  0020               	movlb	0	; select bank0
  4120  0447  01B7               	clrf	DS1307SetTimeAndDate@i
  4121  0448  3008               	movlw	8
  4122  0449  0237               	subwf	DS1307SetTimeAndDate@i,w
  4123  044A  1803               	btfsc	3,0
  4124  044B  2C5D               	goto	l2596
  4125  044C                     l2590:	
  4126                           
  4127                           ;ds1307.c: 67: i2c_Write((uint8_t)(values[i]));
  4128  044C  0837               	movf	DS1307SetTimeAndDate@i,w
  4129  044D  3E2E               	addlw	DS1307SetTimeAndDate@values& (0+255)
  4130  044E  0086               	movwf	6
  4131  044F  0187               	clrf	7
  4132  0450  0801               	movf	1,w
  4133  0451  318E  265E  3183   	fcall	_i2c_Write
  4134  0454  3001               	movlw	1
  4135  0455  0020               	movlb	0	; select bank0
  4136  0456  00A6               	movwf	??_DS1307SetTimeAndDate
  4137  0457  0826               	movf	??_DS1307SetTimeAndDate,w
  4138  0458  07B7               	addwf	DS1307SetTimeAndDate@i,f
  4139  0459  3008               	movlw	8
  4140  045A  0237               	subwf	DS1307SetTimeAndDate@i,w
  4141  045B  1C03               	skipc
  4142  045C  2C4C               	goto	l2590
  4143  045D                     l2596:	
  4144                           
  4145                           ;ds1307.c: 69: }
  4146                           ;ds1307.c: 70: i2c_Stop();
  4147  045D  318E  2648         	fcall	_i2c_Stop
  4148  045F  0008               	return
  4149  0460                     __end_of_DS1307SetTimeAndDate:	
  4150                           
  4151                           	psect	text13
  4152  074B                     __ptext13:	
  4153 ;; *************** function ___awmod *****************
  4154 ;; Defined at:
  4155 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  divisor         2    2[COMMON] int 
  4158 ;;  dividend        2    4[COMMON] int 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  sign            1    8[COMMON] unsigned char 
  4161 ;;  counter         1    7[COMMON] unsigned char 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  2    2[COMMON] int 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4171 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;Total ram usage:        7 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_DS1307SetTimeAndDate
  4182 ;;		_LCDWriteInt
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function ___awmod
  4188  074B                     ___awmod:	
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4192  074B  01F8               	clrf	___awmod@sign
  4193  074C  1FF5               	btfss	___awmod@dividend+1,7
  4194  074D  2F55               	goto	l1828
  4195  074E  09F4               	comf	___awmod@dividend,f
  4196  074F  09F5               	comf	___awmod@dividend+1,f
  4197  0750  0AF4               	incf	___awmod@dividend,f
  4198  0751  1903               	skipnz
  4199  0752  0AF5               	incf	___awmod@dividend+1,f
  4200  0753  01F8               	clrf	___awmod@sign
  4201  0754  0AF8               	incf	___awmod@sign,f
  4202  0755                     l1828:	
  4203  0755  1FF3               	btfss	___awmod@divisor+1,7
  4204  0756  2F5C               	goto	l1832
  4205  0757  09F2               	comf	___awmod@divisor,f
  4206  0758  09F3               	comf	___awmod@divisor+1,f
  4207  0759  0AF2               	incf	___awmod@divisor,f
  4208  075A  1903               	skipnz
  4209  075B  0AF3               	incf	___awmod@divisor+1,f
  4210  075C                     l1832:	
  4211  075C  0873               	movf	___awmod@divisor+1,w
  4212  075D  0472               	iorwf	___awmod@divisor,w
  4213  075E  1903               	skipnz
  4214  075F  2F83               	goto	l1850
  4215  0760  01F7               	clrf	___awmod@counter
  4216  0761  0AF7               	incf	___awmod@counter,f
  4217  0762                     l1840:	
  4218  0762  1BF3               	btfsc	___awmod@divisor+1,7
  4219  0763  2F6E               	goto	l1842
  4220  0764  3001               	movlw	1
  4221  0765                     u1475:	
  4222  0765  35F2               	lslf	___awmod@divisor,f
  4223  0766  0DF3               	rlf	___awmod@divisor+1,f
  4224  0767  0B89               	decfsz	9,f
  4225  0768  2F65               	goto	u1475
  4226  0769  3001               	movlw	1
  4227  076A  00F6               	movwf	??___awmod
  4228  076B  0876               	movf	??___awmod,w
  4229  076C  07F7               	addwf	___awmod@counter,f
  4230  076D  2F62               	goto	l1840
  4231  076E                     l1842:	
  4232  076E  0873               	movf	___awmod@divisor+1,w
  4233  076F  0275               	subwf	___awmod@dividend+1,w
  4234  0770  1D03               	skipz
  4235  0771  2F74               	goto	u1495
  4236  0772  0872               	movf	___awmod@divisor,w
  4237  0773  0274               	subwf	___awmod@dividend,w
  4238  0774                     u1495:	
  4239  0774  1C03               	skipc
  4240  0775  2F7A               	goto	l1846
  4241  0776  0872               	movf	___awmod@divisor,w
  4242  0777  02F4               	subwf	___awmod@dividend,f
  4243  0778  0873               	movf	___awmod@divisor+1,w
  4244  0779  3BF5               	subwfb	___awmod@dividend+1,f
  4245  077A                     l1846:	
  4246  077A  3001               	movlw	1
  4247  077B                     u1505:	
  4248  077B  36F3               	lsrf	___awmod@divisor+1,f
  4249  077C  0CF2               	rrf	___awmod@divisor,f
  4250  077D  0B89               	decfsz	9,f
  4251  077E  2F7B               	goto	u1505
  4252  077F  3001               	movlw	1
  4253  0780  02F7               	subwf	___awmod@counter,f
  4254  0781  1D03               	btfss	3,2
  4255  0782  2F6E               	goto	l1842
  4256  0783                     l1850:	
  4257  0783  0878               	movf	___awmod@sign,w
  4258  0784  1903               	btfsc	3,2
  4259  0785  2F8B               	goto	l1854
  4260  0786  09F4               	comf	___awmod@dividend,f
  4261  0787  09F5               	comf	___awmod@dividend+1,f
  4262  0788  0AF4               	incf	___awmod@dividend,f
  4263  0789  1903               	skipnz
  4264  078A  0AF5               	incf	___awmod@dividend+1,f
  4265  078B                     l1854:	
  4266  078B  0875               	movf	___awmod@dividend+1,w
  4267  078C  01F3               	clrf	?___awmod+1
  4268  078D  07F3               	addwf	?___awmod+1,f
  4269  078E  0874               	movf	___awmod@dividend,w
  4270  078F  01F2               	clrf	?___awmod
  4271  0790  07F2               	addwf	?___awmod,f
  4272  0791  0008               	return
  4273  0792                     __end_of___awmod:	
  4274                           
  4275                           	psect	text14
  4276  0604                     __ptext14:	
  4277 ;; *************** function ___awdiv *****************
  4278 ;; Defined at:
  4279 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  divisor         2    2[COMMON] int 
  4282 ;;  dividend        2    4[COMMON] int 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  quotient        2    9[COMMON] int 
  4285 ;;  sign            1    8[COMMON] unsigned char 
  4286 ;;  counter         1    7[COMMON] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    2[COMMON] int 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4297 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4299 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;Total ram usage:        9 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    1
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_DS1307SetTimeAndDate
  4307 ;;		_LCDWriteInt
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           
  4312                           ;psect for function ___awdiv
  4313  0604                     ___awdiv:	
  4314                           
  4315                           ;incstack = 0
  4316                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4317  0604  01F8               	clrf	___awdiv@sign
  4318  0605  1FF3               	btfss	___awdiv@divisor+1,7
  4319  0606  2E0E               	goto	l1784
  4320  0607  09F2               	comf	___awdiv@divisor,f
  4321  0608  09F3               	comf	___awdiv@divisor+1,f
  4322  0609  0AF2               	incf	___awdiv@divisor,f
  4323  060A  1903               	skipnz
  4324  060B  0AF3               	incf	___awdiv@divisor+1,f
  4325  060C  01F8               	clrf	___awdiv@sign
  4326  060D  0AF8               	incf	___awdiv@sign,f
  4327  060E                     l1784:	
  4328  060E  1FF5               	btfss	___awdiv@dividend+1,7
  4329  060F  2E19               	goto	l1790
  4330  0610  09F4               	comf	___awdiv@dividend,f
  4331  0611  09F5               	comf	___awdiv@dividend+1,f
  4332  0612  0AF4               	incf	___awdiv@dividend,f
  4333  0613  1903               	skipnz
  4334  0614  0AF5               	incf	___awdiv@dividend+1,f
  4335  0615  3001               	movlw	1
  4336  0616  00F6               	movwf	??___awdiv
  4337  0617  0876               	movf	??___awdiv,w
  4338  0618  06F8               	xorwf	___awdiv@sign,f
  4339  0619                     l1790:	
  4340  0619  01F9               	clrf	___awdiv@quotient
  4341  061A  01FA               	clrf	___awdiv@quotient+1
  4342  061B  0873               	movf	___awdiv@divisor+1,w
  4343  061C  0472               	iorwf	___awdiv@divisor,w
  4344  061D  1903               	skipnz
  4345  061E  2E48               	goto	l1812
  4346  061F  01F7               	clrf	___awdiv@counter
  4347  0620  0AF7               	incf	___awdiv@counter,f
  4348  0621                     l1800:	
  4349  0621  1BF3               	btfsc	___awdiv@divisor+1,7
  4350  0622  2E2D               	goto	l1802
  4351  0623  3001               	movlw	1
  4352  0624                     u1375:	
  4353  0624  35F2               	lslf	___awdiv@divisor,f
  4354  0625  0DF3               	rlf	___awdiv@divisor+1,f
  4355  0626  0B89               	decfsz	9,f
  4356  0627  2E24               	goto	u1375
  4357  0628  3001               	movlw	1
  4358  0629  00F6               	movwf	??___awdiv
  4359  062A  0876               	movf	??___awdiv,w
  4360  062B  07F7               	addwf	___awdiv@counter,f
  4361  062C  2E21               	goto	l1800
  4362  062D                     l1802:	
  4363  062D  3001               	movlw	1
  4364  062E                     u1395:	
  4365  062E  35F9               	lslf	___awdiv@quotient,f
  4366  062F  0DFA               	rlf	___awdiv@quotient+1,f
  4367  0630  0B89               	decfsz	9,f
  4368  0631  2E2E               	goto	u1395
  4369  0632  0873               	movf	___awdiv@divisor+1,w
  4370  0633  0275               	subwf	___awdiv@dividend+1,w
  4371  0634  1D03               	skipz
  4372  0635  2E38               	goto	u1405
  4373  0636  0872               	movf	___awdiv@divisor,w
  4374  0637  0274               	subwf	___awdiv@dividend,w
  4375  0638                     u1405:	
  4376  0638  1C03               	skipc
  4377  0639  2E3F               	goto	l1808
  4378  063A  0872               	movf	___awdiv@divisor,w
  4379  063B  02F4               	subwf	___awdiv@dividend,f
  4380  063C  0873               	movf	___awdiv@divisor+1,w
  4381  063D  3BF5               	subwfb	___awdiv@dividend+1,f
  4382  063E  1479               	bsf	___awdiv@quotient,0
  4383  063F                     l1808:	
  4384  063F  3001               	movlw	1
  4385  0640                     u1415:	
  4386  0640  36F3               	lsrf	___awdiv@divisor+1,f
  4387  0641  0CF2               	rrf	___awdiv@divisor,f
  4388  0642  0B89               	decfsz	9,f
  4389  0643  2E40               	goto	u1415
  4390  0644  3001               	movlw	1
  4391  0645  02F7               	subwf	___awdiv@counter,f
  4392  0646  1D03               	btfss	3,2
  4393  0647  2E2D               	goto	l1802
  4394  0648                     l1812:	
  4395  0648  0878               	movf	___awdiv@sign,w
  4396  0649  1903               	btfsc	3,2
  4397  064A  2E50               	goto	l1816
  4398  064B  09F9               	comf	___awdiv@quotient,f
  4399  064C  09FA               	comf	___awdiv@quotient+1,f
  4400  064D  0AF9               	incf	___awdiv@quotient,f
  4401  064E  1903               	skipnz
  4402  064F  0AFA               	incf	___awdiv@quotient+1,f
  4403  0650                     l1816:	
  4404  0650  087A               	movf	___awdiv@quotient+1,w
  4405  0651  01F3               	clrf	?___awdiv+1
  4406  0652  07F3               	addwf	?___awdiv+1,f
  4407  0653  0879               	movf	___awdiv@quotient,w
  4408  0654  01F2               	clrf	?___awdiv
  4409  0655  07F2               	addwf	?___awdiv,f
  4410  0656  0008               	return
  4411  0657                     __end_of___awdiv:	
  4412                           
  4413                           	psect	text15
  4414  0F59                     __ptext15:	
  4415 ;; *************** function _DS1307GetYear *****************
  4416 ;; Defined at:
  4417 ;;		line 132 in file "ds1307.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;  u8data          1   10[COMMON] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4433 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4435 ;;Total ram usage:        5 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    4
  4438 ;; This function calls:
  4439 ;;		_DS1307ReadDataFrom
  4440 ;;		___bmul
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _DS1307GetYear
  4448  0F59                     _DS1307GetYear:	
  4449                           
  4450                           ;ds1307.c: 133: uint8_t u8data;
  4451                           ;ds1307.c: 134: u8data = DS1307ReadDataFrom(0x06);
  4452                           
  4453                           ;incstack = 0
  4454                           ; Regs used in _DS1307GetYear: [wreg+status,2+status,0+pclath+cstack]
  4455  0F59  3006               	movlw	6
  4456  0F5A  318F  2778  318F   	fcall	_DS1307ReadDataFrom
  4457  0F5D  0020               	movlb	0	; select bank0
  4458  0F5E  00A2               	movwf	??_DS1307GetYear
  4459  0F5F  0822               	movf	??_DS1307GetYear,w
  4460  0F60  00FA               	movwf	DS1307GetYear@u8data
  4461                           
  4462                           ;ds1307.c: 135: u8data = ((u8data>>4)*10) + (u8data&0x0F);
  4463  0F61  300F               	movlw	15
  4464  0F62  057A               	andwf	DS1307GetYear@u8data,w
  4465  0F63  00A2               	movwf	??_DS1307GetYear
  4466  0F64  300A               	movlw	10
  4467  0F65  00A3               	movwf	??_DS1307GetYear+1
  4468  0F66  0823               	movf	??_DS1307GetYear+1,w
  4469  0F67  00F2               	movwf	___bmul@multiplicand
  4470  0F68  087A               	movf	DS1307GetYear@u8data,w
  4471  0F69  00A4               	movwf	??_DS1307GetYear+2
  4472  0F6A  3004               	movlw	4
  4473  0F6B                     u2285:	
  4474  0F6B  36A4               	lsrf	??_DS1307GetYear+2,f
  4475  0F6C  0B89               	decfsz	9,f
  4476  0F6D  2F6B               	goto	u2285
  4477  0F6E  0824               	movf	??_DS1307GetYear+2,w
  4478  0F6F  318E  2670         	fcall	___bmul
  4479  0F71  0020               	movlb	0	; select bank0
  4480  0F72  0722               	addwf	??_DS1307GetYear,w
  4481  0F73  00A5               	movwf	??_DS1307GetYear+3
  4482  0F74  0825               	movf	??_DS1307GetYear+3,w
  4483  0F75  00FA               	movwf	DS1307GetYear@u8data
  4484                           
  4485                           ;ds1307.c: 136: return u8data;
  4486  0F76  087A               	movf	DS1307GetYear@u8data,w
  4487  0F77  0008               	return
  4488  0F78                     __end_of_DS1307GetYear:	
  4489                           
  4490                           	psect	text16
  4491  07D3                     __ptext16:	
  4492 ;; *************** function _DS1307GetSeconds *****************
  4493 ;; Defined at:
  4494 ;;		line 91 in file "ds1307.c"
  4495 ;; Parameters:    Size  Location     Type
  4496 ;;		None
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  u8data          1    6[BANK0 ] unsigned char 
  4499 ;;  sec10           1    5[BANK0 ] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      unsigned char 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;Total ram usage:        5 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:    4
  4516 ;; This function calls:
  4517 ;;		_DS1307ReadDataFrom
  4518 ;;		___bmul
  4519 ;; This function is called by:
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           
  4525                           ;psect for function _DS1307GetSeconds
  4526  07D3                     _DS1307GetSeconds:	
  4527                           
  4528                           ;ds1307.c: 92: uint8_t u8data, sec10;
  4529                           ;ds1307.c: 93: u8data = DS1307ReadDataFrom(0x00);
  4530                           
  4531                           ;incstack = 0
  4532                           ; Regs used in _DS1307GetSeconds: [wreg+status,2+status,0+pclath+cstack]
  4533  07D3  3000               	movlw	0
  4534  07D4  318F  2778  3187   	fcall	_DS1307ReadDataFrom
  4535  07D7  0020               	movlb	0	; select bank0
  4536  07D8  00A2               	movwf	??_DS1307GetSeconds
  4537  07D9  0822               	movf	??_DS1307GetSeconds,w
  4538  07DA  00A6               	movwf	DS1307GetSeconds@u8data
  4539                           
  4540                           ;ds1307.c: 94: u8data = u8data & 0x7F;
  4541  07DB  0826               	movf	DS1307GetSeconds@u8data,w
  4542  07DC  397F               	andlw	127
  4543  07DD  00A2               	movwf	??_DS1307GetSeconds
  4544  07DE  0822               	movf	??_DS1307GetSeconds,w
  4545  07DF  00A6               	movwf	DS1307GetSeconds@u8data
  4546                           
  4547                           ;ds1307.c: 95: sec10 = ((u8data >> 4) * 10);
  4548  07E0  300A               	movlw	10
  4549  07E1  00A2               	movwf	??_DS1307GetSeconds
  4550  07E2  0822               	movf	??_DS1307GetSeconds,w
  4551  07E3  00F2               	movwf	___bmul@multiplicand
  4552  07E4  0826               	movf	DS1307GetSeconds@u8data,w
  4553  07E5  00A3               	movwf	??_DS1307GetSeconds+1
  4554  07E6  3004               	movlw	4
  4555  07E7                     u2235:	
  4556  07E7  36A3               	lsrf	??_DS1307GetSeconds+1,f
  4557  07E8  0B89               	decfsz	9,f
  4558  07E9  2FE7               	goto	u2235
  4559  07EA  0823               	movf	??_DS1307GetSeconds+1,w
  4560  07EB  318E  2670         	fcall	___bmul
  4561  07ED  0020               	movlb	0	; select bank0
  4562  07EE  00A4               	movwf	??_DS1307GetSeconds+2
  4563  07EF  0824               	movf	??_DS1307GetSeconds+2,w
  4564  07F0  00A5               	movwf	DS1307GetSeconds@sec10
  4565                           
  4566                           ;ds1307.c: 96: u8data = (u8data & 0x0F) + sec10;
  4567  07F1  0826               	movf	DS1307GetSeconds@u8data,w
  4568  07F2  390F               	andlw	15
  4569  07F3  0725               	addwf	DS1307GetSeconds@sec10,w
  4570  07F4  00A2               	movwf	??_DS1307GetSeconds
  4571  07F5  0822               	movf	??_DS1307GetSeconds,w
  4572  07F6  00A6               	movwf	DS1307GetSeconds@u8data
  4573                           
  4574                           ;ds1307.c: 98: return u8data;
  4575  07F7  0826               	movf	DS1307GetSeconds@u8data,w
  4576  07F8  0008               	return
  4577  07F9                     __end_of_DS1307GetSeconds:	
  4578                           
  4579                           	psect	text17
  4580  0F3A                     __ptext17:	
  4581 ;; *************** function _DS1307GetMonth *****************
  4582 ;; Defined at:
  4583 ;;		line 124 in file "ds1307.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  u8data          1   10[COMMON] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      unsigned char 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:        5 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    4
  4604 ;; This function calls:
  4605 ;;		_DS1307ReadDataFrom
  4606 ;;		___bmul
  4607 ;; This function is called by:
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           
  4613                           ;psect for function _DS1307GetMonth
  4614  0F3A                     _DS1307GetMonth:	
  4615                           
  4616                           ;ds1307.c: 125: uint8_t u8data;
  4617                           ;ds1307.c: 126: u8data = DS1307ReadDataFrom(0x05);
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in _DS1307GetMonth: [wreg+status,2+status,0+pclath+cstack]
  4621  0F3A  3005               	movlw	5
  4622  0F3B  318F  2778  318F   	fcall	_DS1307ReadDataFrom
  4623  0F3E  0020               	movlb	0	; select bank0
  4624  0F3F  00A2               	movwf	??_DS1307GetMonth
  4625  0F40  0822               	movf	??_DS1307GetMonth,w
  4626  0F41  00FA               	movwf	DS1307GetMonth@u8data
  4627                           
  4628                           ;ds1307.c: 128: u8data = (((u8data>>4)*10) + (u8data&0x0F));
  4629  0F42  300F               	movlw	15
  4630  0F43  057A               	andwf	DS1307GetMonth@u8data,w
  4631  0F44  00A2               	movwf	??_DS1307GetMonth
  4632  0F45  300A               	movlw	10
  4633  0F46  00A3               	movwf	??_DS1307GetMonth+1
  4634  0F47  0823               	movf	??_DS1307GetMonth+1,w
  4635  0F48  00F2               	movwf	___bmul@multiplicand
  4636  0F49  087A               	movf	DS1307GetMonth@u8data,w
  4637  0F4A  00A4               	movwf	??_DS1307GetMonth+2
  4638  0F4B  3004               	movlw	4
  4639  0F4C                     u2275:	
  4640  0F4C  36A4               	lsrf	??_DS1307GetMonth+2,f
  4641  0F4D  0B89               	decfsz	9,f
  4642  0F4E  2F4C               	goto	u2275
  4643  0F4F  0824               	movf	??_DS1307GetMonth+2,w
  4644  0F50  318E  2670         	fcall	___bmul
  4645  0F52  0020               	movlb	0	; select bank0
  4646  0F53  0722               	addwf	??_DS1307GetMonth,w
  4647  0F54  00A5               	movwf	??_DS1307GetMonth+3
  4648  0F55  0825               	movf	??_DS1307GetMonth+3,w
  4649  0F56  00FA               	movwf	DS1307GetMonth@u8data
  4650                           
  4651                           ;ds1307.c: 129: return u8data;
  4652  0F57  087A               	movf	DS1307GetMonth@u8data,w
  4653  0F58  0008               	return
  4654  0F59                     __end_of_DS1307GetMonth:	
  4655                           
  4656                           	psect	text18
  4657  0F1B                     __ptext18:	
  4658 ;; *************** function _DS1307GetMinutes *****************
  4659 ;; Defined at:
  4660 ;;		line 100 in file "ds1307.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  u8data          1   10[COMMON] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      unsigned char 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, pclath, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4678 ;;Total ram usage:        5 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    4
  4681 ;; This function calls:
  4682 ;;		_DS1307ReadDataFrom
  4683 ;;		___bmul
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _DS1307GetMinutes
  4691  0F1B                     _DS1307GetMinutes:	
  4692                           
  4693                           ;ds1307.c: 101: uint8_t u8data;
  4694                           ;ds1307.c: 102: u8data = DS1307ReadDataFrom(0x01);
  4695                           
  4696                           ;incstack = 0
  4697                           ; Regs used in _DS1307GetMinutes: [wreg+status,2+status,0+pclath+cstack]
  4698  0F1B  3001               	movlw	1
  4699  0F1C  318F  2778  318F   	fcall	_DS1307ReadDataFrom
  4700  0F1F  0020               	movlb	0	; select bank0
  4701  0F20  00A2               	movwf	??_DS1307GetMinutes
  4702  0F21  0822               	movf	??_DS1307GetMinutes,w
  4703  0F22  00FA               	movwf	DS1307GetMinutes@u8data
  4704                           
  4705                           ;ds1307.c: 103: u8data = (u8data>>4)*10 + (u8data&0x0F);
  4706  0F23  300F               	movlw	15
  4707  0F24  057A               	andwf	DS1307GetMinutes@u8data,w
  4708  0F25  00A2               	movwf	??_DS1307GetMinutes
  4709  0F26  300A               	movlw	10
  4710  0F27  00A3               	movwf	??_DS1307GetMinutes+1
  4711  0F28  0823               	movf	??_DS1307GetMinutes+1,w
  4712  0F29  00F2               	movwf	___bmul@multiplicand
  4713  0F2A  087A               	movf	DS1307GetMinutes@u8data,w
  4714  0F2B  00A4               	movwf	??_DS1307GetMinutes+2
  4715  0F2C  3004               	movlw	4
  4716  0F2D                     u2245:	
  4717  0F2D  36A4               	lsrf	??_DS1307GetMinutes+2,f
  4718  0F2E  0B89               	decfsz	9,f
  4719  0F2F  2F2D               	goto	u2245
  4720  0F30  0824               	movf	??_DS1307GetMinutes+2,w
  4721  0F31  318E  2670         	fcall	___bmul
  4722  0F33  0020               	movlb	0	; select bank0
  4723  0F34  0722               	addwf	??_DS1307GetMinutes,w
  4724  0F35  00A5               	movwf	??_DS1307GetMinutes+3
  4725  0F36  0825               	movf	??_DS1307GetMinutes+3,w
  4726  0F37  00FA               	movwf	DS1307GetMinutes@u8data
  4727                           
  4728                           ;ds1307.c: 105: return u8data;
  4729  0F38  087A               	movf	DS1307GetMinutes@u8data,w
  4730  0F39  0008               	return
  4731  0F3A                     __end_of_DS1307GetMinutes:	
  4732                           
  4733                           	psect	text19
  4734  0EFC                     __ptext19:	
  4735 ;; *************** function _DS1307GetHours *****************
  4736 ;; Defined at:
  4737 ;;		line 107 in file "ds1307.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  u8data          1   10[COMMON] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      unsigned char 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0, pclath, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;Total ram usage:        5 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    4
  4758 ;; This function calls:
  4759 ;;		_DS1307ReadDataFrom
  4760 ;;		___bmul
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function _DS1307GetHours
  4768  0EFC                     _DS1307GetHours:	
  4769                           
  4770                           ;ds1307.c: 108: uint8_t u8data;
  4771                           ;ds1307.c: 109: u8data = DS1307ReadDataFrom(0x02);
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in _DS1307GetHours: [wreg+status,2+status,0+pclath+cstack]
  4775  0EFC  3002               	movlw	2
  4776  0EFD  318F  2778  318E   	fcall	_DS1307ReadDataFrom
  4777  0F00  0020               	movlb	0	; select bank0
  4778  0F01  00A2               	movwf	??_DS1307GetHours
  4779  0F02  0822               	movf	??_DS1307GetHours,w
  4780  0F03  00FA               	movwf	DS1307GetHours@u8data
  4781                           
  4782                           ;ds1307.c: 110: u8data = (u8data>>4)*10 + (u8data&0x0F);
  4783  0F04  300F               	movlw	15
  4784  0F05  057A               	andwf	DS1307GetHours@u8data,w
  4785  0F06  00A2               	movwf	??_DS1307GetHours
  4786  0F07  300A               	movlw	10
  4787  0F08  00A3               	movwf	??_DS1307GetHours+1
  4788  0F09  0823               	movf	??_DS1307GetHours+1,w
  4789  0F0A  00F2               	movwf	___bmul@multiplicand
  4790  0F0B  087A               	movf	DS1307GetHours@u8data,w
  4791  0F0C  00A4               	movwf	??_DS1307GetHours+2
  4792  0F0D  3004               	movlw	4
  4793  0F0E                     u2255:	
  4794  0F0E  36A4               	lsrf	??_DS1307GetHours+2,f
  4795  0F0F  0B89               	decfsz	9,f
  4796  0F10  2F0E               	goto	u2255
  4797  0F11  0824               	movf	??_DS1307GetHours+2,w
  4798  0F12  318E  2670         	fcall	___bmul
  4799  0F14  0020               	movlb	0	; select bank0
  4800  0F15  0722               	addwf	??_DS1307GetHours,w
  4801  0F16  00A5               	movwf	??_DS1307GetHours+3
  4802  0F17  0825               	movf	??_DS1307GetHours+3,w
  4803  0F18  00FA               	movwf	DS1307GetHours@u8data
  4804                           
  4805                           ;ds1307.c: 111: return u8data;
  4806  0F19  087A               	movf	DS1307GetHours@u8data,w
  4807  0F1A  0008               	return
  4808  0F1B                     __end_of_DS1307GetHours:	
  4809                           
  4810                           	psect	text20
  4811  0E67                     __ptext20:	
  4812 ;; *************** function _DS1307GetDayOfWeek *****************
  4813 ;; Defined at:
  4814 ;;		line 113 in file "ds1307.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  u8data          1    2[BANK0 ] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      unsigned char 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0, pclath, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4832 ;;Total ram usage:        2 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    4
  4835 ;; This function calls:
  4836 ;;		_DS1307ReadDataFrom
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           
  4842                           
  4843                           ;psect for function _DS1307GetDayOfWeek
  4844  0E67                     _DS1307GetDayOfWeek:	
  4845                           
  4846                           ;ds1307.c: 114: uint8_t u8data;
  4847                           ;ds1307.c: 115: u8data = DS1307ReadDataFrom(0x03);
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _DS1307GetDayOfWeek: [wreg+status,2+status,0+pclath+cstack]
  4851  0E67  3003               	movlw	3
  4852  0E68  318F  2778         	fcall	_DS1307ReadDataFrom
  4853  0E6A  00FA               	movwf	??_DS1307GetDayOfWeek
  4854  0E6B  087A               	movf	??_DS1307GetDayOfWeek,w
  4855  0E6C  0020               	movlb	0	; select bank0
  4856  0E6D  00A2               	movwf	DS1307GetDayOfWeek@u8data
  4857                           
  4858                           ;ds1307.c: 116: return u8data;
  4859  0E6E  0822               	movf	DS1307GetDayOfWeek@u8data,w
  4860  0E6F  0008               	return
  4861  0E70                     __end_of_DS1307GetDayOfWeek:	
  4862                           
  4863                           	psect	text21
  4864  0EDD                     __ptext21:	
  4865 ;; *************** function _DS1307GetDay *****************
  4866 ;; Defined at:
  4867 ;;		line 118 in file "ds1307.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  u8data          1   10[COMMON] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      unsigned char 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0, pclath, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4885 ;;Total ram usage:        5 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    4
  4888 ;; This function calls:
  4889 ;;		_DS1307ReadDataFrom
  4890 ;;		___bmul
  4891 ;; This function is called by:
  4892 ;;		_main
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _DS1307GetDay
  4898  0EDD                     _DS1307GetDay:	
  4899                           
  4900                           ;ds1307.c: 119: uint8_t u8data;
  4901                           ;ds1307.c: 120: u8data = DS1307ReadDataFrom(0x04);
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _DS1307GetDay: [wreg+status,2+status,0+pclath+cstack]
  4905  0EDD  3004               	movlw	4
  4906  0EDE  318F  2778  318E   	fcall	_DS1307ReadDataFrom
  4907  0EE1  0020               	movlb	0	; select bank0
  4908  0EE2  00A2               	movwf	??_DS1307GetDay
  4909  0EE3  0822               	movf	??_DS1307GetDay,w
  4910  0EE4  00FA               	movwf	DS1307GetDay@u8data
  4911                           
  4912                           ;ds1307.c: 121: u8data = (((u8data>>4)*10) + (u8data&0x0F));
  4913  0EE5  300F               	movlw	15
  4914  0EE6  057A               	andwf	DS1307GetDay@u8data,w
  4915  0EE7  00A2               	movwf	??_DS1307GetDay
  4916  0EE8  300A               	movlw	10
  4917  0EE9  00A3               	movwf	??_DS1307GetDay+1
  4918  0EEA  0823               	movf	??_DS1307GetDay+1,w
  4919  0EEB  00F2               	movwf	___bmul@multiplicand
  4920  0EEC  087A               	movf	DS1307GetDay@u8data,w
  4921  0EED  00A4               	movwf	??_DS1307GetDay+2
  4922  0EEE  3004               	movlw	4
  4923  0EEF                     u2265:	
  4924  0EEF  36A4               	lsrf	??_DS1307GetDay+2,f
  4925  0EF0  0B89               	decfsz	9,f
  4926  0EF1  2EEF               	goto	u2265
  4927  0EF2  0824               	movf	??_DS1307GetDay+2,w
  4928  0EF3  318E  2670         	fcall	___bmul
  4929  0EF5  0020               	movlb	0	; select bank0
  4930  0EF6  0722               	addwf	??_DS1307GetDay,w
  4931  0EF7  00A5               	movwf	??_DS1307GetDay+3
  4932  0EF8  0825               	movf	??_DS1307GetDay+3,w
  4933  0EF9  00FA               	movwf	DS1307GetDay@u8data
  4934                           
  4935                           ;ds1307.c: 122: return u8data;
  4936  0EFA  087A               	movf	DS1307GetDay@u8data,w
  4937  0EFB  0008               	return
  4938  0EFC                     __end_of_DS1307GetDay:	
  4939                           
  4940                           	psect	text22
  4941  0E70                     __ptext22:	
  4942 ;; *************** function ___bmul *****************
  4943 ;; Defined at:
  4944 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  multiplier      1    wreg     unsigned char 
  4947 ;;  multiplicand    1    2[COMMON] unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  multiplier      1    5[COMMON] unsigned char 
  4950 ;;  product         1    4[COMMON] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      unsigned char 
  4953 ;; Registers used:
  4954 ;;		wreg, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;Total ram usage:        4 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    1
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_DS1307GetSeconds
  4971 ;;		_DS1307GetMinutes
  4972 ;;		_DS1307GetHours
  4973 ;;		_DS1307GetDay
  4974 ;;		_DS1307GetMonth
  4975 ;;		_DS1307GetYear
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function ___bmul
  4981  0E70                     ___bmul:	
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4985                           ;___bmul@multiplier stored from wreg
  4986  0E70  00F5               	movwf	___bmul@multiplier
  4987  0E71  01F4               	clrf	___bmul@product
  4988  0E72                     l2528:	
  4989  0E72  1C75               	btfss	___bmul@multiplier,0
  4990  0E73  2E78               	goto	l2532
  4991  0E74  0872               	movf	___bmul@multiplicand,w
  4992  0E75  00F3               	movwf	??___bmul
  4993  0E76  0873               	movf	??___bmul,w
  4994  0E77  07F4               	addwf	___bmul@product,f
  4995  0E78                     l2532:	
  4996  0E78  1003               	clrc
  4997  0E79  0DF2               	rlf	___bmul@multiplicand,f
  4998  0E7A  1003               	clrc
  4999  0E7B  0CF5               	rrf	___bmul@multiplier,f
  5000  0E7C  08F5               	movf	___bmul@multiplier,f
  5001  0E7D  1D03               	skipz
  5002  0E7E  2E72               	goto	l2528
  5003  0E7F  0874               	movf	___bmul@product,w
  5004  0E80  0008               	return
  5005  0E81                     __end_of___bmul:	
  5006                           
  5007                           	psect	text23
  5008  0F78                     __ptext23:	
  5009 ;; *************** function _DS1307ReadDataFrom *****************
  5010 ;; Defined at:
  5011 ;;		line 72 in file "ds1307.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  mem             1    wreg     unsigned char 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  mem             1    0[BANK0 ] unsigned char 
  5016 ;;  u8data          1    1[BANK0 ] unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  1    wreg      unsigned char 
  5019 ;; Registers used:
  5020 ;;		wreg, status,2, status,0, pclath, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;Total ram usage:        3 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    3
  5033 ;; This function calls:
  5034 ;;		_i2c_Start
  5035 ;;		_i2c_Stop
  5036 ;;		_i2c_Write
  5037 ;;		_i2c_readByte
  5038 ;;		_i2c_sendNACK
  5039 ;; This function is called by:
  5040 ;;		_DS1307GetSeconds
  5041 ;;		_DS1307GetMinutes
  5042 ;;		_DS1307GetHours
  5043 ;;		_DS1307GetDayOfWeek
  5044 ;;		_DS1307GetDay
  5045 ;;		_DS1307GetMonth
  5046 ;;		_DS1307GetYear
  5047 ;;		_DS1307GetTenSeconds
  5048 ;;		_DS1307GetTenMinutes
  5049 ;;		_DS1307GetTenHours
  5050 ;;		_DS1307GetTenDate
  5051 ;;		_DS1307GetTenMonth
  5052 ;;		_DS1307GetTenYear
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           
  5057                           ;psect for function _DS1307ReadDataFrom
  5058  0F78                     _DS1307ReadDataFrom:	
  5059                           
  5060                           ;incstack = 0
  5061                           ; Regs used in _DS1307ReadDataFrom: [wreg+status,2+status,0+pclath+cstack]
  5062                           ;DS1307ReadDataFrom@mem stored from wreg
  5063  0F78  0020               	movlb	0	; select bank0
  5064  0F79  00A0               	movwf	DS1307ReadDataFrom@mem
  5065                           
  5066                           ;ds1307.c: 73: uint8_t u8data;
  5067                           ;ds1307.c: 74: i2c_Start();
  5068  0F7A  318E  2643  318F   	fcall	_i2c_Start
  5069                           
  5070                           ;ds1307.c: 76: i2c_Write((uint8_t)(0xD0));
  5071  0F7D  30D0               	movlw	208
  5072  0F7E  318E  265E  318F   	fcall	_i2c_Write
  5073                           
  5074                           ;ds1307.c: 78: i2c_Write((uint8_t)(mem));
  5075  0F81  0020               	movlb	0	; select bank0
  5076  0F82  0820               	movf	DS1307ReadDataFrom@mem,w
  5077  0F83  318E  265E  318F   	fcall	_i2c_Write
  5078                           
  5079                           ;ds1307.c: 80: i2c_Start();
  5080  0F86  318E  2643  318F   	fcall	_i2c_Start
  5081                           
  5082                           ;ds1307.c: 82: i2c_Write((uint8_t)(0xD0 + 1));
  5083  0F89  30D1               	movlw	209
  5084  0F8A  318E  265E  318F   	fcall	_i2c_Write
  5085                           
  5086                           ;ds1307.c: 84: u8data = i2c_readByte();
  5087  0F8D  318E  2652  318F   	fcall	_i2c_readByte
  5088  0F90  00F9               	movwf	??_DS1307ReadDataFrom
  5089  0F91  0879               	movf	??_DS1307ReadDataFrom,w
  5090  0F92  0020               	movlb	0	; select bank0
  5091  0F93  00A1               	movwf	DS1307ReadDataFrom@u8data
  5092                           
  5093                           ;ds1307.c: 85: i2c_sendNACK();
  5094  0F94  318E  263F  318F   	fcall	_i2c_sendNACK
  5095                           
  5096                           ;ds1307.c: 87: i2c_Stop();
  5097  0F97  318E  2648         	fcall	_i2c_Stop
  5098                           
  5099                           ;ds1307.c: 88: return u8data;
  5100  0F99  0020               	movlb	0	; select bank0
  5101  0F9A  0821               	movf	DS1307ReadDataFrom@u8data,w
  5102  0F9B  0008               	return
  5103  0F9C                     __end_of_DS1307ReadDataFrom:	
  5104                           
  5105                           	psect	text24
  5106  0E3F                     __ptext24:	
  5107 ;; *************** function _i2c_sendNACK *****************
  5108 ;; Defined at:
  5109 ;;		line 86 in file "i2cbysk.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;		None               void
  5116 ;; Registers used:
  5117 ;;		None
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_DS1307ReadDataFrom
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           
  5138                           ;psect for function _i2c_sendNACK
  5139  0E3F                     _i2c_sendNACK:	
  5140                           
  5141                           ;i2cbysk.c: 87: SSP1CON2bits.ACKDT = 1;
  5142                           
  5143                           ;incstack = 0
  5144                           ; Regs used in _i2c_sendNACK: []
  5145  0E3F  0024               	movlb	4	; select bank4
  5146  0E40  1696               	bsf	22,5	;volatile
  5147                           
  5148                           ;i2cbysk.c: 88: SSP1CON2bits.ACKEN = 1;
  5149  0E41  1616               	bsf	22,4	;volatile
  5150  0E42  0008               	return
  5151  0E43                     __end_of_i2c_sendNACK:	
  5152                           
  5153                           	psect	text25
  5154  0E52                     __ptext25:	
  5155 ;; *************** function _i2c_readByte *****************
  5156 ;; Defined at:
  5157 ;;		line 98 in file "i2cbysk.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;		None
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      unsigned char 
  5164 ;; Registers used:
  5165 ;;		wreg
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;Total ram usage:        0 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    1
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_DS1307ReadDataFrom
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           
  5186                           ;psect for function _i2c_readByte
  5187  0E52                     _i2c_readByte:	
  5188                           
  5189                           ;i2cbysk.c: 99: SSP1CON2bits.RCEN = 1;
  5190                           
  5191                           ;incstack = 0
  5192                           ; Regs used in _i2c_readByte: [wreg]
  5193  0E52  0024               	movlb	4	; select bank4
  5194  0E53  1596               	bsf	22,3	;volatile
  5195  0E54                     l356:	
  5196                           ;i2cbysk.c: 100: while (SSP1CON2bits.RCEN == 1);
  5197                           
  5198  0E54  1996               	btfsc	22,3	;volatile
  5199  0E55  2E54               	goto	l356
  5200                           
  5201                           ;i2cbysk.c: 101: return SSP1BUF;
  5202  0E56  0811               	movf	17,w	;volatile
  5203  0E57  0008               	return
  5204  0E58                     __end_of_i2c_readByte:	
  5205                           
  5206                           	psect	text26
  5207  0E5E                     __ptext26:	
  5208 ;; *************** function _i2c_Write *****************
  5209 ;; Defined at:
  5210 ;;		line 104 in file "i2cbysk.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  data            1    wreg     unsigned char 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  data            1    8[COMMON] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      unsigned char 
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, status,0, pclath, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;Total ram usage:        1 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    2
  5231 ;; This function calls:
  5232 ;;		_i2c_waitIDLE
  5233 ;; This function is called by:
  5234 ;;		_DS1307StartOsc
  5235 ;;		_DS1307SetTimeAndDate
  5236 ;;		_DS1307ReadDataFrom
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           
  5241                           ;psect for function _i2c_Write
  5242  0E5E                     _i2c_Write:	
  5243                           
  5244                           ;incstack = 0
  5245                           ; Regs used in _i2c_Write: [wreg+status,2+status,0+pclath+cstack]
  5246                           ;i2c_Write@data stored from wreg
  5247  0E5E  00F8               	movwf	i2c_Write@data
  5248                           
  5249                           ;i2cbysk.c: 105: SSP1BUF = data;
  5250  0E5F  0878               	movf	i2c_Write@data,w
  5251  0E60  0024               	movlb	4	; select bank4
  5252  0E61  0091               	movwf	17	;volatile
  5253                           
  5254                           ;i2cbysk.c: 106: i2c_waitIDLE();
  5255  0E62  318E  26BE         	fcall	_i2c_waitIDLE
  5256                           
  5257                           ;i2cbysk.c: 108: return (unsigned char)(!SSP1CON2bits.ACKSTAT);
  5258                           ;	Return value of _i2c_Write is never used
  5259  0E64  0024               	movlb	4	; select bank4
  5260  0E65  0816               	movf	22,w	;volatile
  5261  0E66  0008               	return
  5262  0E67                     __end_of_i2c_Write:	
  5263                           
  5264                           	psect	text27
  5265  0EBE                     __ptext27:	
  5266 ;; *************** function _i2c_waitIDLE *****************
  5267 ;; Defined at:
  5268 ;;		line 76 in file "i2cbysk.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;		None
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;		None
  5273 ;; Return value:  Size  Location     Type
  5274 ;;		None               void
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;Total ram usage:        6 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    1
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_i2c_Write
  5293 ;;		_i2c_sendByte
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function _i2c_waitIDLE
  5299  0EBE                     _i2c_waitIDLE:	
  5300  0EBE                     l2448:	
  5301                           ;i2cbysk.c: 77: while( SSP1STATbits.R_nW | SSP1CON2bits.SEN | SSP1CON2bits.RSEN | SSP1CO
      +                          N2bits.PEN | SSP1CON2bits.RCEN | SSP1CON2bits.ACKEN ) {};
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in _i2c_waitIDLE: [wreg+status,2+status,0]
  5305                           
  5306  0EBE  0024               	movlb	4	; select bank4
  5307  0EBF  0E16               	swapf	22,w	;volatile
  5308  0EC0  3901               	andlw	1
  5309  0EC1  00F2               	movwf	??_i2c_waitIDLE
  5310  0EC2  0C16               	rrf	22,w	;volatile
  5311  0EC3  00F3               	movwf	??_i2c_waitIDLE+1
  5312  0EC4  0CF3               	rrf	??_i2c_waitIDLE+1,f
  5313  0EC5  0C73               	rrf	??_i2c_waitIDLE+1,w
  5314  0EC6  3901               	andlw	1
  5315  0EC7  00F4               	movwf	??_i2c_waitIDLE+2
  5316  0EC8  0C16               	rrf	22,w	;volatile
  5317  0EC9  0C89               	rrf	9,f
  5318  0ECA  3901               	andlw	1
  5319  0ECB  00F5               	movwf	??_i2c_waitIDLE+3
  5320  0ECC  0C16               	rrf	22,w	;volatile
  5321  0ECD  3901               	andlw	1
  5322  0ECE  00F6               	movwf	??_i2c_waitIDLE+4
  5323  0ECF  0816               	movf	22,w	;volatile
  5324  0ED0  3901               	andlw	1
  5325  0ED1  00F7               	movwf	??_i2c_waitIDLE+5
  5326  0ED2  0C14               	rrf	20,w	;volatile
  5327  0ED3  0C89               	rrf	9,f
  5328  0ED4  3901               	andlw	1
  5329  0ED5  0477               	iorwf	??_i2c_waitIDLE+5,w
  5330  0ED6  0476               	iorwf	??_i2c_waitIDLE+4,w
  5331  0ED7  0475               	iorwf	??_i2c_waitIDLE+3,w
  5332  0ED8  0474               	iorwf	??_i2c_waitIDLE+2,w
  5333  0ED9  0472               	iorwf	??_i2c_waitIDLE,w
  5334  0EDA  1903               	btfsc	3,2
  5335  0EDB  0008               	return
  5336  0EDC  2EBE               	goto	l2448
  5337  0EDD                     __end_of_i2c_waitIDLE:	
  5338                           
  5339                           	psect	text28
  5340  0E48                     __ptext28:	
  5341 ;; *************** function _i2c_Stop *****************
  5342 ;; Defined at:
  5343 ;;		line 71 in file "i2cbysk.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;		None               void
  5350 ;; Registers used:
  5351 ;;		None
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5361 ;;Total ram usage:        0 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    1
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_DS1307StartOsc
  5368 ;;		_DS1307SetTimeAndDate
  5369 ;;		_DS1307ReadDataFrom
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           
  5374                           ;psect for function _i2c_Stop
  5375  0E48                     _i2c_Stop:	
  5376                           
  5377                           ;i2cbysk.c: 72: SSP1CON2bits.PEN = 1;
  5378                           
  5379                           ;incstack = 0
  5380                           ; Regs used in _i2c_Stop: []
  5381  0E48  0024               	movlb	4	; select bank4
  5382  0E49  1516               	bsf	22,2	;volatile
  5383  0E4A                     l335:	
  5384                           ;i2cbysk.c: 73: while(SSP1CON2bits.PEN);
  5385                           
  5386  0E4A  1D16               	btfss	22,2	;volatile
  5387  0E4B  0008               	return
  5388  0E4C  2E4A               	goto	l335
  5389  0E4D                     __end_of_i2c_Stop:	
  5390                           
  5391                           	psect	text29
  5392  0E43                     __ptext29:	
  5393 ;; *************** function _i2c_Start *****************
  5394 ;; Defined at:
  5395 ;;		line 61 in file "i2cbysk.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;		None
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;		None
  5400 ;; Return value:  Size  Location     Type
  5401 ;;		None               void
  5402 ;; Registers used:
  5403 ;;		None
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;Total ram usage:        0 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    1
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_DS1307StartOsc
  5420 ;;		_DS1307SetTimeAndDate
  5421 ;;		_DS1307ReadDataFrom
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           
  5426                           ;psect for function _i2c_Start
  5427  0E43                     _i2c_Start:	
  5428                           
  5429                           ;i2cbysk.c: 62: SSP1CON2bits.SEN = 1;
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _i2c_Start: []
  5433  0E43  0024               	movlb	4	; select bank4
  5434  0E44  1416               	bsf	22,0	;volatile
  5435  0E45                     l323:	
  5436                           ;i2cbysk.c: 63: while(SSP1CON2bits.SEN);
  5437                           
  5438  0E45  1C16               	btfss	22,0	;volatile
  5439  0E46  0008               	return
  5440  0E47  2E45               	goto	l323
  5441  0E48                     __end_of_i2c_Start:	
  5442                           
  5443                           	psect	intentry
  5444  0004                     __pintentry:	
  5445 ;; *************** function _ISRRoutine *****************
  5446 ;; Defined at:
  5447 ;;		line 261 in file "main.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;		None               void
  5454 ;; Registers used:
  5455 ;;		wreg, status,2
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;Total ram usage:        2 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		Interrupt level 1
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474  0004                     _ISRRoutine:	
  5475                           
  5476                           ;incstack = 0
  5477                           ; Regs used in _ISRRoutine: [wreg+status,2]
  5478  0004  147E               	bsf	126,0	;set compiler interrupt flag
  5479  0005  3180               	pagesel	$
  5480  0006  0020               	movlb	0	; select bank0
  5481  0007  087F               	movf	127,w
  5482  0008  00F1               	movwf	??_ISRRoutine+1
  5483                           
  5484                           ;main.c: 264: if (TMR0IE && TMR0IF) {
  5485  0009  1A8B               	btfsc	11,5	;volatile
  5486  000A  1D0B               	btfss	11,2	;volatile
  5487  000B  2831               	goto	i1l226
  5488                           
  5489                           ;main.c: 265: INTCONbits.GIE = 0;
  5490  000C  138B               	bcf	11,7	;volatile
  5491                           
  5492                           ;main.c: 266: TMR0IF = 0;
  5493  000D  110B               	bcf	11,2	;volatile
  5494                           
  5495                           ;main.c: 267: ++Timer0Count;
  5496  000E  3001               	movlw	1
  5497  000F  07C4               	addwf	_Timer0Count,f	;volatile
  5498  0010  3000               	movlw	0
  5499  0011  3DC5               	addwfc	_Timer0Count+1,f	;volatile
  5500                           
  5501                           ;main.c: 270: if(Timer0Count >= 500) {
  5502  0012  3001               	movlw	1
  5503  0013  0245               	subwf	_Timer0Count+1,w	;volatile
  5504  0014  30F4               	movlw	244
  5505  0015  1903               	skipnz
  5506  0016  0244               	subwf	_Timer0Count,w	;volatile
  5507  0017  1C03               	skipc
  5508  0018  2823               	goto	i1l2428
  5509                           
  5510                           ;main.c: 274: Timer0Count = 0;
  5511  0019  01C4               	clrf	_Timer0Count	;volatile
  5512  001A  01C5               	clrf	_Timer0Count+1	;volatile
  5513                           
  5514                           ;main.c: 275: ++CounterRefreshTime;
  5515  001B  3001               	movlw	1
  5516  001C  07C2               	addwf	_CounterRefreshTime,f	;volatile
  5517  001D  3000               	movlw	0
  5518  001E  3DC3               	addwfc	_CounterRefreshTime+1,f	;volatile
  5519                           
  5520                           ;main.c: 276: TimeRefresh = 1;
  5521  001F  3001               	movlw	1
  5522  0020  00F0               	movwf	??_ISRRoutine
  5523  0021  0870               	movf	??_ISRRoutine,w
  5524  0022  00C7               	movwf	_TimeRefresh	;volatile
  5525  0023                     i1l2428:	
  5526                           
  5527                           ;main.c: 277: }
  5528                           ;main.c: 279: if(CounterRefreshTime >= 60) {
  5529  0023  3000               	movlw	0
  5530  0024  0243               	subwf	_CounterRefreshTime+1,w	;volatile
  5531  0025  303C               	movlw	60
  5532  0026  1903               	skipnz
  5533  0027  0242               	subwf	_CounterRefreshTime,w	;volatile
  5534  0028  1C03               	skipc
  5535  0029  2830               	goto	i1l2434
  5536                           
  5537                           ;main.c: 280: TimeRefresh = 1;
  5538  002A  3001               	movlw	1
  5539  002B  00F0               	movwf	??_ISRRoutine
  5540  002C  0870               	movf	??_ISRRoutine,w
  5541  002D  00C7               	movwf	_TimeRefresh	;volatile
  5542                           
  5543                           ;main.c: 281: CounterRefreshTime = 0;
  5544  002E  01C2               	clrf	_CounterRefreshTime	;volatile
  5545  002F  01C3               	clrf	_CounterRefreshTime+1	;volatile
  5546  0030                     i1l2434:	
  5547                           
  5548                           ;main.c: 282: }
  5549                           ;main.c: 284: INTCONbits.GIE = 1;
  5550  0030  178B               	bsf	11,7	;volatile
  5551  0031                     i1l226:	
  5552                           ;main.c: 286: }
  5553                           ;main.c: 288: return;
  5554                           
  5555                           ;main.c: 285: return;
  5556                           
  5557  0031  0871               	movf	??_ISRRoutine+1,w
  5558  0032  00FF               	movwf	127
  5559  0033  107E               	bcf	126,0	;clear compiler interrupt flag
  5560  0034  0009               	retfie
  5561  0035                     __end_of_ISRRoutine:	
  5562  007E                     btemp	set	126	;btemp
  5563  007E                     pic14e$flags	set	126
  5564  007E                     wtemp	set	126
  5565  007E                     wtemp0	set	126
  5566  0080                     wtemp1	set	128
  5567  0082                     wtemp2	set	130
  5568  0084                     wtemp3	set	132
  5569  0086                     wtemp4	set	134
  5570  0088                     wtemp5	set	136
  5571  007F                     wtemp6	set	127
  5572  007E                     ttemp	set	126
  5573  007E                     ttemp0	set	126
  5574  0081                     ttemp1	set	129
  5575  0084                     ttemp2	set	132
  5576  0087                     ttemp3	set	135
  5577  007F                     ttemp4	set	127
  5578  007E                     ltemp	set	126
  5579  007E                     ltemp0	set	126
  5580  0082                     ltemp1	set	130
  5581  0086                     ltemp2	set	134
  5582  0080                     ltemp3	set	128


Data Sizes:
    Strings     75
    Constant    0
    Data        69
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     29      48
    BANK1            80      0      64
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[17]), STR_13(CODE[15]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_DS1307GetDay
    _main->_DS1307GetDayOfWeek
    _main->_DS1307GetHours
    _main->_DS1307GetMinutes
    _main->_DS1307GetMonth
    _main->_DS1307GetYear
    _main->_LCDByte
    _ShowTime->_LCDByte
    _ShowDate->_LCDByte
    _LCDWriteString->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDWriteInt->___awdiv
    _LCDGotoXY->_LCDByte
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop
    _DS1307StartOsc->_i2c_Write
    _DS1307SetTimeAndDate->___awdiv
    _DS1307GetYear->_DS1307ReadDataFrom
    _DS1307GetSeconds->_DS1307ReadDataFrom
    _DS1307GetMonth->_DS1307ReadDataFrom
    _DS1307GetMinutes->_DS1307ReadDataFrom
    _DS1307GetHours->_DS1307ReadDataFrom
    _DS1307GetDayOfWeek->_DS1307ReadDataFrom
    _DS1307GetDay->_DS1307ReadDataFrom
    _DS1307ReadDataFrom->_i2c_Write
    _i2c_Write->_i2c_waitIDLE

Critical Paths under _ISRRoutine in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_DS1307SetTimeAndDate
    _main->_ShowDate
    _ShowTime->_LCDWriteInt
    _ShowDate->_LCDWriteInt
    _DS1307GetYear->_DS1307ReadDataFrom
    _DS1307GetSeconds->_DS1307ReadDataFrom
    _DS1307GetMonth->_DS1307ReadDataFrom
    _DS1307GetMinutes->_DS1307ReadDataFrom
    _DS1307GetHours->_DS1307ReadDataFrom
    _DS1307GetDayOfWeek->_DS1307ReadDataFrom
    _DS1307GetDay->_DS1307ReadDataFrom

Critical Paths under _ISRRoutine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRRoutine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRRoutine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRRoutine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRRoutine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRRoutine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRRoutine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRRoutine in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRRoutine in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRRoutine in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRRoutine in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRRoutine in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRRoutine in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   37352
                                             24 BANK0      5     5      0
                       _DS1307GetDay
                 _DS1307GetDayOfWeek
                     _DS1307GetHours
                   _DS1307GetMinutes
                     _DS1307GetMonth
                   _DS1307GetSeconds
                      _DS1307GetYear
               _DS1307SetTimeAndDate
                     _DS1307StartOsc
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                        _SetUpDevice
                           _ShowDate
                           _ShowTime
                           _i2c_init
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowTime                                             8     4      4   10993
                                             14 BANK0      8     4      4
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _ShowDate                                            10     4      6   11451
                                             14 BANK0     10     4      6
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       4     2      2    2965
                                              0 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    3717
                                              0 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    2163
                                              0 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _SetUpDevice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              5     5      0    1043
                                              0 BANK0      5     5      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1     953
                                              4 COMMON     7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DS1307StartOsc                                       0     0      0      31
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (1) _DS1307SetTimeAndDate                                24    18      6    3229
                                              0 BANK0     24    18      6
                            ___awdiv
                            ___awmod
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     932
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     936
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _DS1307GetYear                                        5     5      0     721
                                             10 COMMON     1     1      0
                                              2 BANK0      4     4      0
                 _DS1307ReadDataFrom
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _DS1307GetSeconds                                     5     5      0     789
                                              2 BANK0      5     5      0
                 _DS1307ReadDataFrom
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _DS1307GetMonth                                       5     5      0     721
                                             10 COMMON     1     1      0
                                              2 BANK0      4     4      0
                 _DS1307ReadDataFrom
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _DS1307GetMinutes                                     5     5      0     721
                                             10 COMMON     1     1      0
                                              2 BANK0      4     4      0
                 _DS1307ReadDataFrom
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _DS1307GetHours                                       5     5      0     721
                                             10 COMMON     1     1      0
                                              2 BANK0      4     4      0
                 _DS1307ReadDataFrom
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _DS1307GetDayOfWeek                                   2     2      0     130
                                             10 COMMON     1     1      0
                                              2 BANK0      1     1      0
                 _DS1307ReadDataFrom
 ---------------------------------------------------------------------------------
 (1) _DS1307GetDay                                         5     5      0     721
                                             10 COMMON     1     1      0
                                              2 BANK0      4     4      0
                 _DS1307ReadDataFrom
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     526
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _DS1307ReadDataFrom                                   3     3      0      96
                                              9 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _i2c_Start
                           _i2c_Stop
                          _i2c_Write
                       _i2c_readByte
                       _i2c_sendNACK
 ---------------------------------------------------------------------------------
 (3) _i2c_sendNACK                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_readByte                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_Write                                            1     1      0      31
                                              8 COMMON     1     1      0
                       _i2c_waitIDLE
 ---------------------------------------------------------------------------------
 (3) _i2c_waitIDLE                                         6     6      0       0
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (2) _i2c_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISRRoutine                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307GetDay
     _DS1307ReadDataFrom
       _i2c_Start
       _i2c_Stop
       _i2c_Write
         _i2c_waitIDLE
       _i2c_readByte
       _i2c_sendNACK
     ___bmul
   _DS1307GetDayOfWeek
     _DS1307ReadDataFrom
       _i2c_Start
       _i2c_Stop
       _i2c_Write
         _i2c_waitIDLE
       _i2c_readByte
       _i2c_sendNACK
   _DS1307GetHours
     _DS1307ReadDataFrom
       _i2c_Start
       _i2c_Stop
       _i2c_Write
         _i2c_waitIDLE
       _i2c_readByte
       _i2c_sendNACK
     ___bmul
   _DS1307GetMinutes
     _DS1307ReadDataFrom
       _i2c_Start
       _i2c_Stop
       _i2c_Write
         _i2c_waitIDLE
       _i2c_readByte
       _i2c_sendNACK
     ___bmul
   _DS1307GetMonth
     _DS1307ReadDataFrom
       _i2c_Start
       _i2c_Stop
       _i2c_Write
         _i2c_waitIDLE
       _i2c_readByte
       _i2c_sendNACK
     ___bmul
   _DS1307GetSeconds
     _DS1307ReadDataFrom
       _i2c_Start
       _i2c_Stop
       _i2c_Write
         _i2c_waitIDLE
       _i2c_readByte
       _i2c_sendNACK
     ___bmul
   _DS1307GetYear
     _DS1307ReadDataFrom
       _i2c_Start
       _i2c_Stop
       _i2c_Write
         _i2c_waitIDLE
       _i2c_readByte
       _i2c_sendNACK
     ___bmul
   _DS1307SetTimeAndDate
     ___awdiv
     ___awmod
     _i2c_Start
     _i2c_Stop
     _i2c_Write
       _i2c_waitIDLE
   _DS1307StartOsc
     _i2c_Start
     _i2c_Stop
     _i2c_Write
       _i2c_waitIDLE
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _SetUpDevice
   _ShowDate
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _ShowTime
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _i2c_init

 _ISRRoutine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      40       7       80.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Jul 04 05:14:42 2015

                        ?_LCDBusyLoop 0070                        ___bmul@product 0074  
                         __CFG_CP$OFF 0000                          ___awdiv@sign 0078  
                         __CFG_LVP$ON 0000                          _DS1307GetDay 0EDD  
                                 l323 0E45                                   l181 02D3  
                                 l335 0E4A                                   l247 066D  
                                 l248 066F                                   l280 0589  
                                 l290 0FBA                                   l291 0FA3  
                                 l356 0E54                                   _RA0 0060  
                                 _RA1 0061                                   _RA2 0062  
                        __CFG_CPD$OFF 0000                                   _day 004C  
                        ___awmod@sign 0078                          __CFG_BORV$LO 0000  
                                 wreg 0009                          __CFG_IESO$ON 0000  
          __end_of_DS1307GetDayOfWeek 0E70               LCDWriteInt@field_length 0022  
                     __end_of_LCDByte 06A8                       __end_of_LCDInit 0604  
                        ?_LCDWriteInt 0020                           LCDByte@temp 007A  
                                l1800 0621                                  l2520 07C2  
                                l1802 062D                                  l2532 0E78  
                                l1812 0648                                  l2516 07BC  
                                l2524 0792                                  l1910 0567  
                                l2448 0EBE                                  l2528 0E72  
                                l1816 0650                                  l1808 063F  
                                l1840 0762                                  l1832 075C  
                                l2800 0141                                  l1842 076E  
                                l1850 0783                                  l1914 056C  
                                l2650 06B3                                  l2802 0151  
                                l1828 0755                                  l2492 0FA5  
                                l1916 0570                                  l1908 0534  
                                l2660 06DA                                  l2804 0161  
                                l2820 01C4                                  l1790 0619  
                                l1854 078B                                  l1846 077A  
                                l2590 044C                                  l2494 0FA7  
                                l1918 0579                                  l2670 046B  
                                l2830 01D3                                  l2806 0171  
                                l1784 060E                                  l2680 0499  
                                l2672 0475                                  l2664 06E6  
                                l2840 01E7                                  l2824 01C8  
                                l2808 0181                                  l2816 019E  
                                l2498 0FAC                                  l2682 04A2  
                                l2674 047E                                  l2690 04CC  
                                l2842 01EC                                  l2834 01D9  
                                l2818 01B6                                  l2596 045D  
                                l2684 04AB                                  l2676 0487  
                                l2852 0203                                  l2836 01DE  
                                l2828 01CE                                  l2678 0490  
                                l2870 0270                                  l2854 0208  
                                l2846 01F5                                  l2862 0216  
                                l2688 04B4                                  l2872 0280  
                                l2880 02B0                                  l2848 01FA  
                                l2864 022A                                  l2874 0290  
                                l2882 02C5                                  l2866 0252  
                                l2858 0211                                  l2786 00F3  
                                l2876 02A0                                  l2868 0261  
                                l2796 0123                                  l2798 0132  
                                STR_1 0745                                  STR_2 0723  
                                STR_3 072F                                  STR_4 0725  
                                STR_5 0720                                  STR_6 073E  
                                STR_7 072A                                  STR_8 0739  
                                STR_9 0734                         _DS1307GetYear 0F59  
                                u1305 065B                                  u1405 0638  
                                u2205 0415                                  u1325 0676  
                                u1415 0640                                  u1335 0690  
                                u1505 077B                                  u2235 07E7  
                                u1540 051C                                  u2245 0F2D  
                                u2165 035D                                  u2255 0F0E  
                                u1375 0624                                  u2175 038B  
                                u2265 0EEF                                  u2185 03B9  
                                u2275 0F4C                                  u1395 062E  
                                u1475 0765                                  u2195 03E7  
                                u2507 02CC                                  u2285 0F6B  
                                u2517 05B4                                  u1495 0774  
                                u2527 06F8                                  u1595 0598  
                                u2487 008E                                  u2497 01BD  
                        __CFG_WRT$OFF 0000                         __CFG_FCMEN$ON 0000  
                                _main 005B                 DS1307SetTimeAndDate@i 0037  
                  __size_of_LCDGotoXY 0024                                  _year 004F  
                                fsr0h 0005                                  fsr1h 0007  
                                fsr0l 0004                                  indf0 0000  
                                indf1 0001                                  fsr1l 0006  
                       ?_i2c_readByte 0070                                  btemp 007E  
                       __CFG_BOREN$ON 0000          __end_of_DS1307SetTimeAndDate 0460  
                                ltemp 007E                                  start 0035  
                       ?_i2c_sendNACK 0070                                  ttemp 007E  
                                wtemp 007E                         ?_i2c_waitIDLE 0070  
                   ___bmul@multiplier 0075                         __CFG_MCLRE$ON 0000  
                       __CFG_PLLEN$ON 0000                                 ?_main 0070  
                      _DS1307GetHours 0EFC                       __end_of___awdiv 0657  
                               STR_10 0743                                 STR_11 0743  
                               STR_12 0743                                 STR_20 0747  
                               STR_21 0749                                 STR_13 0711  
                               STR_22 0747                                 STR_14 0700  
                               STR_23 0749                                 STR_15 0749  
                               STR_24 0749                                 STR_16 0747  
                               STR_25 0749                                 STR_17 0749  
                       __CFG_WDTE$OFF 0000                                 STR_26 0747  
                               STR_18 0749                                 STR_19 0749  
                     __end_of___awmod 0792                        _DS1307GetMonth 0F3A  
                        LCDInit@style 0023                       ___awdiv@divisor 0072  
                         ?_ISRRoutine 0070                                 i1l226 0031  
                     ___awdiv@counter 0077                                 _PORTC 000E  
                               _TRISC 008E                        ?_DS1307GetYear 0070  
                               _hours 0048                                 _month 004E  
                               ltemp0 007E                                 ltemp1 0082  
                               ltemp2 0086                                 ltemp3 0080  
                      ??_i2c_readByte 0072                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
       DS1307SetTimeAndDate@funcmonth 0024                        ??_i2c_sendNACK 0072  
                      _DS1307StartOsc 0E81                        ??_i2c_waitIDLE 0072  
                     __initialization 0037                          __end_of_main 0335  
                    __end_of_i2c_Stop 0E4D                      __end_of_i2c_init 0EA8  
              __end_of_DS1307GetHours 0F1B                __end_of_DS1307GetMonth 0F59  
           __size_of_DS1307GetMinutes 001F             __size_of_DS1307GetSeconds 0026  
                              ??_main 0038                         ??_SetUpDevice 0072  
                   __end_of_LCDGotoXY 0FC0                         LCDByte@isdata 0074  
                           ??_LCDByte 0075                             ??_LCDInit 0020  
                    __end_of_ShowDate 0511                      __end_of_ShowTime 06F4  
                    ___awdiv@dividend 0074                                _ANSELA 018C  
                              _ANSELC 018E                    __size_of_i2c_Start 0005  
                              i1l2434 0030                                i1l2428 0023  
                  __size_of_i2c_Write 0009                                _TMR0IE 005D  
                              _TMR0IF 005A                            ShowDate@dd 0031  
                          ShowDate@mm 0032                __end_of_DS1307StartOsc 0E93  
                          ShowDate@yy 0033                                _SSPADD 0212  
                 __size_of_ISRRoutine 0031                        __CFG_PWRTE$OFF 0000  
                      _LCDWriteString 0792                                ___bmul 0E70  
                          ShowTime@hh 0030                            ShowTime@mm 0031  
                           ??___awdiv 0076                        __CFG_STVREN$ON 0000  
                           ??___awmod 0076                       ?_DS1307GetHours 0070  
                     ?_DS1307GetMonth 0070                  __size_of_LCDBusyLoop 000A  
                    ___awdiv@quotient 0079                       ___awmod@divisor 0072  
                     ___awmod@counter 0077                         i2c_Write@data 0078  
            DS1307ReadDataFrom@u8data 0021                  _DS1307SetTimeAndDate 0335  
                        LCDWriteInt@i 002C                          LCDWriteInt@j 002A  
                     ??_DS1307GetYear 0022                   __end_of_SetUpDevice 0EBE  
                __size_of_LCDWriteInt 009B               __end_of__initialization 0057  
                     ?_DS1307StartOsc 0070                __end_of_LCDWriteString 07D3  
                           LCDByte@hn 0077                             LCDByte@ln 0078  
                 ___bmul@multiplicand 0072                        __pcstackCOMMON 0070  
                        __pidataBANK0 0E4D                          __pidataBANK1 0FC0  
                  DS1307GetDay@u8data 007A                     __end_of_i2c_Start 0E48  
                   __end_of_i2c_Write 0E67                  __end_of_i2c_readByte 0E58  
               ?_DS1307SetTimeAndDate 0020                  __end_of_i2c_sendNACK 0E43  
                      _OPTION_REGbits 0095                  __end_of_i2c_waitIDLE 0EDD  
          __end_of_DS1307ReadDataFrom 0F9C                            __pbssBANK0 003D  
                           ?_i2c_Stop 0070                             ?_i2c_init 0070  
                     ?_LCDWriteString 0020                    _DS1307GetDayOfWeek 0E67  
                          __pmaintext 005B                             ?_ShowDate 002E  
                           ?_ShowTime 002E                               ?___bmul 0072  
                 ?_DS1307GetDayOfWeek 0070                            __pintentry 0004  
                    _DS1307GetMinutes 0F1B                      _DS1307GetSeconds 07D3  
                        ??_ISRRoutine 0070                           _SetUpDevice 0EA8  
                             _LCDByte 0657                               _LCDInit 05AC  
                             _SSP1BUF 0211                           ShowDate@dow 0030  
                             _SSP1MSK 0213                  ??_DS1307GetDayOfWeek 007A  
                          ??_i2c_Stop 0072                            ??_i2c_init 0072  
                         _Timer0Count 0044                               _SetUpON 0046  
                  __end_of_ISRRoutine 0035                           _TimeRefresh 0047  
                          ??_ShowDate 0034                            ??_ShowTime 0032  
                        _dayoftheweek 004D                       __size_of___bmul 0011  
                             ___cgram 00A0                               ___awdiv 0604  
                             ___awmod 074B  DS1307SetTimeAndDate@funcDayOfTheWeek 0022  
                             __ptext1 0E93                               __ptext2 06A8  
                             __ptext3 0460                               __ptext4 0792  
                             __ptext5 0511                               __ptext6 0F9C  
                             __ptext7 0EA8                               __ptext8 05AC  
                             __ptext9 0657                ??_DS1307SetTimeAndDate 0026  
                    ___awmod@dividend 0074                               _minutes 0049  
                             _seconds 004A                             _LCDGotoXY 0F9C  
                             clrloop0 07FA                  end_of_initialization 0057  
           DS1307SetTimeAndDate@funch 0036             DS1307SetTimeAndDate@funcm 0020  
           DS1307SetTimeAndDate@funcs 0021                 DS1307GetSeconds@sec10 0025  
                             init_ram 0E58                               initloop 0E59  
                    ??_DS1307GetHours 0022                      ??_DS1307GetMonth 0022  
               __size_of_i2c_readByte 0006                          __pstringtext 0700  
               __size_of_i2c_sendNACK 0004                         ShowDate@clear 002F  
               __size_of_i2c_waitIDLE 001F                             _PORTAbits 000C  
                   LCDWriteString@msg 0020                      __CFG_FOSC$INTOSC 0000  
                           _TRISAbits 008C                             _TRISCbits 008E  
                          ?_LCDGotoXY 0020                      ??_DS1307StartOsc 0079  
                          LCDInit@__i 0024                            LCDGotoXY@x 0022  
                          LCDGotoXY@y 0020                          _i2c_readByte 0E52  
                        _i2c_sendNACK 0E3F                          _i2c_waitIDLE 0EBE  
                       ??_LCDBusyLoop 0072                        __end_of___bmul 0E81  
                       ?_DS1307GetDay 0070                             _i2c_Start 0E43  
        DS1307SetTimeAndDate@funcyear 0025                             _i2c_Write 0E5E  
                 start_initialization 0037                         ??_LCDWriteInt 0023  
                           _HourBlink 004B                 __end_of_DS1307GetYear 0F78  
                    ??_LCDWriteString 0022              __end_of_DS1307GetMinutes 0F3A  
            __end_of_DS1307GetSeconds 07F9                     __size_of_i2c_Stop 0005  
                   __size_of_i2c_init 0015                             ShowDate@x 0037  
                           ShowDate@y 002E                             ShowTime@x 0035  
                           ShowTime@y 002E                    _DS1307ReadDataFrom 0F78  
                            ??___bmul 0073                     __size_of_ShowDate 00B1  
                         __pdataBANK0 004B                           __pdataBANK1 00A0  
                   __size_of_ShowTime 004C                        ??_DS1307GetDay 0022  
                 ?_DS1307ReadDataFrom 0070                   __end_of_LCDBusyLoop 06FE  
                        ?_SetUpDevice 0070                              ?_LCDByte 0074  
                            ?_LCDInit 0070                            ?_i2c_Start 0070  
                          ?_i2c_Write 0070                           __pbssCOMMON 007B  
                            LCDByte@c 0079                             ___latbits 0002  
                       __pcstackBANK0 0020                           ??_LCDGotoXY 0021  
                       ShowTime@clear 002F                   __end_of__stringdata 074B  
                ??_DS1307ReadDataFrom 0079                      LCDWriteInt@F2720 003D  
                 __end_of_LCDWriteInt 05AC                  DS1307GetHours@u8data 007A  
                            ?___awdiv 0072                              ?___awmod 0072  
         __size_of_DS1307GetDayOfWeek 0009              DS1307GetDayOfWeek@u8data 0022  
                           clear_ram0 07F9                            _I2C1_STATE 007B  
                            _PIR2bits 0012                           _LCDBusyLoop 06F4  
                            _SSP1CON1 0215                      LCDWriteString@cc 0023  
                DS1307GetMonth@u8data 007A                           __stringdata 0700  
                         ??_i2c_Start 0072                           ??_i2c_Write 0078  
       __size_of_DS1307SetTimeAndDate 012B                      __size_of_LCDByte 0051  
                    __size_of_LCDInit 0058                           _LCDWriteInt 0511  
         DS1307SetTimeAndDate@funcday 0023                 DS1307ReadDataFrom@mem 0020  
                            _i2c_Stop 0E48                              _i2c_init 0E93  
                __end_of_DS1307GetDay 0EFC                              _ShowDate 0460  
                            _ShowTime 06A8                      __size_of___awdiv 0053  
                    __size_of___awmod 0047                    _CounterRefreshTime 0042  
                __size_of_SetUpDevice 0016                              __ptext10 06F4  
                            __ptext11 0E81                              __ptext20 0E67  
                            __ptext12 0335                              __ptext21 0EDD  
                            __ptext13 074B                              __ptext22 0E70  
                            __ptext14 0604                              __ptext23 0F78  
                            __ptext15 0F59                              __ptext24 0E3F  
                            __ptext16 07D3                              __ptext25 0E52  
                            __ptext17 0F3A                              __ptext26 0E5E  
                            __ptext18 0F1B                              __ptext27 0EBE  
                            __ptext19 0EFC                              __ptext28 0E48  
                            __ptext29 0E43                          _SSP1CON1bits 0215  
                        _SSP1CON2bits 0216                          _SSP1CON3bits 0217  
                   ?_DS1307GetMinutes 0070                     ?_DS1307GetSeconds 0070  
                       __size_of_main 02DA                    ??_DS1307GetMinutes 0022  
                  ??_DS1307GetSeconds 0022                          _SSP1STATbits 0214  
              DS1307GetMinutes@u8data 007A               __size_of_DS1307GetHours 001F  
             __size_of_DS1307GetMonth 001F                DS1307GetSeconds@u8data 0026  
          DS1307SetTimeAndDate@values 002E                            _INTCONbits 000B  
                         pic14e$flags 007E                   DS1307GetYear@u8data 007A  
                            intlevel1 0000                        LCDWriteInt@val 0020  
                      LCDWriteInt@str 0025                     __CFG_CLKOUTEN$OFF 0000  
             __size_of_DS1307StartOsc 0012                            _OSCCONbits 0099  
              __size_of_DS1307GetYear 001F                            _ISRRoutine 0004  
               __size_of_DS1307GetDay 001F           __size_of_DS1307ReadDataFrom 0024  
             __size_of_LCDWriteString 0041  
