

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Thu Jul 10 21:11:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000E                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  0091                     	;# 
    81  0092                     	;# 
    82  0093                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  010C                     	;# 
    95  010E                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0113                     	;# 
    99  0114                     	;# 
   100  0115                     	;# 
   101  0116                     	;# 
   102  0117                     	;# 
   103  0118                     	;# 
   104  0119                     	;# 
   105  011A                     	;# 
   106  011B                     	;# 
   107  011D                     	;# 
   108  011E                     	;# 
   109  018C                     	;# 
   110  018E                     	;# 
   111  0191                     	;# 
   112  0191                     	;# 
   113  0192                     	;# 
   114  0193                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0199                     	;# 
   121  019A                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019D                     	;# 
   126  019E                     	;# 
   127  019F                     	;# 
   128  020C                     	;# 
   129  020E                     	;# 
   130  0211                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0213                     	;# 
   136  0214                     	;# 
   137  0214                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0217                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0298                     	;# 
   154  0298                     	;# 
   155  0299                     	;# 
   156  029A                     	;# 
   157  029B                     	;# 
   158  029C                     	;# 
   159  029D                     	;# 
   160  029E                     	;# 
   161  0311                     	;# 
   162  0311                     	;# 
   163  0312                     	;# 
   164  0313                     	;# 
   165  0318                     	;# 
   166  0318                     	;# 
   167  0319                     	;# 
   168  031A                     	;# 
   169  038C                     	;# 
   170  038E                     	;# 
   171  0391                     	;# 
   172  0392                     	;# 
   173  0393                     	;# 
   174  039A                     	;# 
   175  039C                     	;# 
   176  039D                     	;# 
   177  039E                     	;# 
   178  039F                     	;# 
   179  0415                     	;# 
   180  0416                     	;# 
   181  0417                     	;# 
   182  041C                     	;# 
   183  041D                     	;# 
   184  041E                     	;# 
   185  0FE4                     	;# 
   186  0FE5                     	;# 
   187  0FE6                     	;# 
   188  0FE7                     	;# 
   189  0FE8                     	;# 
   190  0FE9                     	;# 
   191  0FEA                     	;# 
   192  0FEB                     	;# 
   193  0FED                     	;# 
   194  0FEE                     	;# 
   195  0FEF                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000E                     	;# 
   210  0011                     	;# 
   211  0012                     	;# 
   212  0013                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  008C                     	;# 
   225  008E                     	;# 
   226  0091                     	;# 
   227  0092                     	;# 
   228  0093                     	;# 
   229  0095                     	;# 
   230  0096                     	;# 
   231  0097                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009A                     	;# 
   235  009B                     	;# 
   236  009B                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  010C                     	;# 
   241  010E                     	;# 
   242  0111                     	;# 
   243  0112                     	;# 
   244  0113                     	;# 
   245  0114                     	;# 
   246  0115                     	;# 
   247  0116                     	;# 
   248  0117                     	;# 
   249  0118                     	;# 
   250  0119                     	;# 
   251  011A                     	;# 
   252  011B                     	;# 
   253  011D                     	;# 
   254  011E                     	;# 
   255  018C                     	;# 
   256  018E                     	;# 
   257  0191                     	;# 
   258  0191                     	;# 
   259  0192                     	;# 
   260  0193                     	;# 
   261  0193                     	;# 
   262  0193                     	;# 
   263  0194                     	;# 
   264  0195                     	;# 
   265  0196                     	;# 
   266  0199                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019C                     	;# 
   271  019D                     	;# 
   272  019E                     	;# 
   273  019F                     	;# 
   274  020C                     	;# 
   275  020E                     	;# 
   276  0211                     	;# 
   277  0211                     	;# 
   278  0212                     	;# 
   279  0212                     	;# 
   280  0213                     	;# 
   281  0213                     	;# 
   282  0214                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0216                     	;# 
   288  0216                     	;# 
   289  0217                     	;# 
   290  0217                     	;# 
   291  0291                     	;# 
   292  0291                     	;# 
   293  0292                     	;# 
   294  0293                     	;# 
   295  0294                     	;# 
   296  0295                     	;# 
   297  0295                     	;# 
   298  0296                     	;# 
   299  0298                     	;# 
   300  0298                     	;# 
   301  0299                     	;# 
   302  029A                     	;# 
   303  029B                     	;# 
   304  029C                     	;# 
   305  029D                     	;# 
   306  029E                     	;# 
   307  0311                     	;# 
   308  0311                     	;# 
   309  0312                     	;# 
   310  0313                     	;# 
   311  0318                     	;# 
   312  0318                     	;# 
   313  0319                     	;# 
   314  031A                     	;# 
   315  038C                     	;# 
   316  038E                     	;# 
   317  0391                     	;# 
   318  0392                     	;# 
   319  0393                     	;# 
   320  039A                     	;# 
   321  039C                     	;# 
   322  039D                     	;# 
   323  039E                     	;# 
   324  039F                     	;# 
   325  0415                     	;# 
   326  0416                     	;# 
   327  0417                     	;# 
   328  041C                     	;# 
   329  041D                     	;# 
   330  041E                     	;# 
   331  0FE4                     	;# 
   332  0FE5                     	;# 
   333  0FE6                     	;# 
   334  0FE7                     	;# 
   335  0FE8                     	;# 
   336  0FE9                     	;# 
   337  0FEA                     	;# 
   338  0FEB                     	;# 
   339  0FED                     	;# 
   340  0FEE                     	;# 
   341  0FEF                     	;# 
   342  0000                     	;# 
   343  0001                     	;# 
   344  0002                     	;# 
   345  0003                     	;# 
   346  0004                     	;# 
   347  0005                     	;# 
   348  0006                     	;# 
   349  0007                     	;# 
   350  0008                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000E                     	;# 
   356  0011                     	;# 
   357  0012                     	;# 
   358  0013                     	;# 
   359  0015                     	;# 
   360  0016                     	;# 
   361  0016                     	;# 
   362  0017                     	;# 
   363  0018                     	;# 
   364  0019                     	;# 
   365  001A                     	;# 
   366  001B                     	;# 
   367  001C                     	;# 
   368  001E                     	;# 
   369  001F                     	;# 
   370  008C                     	;# 
   371  008E                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  010C                     	;# 
   387  010E                     	;# 
   388  0111                     	;# 
   389  0112                     	;# 
   390  0113                     	;# 
   391  0114                     	;# 
   392  0115                     	;# 
   393  0116                     	;# 
   394  0117                     	;# 
   395  0118                     	;# 
   396  0119                     	;# 
   397  011A                     	;# 
   398  011B                     	;# 
   399  011D                     	;# 
   400  011E                     	;# 
   401  018C                     	;# 
   402  018E                     	;# 
   403  0191                     	;# 
   404  0191                     	;# 
   405  0192                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0193                     	;# 
   409  0194                     	;# 
   410  0195                     	;# 
   411  0196                     	;# 
   412  0199                     	;# 
   413  019A                     	;# 
   414  019B                     	;# 
   415  019B                     	;# 
   416  019C                     	;# 
   417  019D                     	;# 
   418  019E                     	;# 
   419  019F                     	;# 
   420  020C                     	;# 
   421  020E                     	;# 
   422  0211                     	;# 
   423  0211                     	;# 
   424  0212                     	;# 
   425  0212                     	;# 
   426  0213                     	;# 
   427  0213                     	;# 
   428  0214                     	;# 
   429  0214                     	;# 
   430  0215                     	;# 
   431  0215                     	;# 
   432  0215                     	;# 
   433  0216                     	;# 
   434  0216                     	;# 
   435  0217                     	;# 
   436  0217                     	;# 
   437  0291                     	;# 
   438  0291                     	;# 
   439  0292                     	;# 
   440  0293                     	;# 
   441  0294                     	;# 
   442  0295                     	;# 
   443  0295                     	;# 
   444  0296                     	;# 
   445  0298                     	;# 
   446  0298                     	;# 
   447  0299                     	;# 
   448  029A                     	;# 
   449  029B                     	;# 
   450  029C                     	;# 
   451  029D                     	;# 
   452  029E                     	;# 
   453  0311                     	;# 
   454  0311                     	;# 
   455  0312                     	;# 
   456  0313                     	;# 
   457  0318                     	;# 
   458  0318                     	;# 
   459  0319                     	;# 
   460  031A                     	;# 
   461  038C                     	;# 
   462  038E                     	;# 
   463  0391                     	;# 
   464  0392                     	;# 
   465  0393                     	;# 
   466  039A                     	;# 
   467  039C                     	;# 
   468  039D                     	;# 
   469  039E                     	;# 
   470  039F                     	;# 
   471  0415                     	;# 
   472  0416                     	;# 
   473  0417                     	;# 
   474  041C                     	;# 
   475  041D                     	;# 
   476  041E                     	;# 
   477  0FE4                     	;# 
   478  0FE5                     	;# 
   479  0FE6                     	;# 
   480  0FE7                     	;# 
   481  0FE8                     	;# 
   482  0FE9                     	;# 
   483  0FEA                     	;# 
   484  0FEB                     	;# 
   485  0FED                     	;# 
   486  0FEE                     	;# 
   487  0FEF                     	;# 
   488  0000                     	;# 
   489  0001                     	;# 
   490  0002                     	;# 
   491  0003                     	;# 
   492  0004                     	;# 
   493  0005                     	;# 
   494  0006                     	;# 
   495  0007                     	;# 
   496  0008                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000E                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0016                     	;# 
   508  0017                     	;# 
   509  0018                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001E                     	;# 
   515  001F                     	;# 
   516  008C                     	;# 
   517  008E                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  010C                     	;# 
   533  010E                     	;# 
   534  0111                     	;# 
   535  0112                     	;# 
   536  0113                     	;# 
   537  0114                     	;# 
   538  0115                     	;# 
   539  0116                     	;# 
   540  0117                     	;# 
   541  0118                     	;# 
   542  0119                     	;# 
   543  011A                     	;# 
   544  011B                     	;# 
   545  011D                     	;# 
   546  011E                     	;# 
   547  018C                     	;# 
   548  018E                     	;# 
   549  0191                     	;# 
   550  0191                     	;# 
   551  0192                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0193                     	;# 
   555  0194                     	;# 
   556  0195                     	;# 
   557  0196                     	;# 
   558  0199                     	;# 
   559  019A                     	;# 
   560  019B                     	;# 
   561  019B                     	;# 
   562  019C                     	;# 
   563  019D                     	;# 
   564  019E                     	;# 
   565  019F                     	;# 
   566  020C                     	;# 
   567  020E                     	;# 
   568  0211                     	;# 
   569  0211                     	;# 
   570  0212                     	;# 
   571  0212                     	;# 
   572  0213                     	;# 
   573  0213                     	;# 
   574  0214                     	;# 
   575  0214                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0215                     	;# 
   579  0216                     	;# 
   580  0216                     	;# 
   581  0217                     	;# 
   582  0217                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0294                     	;# 
   588  0295                     	;# 
   589  0295                     	;# 
   590  0296                     	;# 
   591  0298                     	;# 
   592  0298                     	;# 
   593  0299                     	;# 
   594  029A                     	;# 
   595  029B                     	;# 
   596  029C                     	;# 
   597  029D                     	;# 
   598  029E                     	;# 
   599  0311                     	;# 
   600  0311                     	;# 
   601  0312                     	;# 
   602  0313                     	;# 
   603  0318                     	;# 
   604  0318                     	;# 
   605  0319                     	;# 
   606  031A                     	;# 
   607  038C                     	;# 
   608  038E                     	;# 
   609  0391                     	;# 
   610  0392                     	;# 
   611  0393                     	;# 
   612  039A                     	;# 
   613  039C                     	;# 
   614  039D                     	;# 
   615  039E                     	;# 
   616  039F                     	;# 
   617  0415                     	;# 
   618  0416                     	;# 
   619  0417                     	;# 
   620  041C                     	;# 
   621  041D                     	;# 
   622  041E                     	;# 
   623  0FE4                     	;# 
   624  0FE5                     	;# 
   625  0FE6                     	;# 
   626  0FE7                     	;# 
   627  0FE8                     	;# 
   628  0FE9                     	;# 
   629  0FEA                     	;# 
   630  0FEB                     	;# 
   631  0FED                     	;# 
   632  0FEE                     	;# 
   633  0FEF                     	;# 
   634                           
   635                           	psect	idataBANK0
   636  05FE                     __pidataBANK0:	
   637                           
   638                           ;initializer for _HourBlink
   639  05FE  3401               	retlw	1
   640                           
   641                           	psect	idataBANK2
   642  0D16                     __pidataBANK2:	
   643                           
   644                           ;initializer for ___cgram
   645  0D16  340C               	retlw	12
   646  0D17  3412               	retlw	18
   647  0D18  3412               	retlw	18
   648  0D19  340C               	retlw	12
   649  0D1A  3400               	retlw	0
   650  0D1B  3400               	retlw	0
   651  0D1C  3400               	retlw	0
   652  0D1D  3400               	retlw	0
   653  0D1E  3400               	retlw	0
   654  0D1F  3404               	retlw	4
   655  0D20  340E               	retlw	14
   656  0D21  341F               	retlw	31
   657  0D22  340E               	retlw	14
   658  0D23  3404               	retlw	4
   659  0D24  3400               	retlw	0
   660  0D25  3400               	retlw	0
   661  0D26  3404               	retlw	4
   662  0D27  3404               	retlw	4
   663  0D28  3404               	retlw	4
   664  0D29  3404               	retlw	4
   665  0D2A  341F               	retlw	31
   666  0D2B  340E               	retlw	14
   667  0D2C  3404               	retlw	4
   668  0D2D  3400               	retlw	0
   669  0D2E  340A               	retlw	10
   670  0D2F  3415               	retlw	21
   671  0D30  3411               	retlw	17
   672  0D31  340A               	retlw	10
   673  0D32  3404               	retlw	4
   674  0D33  3400               	retlw	0
   675  0D34  3400               	retlw	0
   676  0D35  3400               	retlw	0
   677  0D36  340A               	retlw	10
   678  0D37  341F               	retlw	31
   679  0D38  341F               	retlw	31
   680  0D39  340E               	retlw	14
   681  0D3A  3404               	retlw	4
   682  0D3B  3400               	retlw	0
   683  0D3C  3400               	retlw	0
   684  0D3D  3400               	retlw	0
   685  0D3E  3400               	retlw	0
   686  0D3F  3400               	retlw	0
   687  0D40  3400               	retlw	0
   688  0D41  3400               	retlw	0
   689  0D42  3400               	retlw	0
   690  0D43  3400               	retlw	0
   691  0D44  3400               	retlw	0
   692  0D45  3400               	retlw	0
   693  0D46  3400               	retlw	0
   694  0D47  3400               	retlw	0
   695  0D48  3400               	retlw	0
   696  0D49  3400               	retlw	0
   697  0D4A  3400               	retlw	0
   698  0D4B  3400               	retlw	0
   699  0D4C  3400               	retlw	0
   700  0D4D  3400               	retlw	0
   701  0D4E  3400               	retlw	0
   702  0D4F  3400               	retlw	0
   703  0D50  3400               	retlw	0
   704  0D51  3400               	retlw	0
   705  0D52  3400               	retlw	0
   706  0D53  3400               	retlw	0
   707  0D54  3400               	retlw	0
   708  0D55  3400               	retlw	0
   709                           
   710                           	psect	strings
   711  0600                     __pstrings:	
   712  0600                     __stringtab:	
   713  0600  3400               	retlw	0
   714  0601                     __end_of__stringtab:	
   715  0601                     _RTCStart:	
   716  0601  3400               	retlw	0
   717  0602  3400               	retlw	0
   718  0603                     __end_of_RTCStart:	
   719  000B                     _INTCONbits	set	11
   720  0012                     _PIR2bits	set	18
   721  000C                     _PORTAbits	set	12
   722  000E                     _PORTC	set	14
   723  0060                     _RA0	set	96
   724  0061                     _RA1	set	97
   725  0062                     _RA2	set	98
   726  005D                     _TMR0IE	set	93
   727  005A                     _TMR0IF	set	90
   728  0095                     _OPTION_REGbits	set	149
   729  0099                     _OSCCONbits	set	153
   730  008C                     _TRISAbits	set	140
   731  008E                     _TRISC	set	142
   732  008E                     _TRISCbits	set	142
   733  018C                     _ANSELA	set	396
   734  018E                     _ANSELC	set	398
   735  0211                     _SSP1BUF	set	529
   736  0215                     _SSP1CON1	set	533
   737  0215                     _SSP1CON1bits	set	533
   738  0216                     _SSP1CON2bits	set	534
   739  0217                     _SSP1CON3bits	set	535
   740  0213                     _SSP1MSK	set	531
   741  0214                     _SSP1STATbits	set	532
   742  0212                     _SSPADD	set	530
   743  0603                     __stringdata:	
   744  0603                     STR_3:	
   745  0603  3469               	retlw	105	;'i'
   746  0604  3420               	retlw	32	;' '
   747  0605  346D               	retlw	109	;'m'
   748  0606  3461               	retlw	97	;'a'
   749  0607  346C               	retlw	108	;'l'
   750  0608  3475               	retlw	117	;'u'
   751  0609  3420               	retlw	32	;' '
   752  060A  3462               	retlw	98	;'b'
   753  060B  3465               	retlw	101	;'e'
   754  060C  3462               	retlw	98	;'b'
   755  060D  3469               	retlw	105	;'i'
   756  060E  3463               	retlw	99	;'c'
   757  060F  3475               	retlw	117	;'u'
   758  0610  3420               	retlw	32	;' '
   759  0611  343A               	retlw	58	;':'
   760  0612  3429               	retlw	41	;')'
   761  0613  3400               	retlw	0
   762  0614                     STR_16:	
   763  0614  3452               	retlw	82	;'R'
   764  0615  3465               	retlw	101	;'e'
   765  0616  3473               	retlw	115	;'s'
   766  0617  3465               	retlw	101	;'e'
   767  0618  3474               	retlw	116	;'t'
   768  0619  3420               	retlw	32	;' '
   769  061A  3432               	retlw	50	;'2'
   770  061B  3420               	retlw	32	;' '
   771  061C  3466               	retlw	102	;'f'
   772  061D  3461               	retlw	97	;'a'
   773  061E  3469               	retlw	105	;'i'
   774  061F  346C               	retlw	108	;'l'
   775  0620  3465               	retlw	101	;'e'
   776  0621  3464               	retlw	100	;'d'
   777  0622  3421               	retlw	33	;'!'
   778  0623  3400               	retlw	0
   779  0624                     STR_1:	
   780  0624  3449               	retlw	73	;'I'
   781  0625  346E               	retlw	110	;'n'
   782  0626  3469               	retlw	105	;'i'
   783  0627  3474               	retlw	116	;'t'
   784  0628  3469               	retlw	105	;'i'
   785  0629  3461               	retlw	97	;'a'
   786  062A  346C               	retlw	108	;'l'
   787  062B  3469               	retlw	105	;'i'
   788  062C  347A               	retlw	122	;'z'
   789  062D  3469               	retlw	105	;'i'
   790  062E  346E               	retlw	110	;'n'
   791  062F  3467               	retlw	103	;'g'
   792  0630  342E               	retlw	46	;'.'
   793  0631  342E               	retlw	46	;'.'
   794  0632  342E               	retlw	46	;'.'
   795  0633  3400               	retlw	0
   796  0634                     STR_2:	
   797  0634  3453               	retlw	83	;'S'
   798  0635  3461               	retlw	97	;'a'
   799  0636  346C               	retlw	108	;'l'
   800  0637  3465               	retlw	101	;'e'
   801  0638  3420               	retlw	32	;' '
   802  0639  3476               	retlw	118	;'v'
   803  063A  346F               	retlw	111	;'o'
   804  063B  346C               	retlw	108	;'l'
   805  063C  3469               	retlw	105	;'i'
   806  063D  3420               	retlw	32	;' '
   807  063E  345A               	retlw	90	;'Z'
   808  063F  3461               	retlw	97	;'a'
   809  0640  346E               	retlw	110	;'n'
   810  0641  3475               	retlw	117	;'u'
   811  0642  3400               	retlw	0
   812  0643                     STR_11:	
   813  0643  3453               	retlw	83	;'S'
   814  0644  3475               	retlw	117	;'u'
   815  0645  3462               	retlw	98	;'b'
   816  0646  3420               	retlw	32	;' '
   817  0647  3400               	retlw	0
   818  0648                     STR_12:	
   819  0648  344E               	retlw	78	;'N'
   820  0649  3465               	retlw	101	;'e'
   821  064A  3464               	retlw	100	;'d'
   822  064B  3420               	retlw	32	;' '
   823  064C  3400               	retlw	0
   824  064D                     STR_8:	
   825  064D  3453               	retlw	83	;'S'
   826  064E  3472               	retlw	114	;'r'
   827  064F  3465               	retlw	101	;'e'
   828  0650  3420               	retlw	32	;' '
   829  0651  3400               	retlw	0
   830  0652                     STR_6:	
   831  0652  3450               	retlw	80	;'P'
   832  0653  346F               	retlw	111	;'o'
   833  0654  346E               	retlw	110	;'n'
   834  0655  3420               	retlw	32	;' '
   835  0656  3400               	retlw	0
   836  0657                     STR_7:	
   837  0657  3455               	retlw	85	;'U'
   838  0658  3474               	retlw	116	;'t'
   839  0659  346F               	retlw	111	;'o'
   840  065A  3420               	retlw	32	;' '
   841  065B  3400               	retlw	0
   842  065C                     STR_9:	
   843  065C  3443               	retlw	67	;'C'
   844  065D  3465               	retlw	101	;'e'
   845  065E  3474               	retlw	116	;'t'
   846  065F  3420               	retlw	32	;' '
   847  0660  3400               	retlw	0
   848  0661                     STR_10:	
   849  0661  3450               	retlw	80	;'P'
   850  0662  3465               	retlw	101	;'e'
   851  0663  3474               	retlw	116	;'t'
   852  0664  3420               	retlw	32	;' '
   853  0665  3400               	retlw	0
   854  0666                     STR_4:	
   855  0666  343A               	retlw	58	;':'
   856  0667  3400               	retlw	0
   857  0668                     __end_of__stringdata:	
   858                           
   859                           ; #config settings
   860  0000                     
   861                           	psect	cinit
   862  0038                     start_initialization:	
   863  0038                     __initialization:	
   864                           
   865                           ; Clear objects allocated to BANK0
   866  0038  3042               	movlw	low __pbssBANK0
   867  0039  0084               	movwf	4
   868  003A  3000               	movlw	high __pbssBANK0
   869  003B  0085               	movwf	5
   870  003C  301B               	movlw	27
   871  003D  3187  27FA  3180   	fcall	clear_ram0
   872                           
   873                           ; Clear objects allocated to BANK1
   874  0040  30A0               	movlw	low __pbssBANK1
   875  0041  0084               	movwf	4
   876  0042  3000               	movlw	high __pbssBANK1
   877  0043  0085               	movwf	5
   878  0044  3015               	movlw	21
   879  0045  3187  27FA  3180   	fcall	clear_ram0
   880                           
   881                           ; Initialize objects allocated to BANK0
   882  0048  3185  25FE  3180   	fcall	__pidataBANK0	;fetch initializer
   883  004B  00DD               	movwf	__pdataBANK0& (0+127)
   884                           
   885                           ; Initialize objects allocated to BANK2
   886  004C  3016               	movlw	low __pidataBANK2
   887  004D  0084               	movwf	4
   888  004E  308D               	movlw	(high __pidataBANK2)| (0+128)
   889  004F  0085               	movwf	5
   890  0050  3020               	movlw	low __pdataBANK2
   891  0051  0086               	movwf	6
   892  0052  3001               	movlw	high __pdataBANK2
   893  0053  0087               	movwf	7
   894  0054  3040               	movlw	64
   895  0055  318C  2406         	fcall	init_ram
   896  0057                     end_of_initialization:	
   897                           ;End of C runtime variable initialization code
   898                           
   899  0057                     __end_of__initialization:	
   900  0057  0020               	movlb	0
   901  0058  3180  285A         	ljmp	_main	;jump to C main() function
   902                           
   903                           	psect	bssBANK0
   904  0042                     __pbssBANK0:	
   905  0042                     LCDWriteInt@F2719:	
   906  0042                     	ds	5
   907  0047                     _RefreshTime:	
   908  0047                     	ds	2
   909  0049                     _Timer0Count:	
   910  0049                     	ds	2
   911  004B                     _FlagDateTimeChanged:	
   912  004B                     	ds	1
   913  004C                     _I2C1_STATE:	
   914  004C                     	ds	1
   915  004D                     _dan:	
   916  004D                     	ds	1
   917  004E                     _danusedmici:	
   918  004E                     	ds	1
   919  004F                     _godina:	
   920  004F                     	ds	1
   921  0050                     _mesec:	
   922  0050                     	ds	1
   923  0051                     _minute:	
   924  0051                     	ds	1
   925  0052                     _sati:	
   926  0052                     	ds	1
   927  0053                     _sekunde:	
   928  0053                     	ds	1
   929  0054                     _DateArray:	
   930  0054                     	ds	5
   931  0059                     _TimeArray:	
   932  0059                     	ds	4
   933                           
   934                           	psect	dataBANK0
   935  005D                     __pdataBANK0:	
   936  005D                     _HourBlink:	
   937  005D                     	ds	1
   938                           
   939                           	psect	bssBANK1
   940  00A0                     __pbssBANK1:	
   941  00A0                     DS1307_SetDate@F2867:	
   942  00A0                     	ds	5
   943  00A5                     DS1307_ReadDate@F2872:	
   944  00A5                     	ds	4
   945  00A9                     DS1307_ReadTime@F2859:	
   946  00A9                     	ds	4
   947  00AD                     DS1307_SetTime@F2848:	
   948  00AD                     	ds	4
   949  00B1                     _I2CTime:	
   950  00B1                     	ds	4
   951                           
   952                           	psect	dataBANK2
   953  0120                     __pdataBANK2:	
   954  0120                     ___cgram:	
   955  0120                     	ds	64
   956                           
   957                           	psect	clrtext
   958  07FA                     clear_ram0:	
   959                           ;	Called with FSR0 containing the base address, and
   960                           ;	WREG with the size to clear
   961                           
   962  07FA  0064               	clrwdt	;clear the watchdog before getting into this loop
   963  07FB                     clrloop0:	
   964  07FB  0180               	clrf	0	;clear RAM location pointed to by FSR
   965  07FC  3101               	addfsr 0,1
   966  07FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   967  07FE  2FFB               	goto	clrloop0	;have we reached the end yet?
   968  07FF  3400               	retlw	0	;all done for this memory range, return
   969                           
   970                           	psect	inittext
   971  0C06                     init_ram:	
   972  0C06  00FE               	movwf	126
   973  0C07                     initloop:	
   974  0C07  0012               	moviw fsr0++
   975  0C08  001E               	movwi fsr1++
   976  0C09  0BFE               	decfsz	126,f
   977  0C0A  2C07               	goto	initloop
   978  0C0B  3400               	retlw	0
   979                           
   980                           	psect	cstackBANK1
   981  00B5                     __pcstackBANK1:	
   982  00B5                     ??_DS1307_SetTime:	
   983  00B5                     DS1307_ReadTime@result:	
   984                           ; 0 bytes @ 0x0
   985                           
   986  00B5                     DS1307_ReadDate@result:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  00B5                     LCDWriteInt@str:	
   990                           ; 1 bytes @ 0x0
   991                           
   992                           
   993                           ; 5 bytes @ 0x0
   994  00B5                     	ds	1
   995  00B6                     DS1307_ReadTime@TempI2CRead:	
   996  00B6                     DS1307_ReadDate@TempI2CRead:	
   997                           ; 4 bytes @ 0x1
   998                           
   999                           
  1000                           ; 4 bytes @ 0x1
  1001  00B6                     	ds	3
  1002  00B9                     DS1307_SetTime@result:	
  1003                           
  1004                           ; 1 bytes @ 0x4
  1005  00B9                     	ds	1
  1006  00BA                     DS1307_ReadTime@SaveTimeTo:	
  1007  00BA                     DS1307_ReadDate@SaveDateTo:	
  1008                           ; 1 bytes @ 0x5
  1009                           
  1010  00BA                     LCDWriteInt@j:	
  1011                           ; 1 bytes @ 0x5
  1012                           
  1013  00BA                     DS1307_SetTime@Temp:	
  1014                           ; 2 bytes @ 0x5
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x5
  1018  00BA                     	ds	1
  1019  00BB                     DS1307_ReadTime@Temp:	
  1020  00BB                     DS1307_ReadDate@Temp:	
  1021                           ; 1 bytes @ 0x6
  1022                           
  1023                           
  1024                           ; 1 bytes @ 0x6
  1025  00BB                     	ds	1
  1026  00BC                     LCDWriteInt@i:	
  1027                           
  1028                           ; 2 bytes @ 0x7
  1029  00BC                     	ds	2
  1030  00BE                     ??_ShowTime:	
  1031  00BE                     ??_ShowDate:	
  1032                           ; 0 bytes @ 0x9
  1033                           
  1034                           
  1035                           ; 0 bytes @ 0x9
  1036  00BE                     	ds	3
  1037  00C1                     ??_main:	
  1038                           
  1039                           ; 0 bytes @ 0xC
  1040  00C1                     	ds	4
  1041                           
  1042                           	psect	cstackCOMMON
  1043  0070                     __pcstackCOMMON:	
  1044  0070                     ?_SetUpDevice:	
  1045  0070                     ?_LCDInit:	
  1046                           ; 0 bytes @ 0x0
  1047                           
  1048  0070                     ?_LCDWriteString:	
  1049                           ; 0 bytes @ 0x0
  1050                           
  1051  0070                     ?_i2c_init:	
  1052                           ; 0 bytes @ 0x0
  1053                           
  1054  0070                     ?_DS1307_ReadTime:	
  1055                           ; 0 bytes @ 0x0
  1056                           
  1057  0070                     ?_DS1307_ReadDate:	
  1058                           ; 0 bytes @ 0x0
  1059                           
  1060  0070                     ?_LCDBusyLoop:	
  1061                           ; 0 bytes @ 0x0
  1062                           
  1063  0070                     ?_main:	
  1064                           ; 0 bytes @ 0x0
  1065                           
  1066  0070                     ?_Debug:	
  1067                           ; 0 bytes @ 0x0
  1068                           
  1069  0070                     ?_ISRRoutine:	
  1070                           ; 0 bytes @ 0x0
  1071                           
  1072  0070                     ?i1_LCDBusyLoop:	
  1073                           ; 0 bytes @ 0x0
  1074                           
  1075  0070                     ??i1_LCDBusyLoop:	
  1076                           ; 0 bytes @ 0x0
  1077                           
  1078  0070                     ?i1_LCDWriteString:	
  1079                           ; 0 bytes @ 0x0
  1080                           
  1081  0070                     ?i1___awdiv:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?i1___awmod:	
  1085                           ; 2 bytes @ 0x0
  1086                           
  1087  0070                     i1___awdiv@divisor:	
  1088                           ; 2 bytes @ 0x0
  1089                           
  1090  0070                     i1___awmod@divisor:	
  1091                           ; 2 bytes @ 0x0
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x0
  1095  0070                     	ds	2
  1096  0072                     ?i1_LCDByte:	
  1097  0072                     i1LCDByte@isdata:	
  1098                           ; 0 bytes @ 0x2
  1099                           
  1100  0072                     i1___awdiv@dividend:	
  1101                           ; 1 bytes @ 0x2
  1102                           
  1103  0072                     i1___awmod@dividend:	
  1104                           ; 2 bytes @ 0x2
  1105                           
  1106                           
  1107                           ; 2 bytes @ 0x2
  1108  0072                     	ds	1
  1109  0073                     ??i1_LCDByte:	
  1110                           
  1111                           ; 0 bytes @ 0x3
  1112  0073                     	ds	1
  1113  0074                     ??i1___awdiv:	
  1114  0074                     ??i1___awmod:	
  1115                           ; 0 bytes @ 0x4
  1116                           
  1117                           
  1118                           ; 0 bytes @ 0x4
  1119  0074                     	ds	1
  1120  0075                     i1LCDByte@hn:	
  1121  0075                     i1___awdiv@counter:	
  1122                           ; 1 bytes @ 0x5
  1123                           
  1124  0075                     i1___awmod@counter:	
  1125                           ; 1 bytes @ 0x5
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0x5
  1129  0075                     	ds	1
  1130  0076                     i1LCDByte@ln:	
  1131  0076                     i1___awdiv@sign:	
  1132                           ; 1 bytes @ 0x6
  1133                           
  1134  0076                     i1___awmod@sign:	
  1135                           ; 1 bytes @ 0x6
  1136                           
  1137                           
  1138                           ; 1 bytes @ 0x6
  1139  0076                     	ds	1
  1140  0077                     i1LCDByte@c:	
  1141  0077                     i1___awdiv@quotient:	
  1142                           ; 1 bytes @ 0x7
  1143                           
  1144                           
  1145                           ; 2 bytes @ 0x7
  1146  0077                     	ds	1
  1147  0078                     i1LCDByte@temp:	
  1148                           
  1149                           ; 1 bytes @ 0x8
  1150  0078                     	ds	1
  1151  0079                     ??i1_LCDWriteString:	
  1152  0079                     ?i1_LCDWriteInt:	
  1153                           ; 0 bytes @ 0x9
  1154                           
  1155  0079                     ?i1_LCDGotoXY:	
  1156                           ; 0 bytes @ 0x9
  1157                           
  1158  0079                     i1LCDGotoXY@y:	
  1159                           ; 0 bytes @ 0x9
  1160                           
  1161  0079                     i1LCDWriteInt@val:	
  1162                           ; 1 bytes @ 0x9
  1163                           
  1164                           
  1165                           ; 2 bytes @ 0x9
  1166  0079                     	ds	1
  1167  007A                     ??i1_LCDGotoXY:	
  1168  007A                     i1LCDWriteString@cc:	
  1169                           ; 0 bytes @ 0xA
  1170                           
  1171                           
  1172                           ; 1 bytes @ 0xA
  1173  007A                     	ds	1
  1174  007B                     i1LCDWriteString@msg:	
  1175  007B                     i1LCDWriteInt@field_length:	
  1176                           ; 1 bytes @ 0xB
  1177                           
  1178  007B                     i1LCDGotoXY@x:	
  1179                           ; 1 bytes @ 0xB
  1180                           
  1181                           
  1182                           ; 1 bytes @ 0xB
  1183  007B                     	ds	1
  1184  007C                     ??i1_LCDWriteInt:	
  1185                           
  1186                           ; 0 bytes @ 0xC
  1187  007C                     	ds	2
  1188                           
  1189                           	psect	cstackBANK0
  1190  0020                     __pcstackBANK0:	
  1191  0020                     i1LCDWriteInt@str:	
  1192                           
  1193                           ; 5 bytes @ 0x0
  1194  0020                     	ds	5
  1195  0025                     i1LCDWriteInt@j:	
  1196                           
  1197                           ; 2 bytes @ 0x5
  1198  0025                     	ds	2
  1199  0027                     i1LCDWriteInt@i:	
  1200                           
  1201                           ; 2 bytes @ 0x7
  1202  0027                     	ds	2
  1203  0029                     ?i1_ShowTime:	
  1204  0029                     i1ShowTime@y:	
  1205                           ; 0 bytes @ 0x9
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x9
  1209  0029                     	ds	1
  1210  002A                     i1ShowTime@clear:	
  1211                           
  1212                           ; 1 bytes @ 0xA
  1213  002A                     	ds	1
  1214  002B                     ??i1_ShowTime:	
  1215                           
  1216                           ; 0 bytes @ 0xB
  1217  002B                     	ds	3
  1218  002E                     i1ShowTime@x:	
  1219                           
  1220                           ; 1 bytes @ 0xE
  1221  002E                     	ds	1
  1222  002F                     ??_ISRRoutine:	
  1223                           
  1224                           ; 0 bytes @ 0xF
  1225  002F                     	ds	2
  1226  0031                     ??_SetUpDevice:	
  1227  0031                     ??_i2c_init:	
  1228                           ; 0 bytes @ 0x11
  1229                           
  1230  0031                     ??_LCDBusyLoop:	
  1231                           ; 0 bytes @ 0x11
  1232                           
  1233  0031                     ?_I2C1_ReadFrame:	
  1234                           ; 0 bytes @ 0x11
  1235                           
  1236  0031                     ?_I2C1_WriteFrame:	
  1237                           ; 1 bytes @ 0x11
  1238                           
  1239  0031                     ?_I2C1_WriteByte:	
  1240                           ; 1 bytes @ 0x11
  1241                           
  1242  0031                     ?___bmul:	
  1243                           ; 1 bytes @ 0x11
  1244                           
  1245  0031                     ?___awdiv:	
  1246                           ; 1 bytes @ 0x11
  1247                           
  1248  0031                     ?___awmod:	
  1249                           ; 2 bytes @ 0x11
  1250                           
  1251  0031                     ?___lwdiv:	
  1252                           ; 2 bytes @ 0x11
  1253                           
  1254  0031                     ?___lwmod:	
  1255                           ; 2 bytes @ 0x11
  1256                           
  1257  0031                     I2C1_ReadFrame@i2c1ReadPointer:	
  1258                           ; 2 bytes @ 0x11
  1259                           
  1260  0031                     I2C1_WriteFrame@i2c1WritePointer:	
  1261                           ; 1 bytes @ 0x11
  1262                           
  1263  0031                     I2C1_WriteByte@i2c1Data:	
  1264                           ; 1 bytes @ 0x11
  1265                           
  1266  0031                     ___bmul@multiplicand:	
  1267                           ; 1 bytes @ 0x11
  1268                           
  1269  0031                     ___awdiv@divisor:	
  1270                           ; 1 bytes @ 0x11
  1271                           
  1272  0031                     ___awmod@divisor:	
  1273                           ; 2 bytes @ 0x11
  1274                           
  1275  0031                     ___lwdiv@divisor:	
  1276                           ; 2 bytes @ 0x11
  1277                           
  1278  0031                     ___lwmod@divisor:	
  1279                           ; 2 bytes @ 0x11
  1280                           
  1281                           
  1282                           ; 2 bytes @ 0x11
  1283  0031                     	ds	1
  1284  0032                     ??_I2C1_WriteByte:	
  1285  0032                     ??___bmul:	
  1286                           ; 0 bytes @ 0x12
  1287                           
  1288  0032                     I2C1_ReadFrame@i2c1FrameLength:	
  1289                           ; 0 bytes @ 0x12
  1290                           
  1291  0032                     I2C1_WriteFrame@i2c1FrameLength:	
  1292                           ; 1 bytes @ 0x12
  1293                           
  1294  0032                     I2C1_WriteByte@i2c1SlaveAddress:	
  1295                           ; 1 bytes @ 0x12
  1296                           
  1297                           
  1298                           ; 1 bytes @ 0x12
  1299  0032                     	ds	1
  1300  0033                     ?_LCDByte:	
  1301  0033                     ??_I2C1_ReadFrame:	
  1302                           ; 0 bytes @ 0x13
  1303                           
  1304  0033                     ??_I2C1_WriteFrame:	
  1305                           ; 0 bytes @ 0x13
  1306                           
  1307  0033                     LCDByte@isdata:	
  1308                           ; 0 bytes @ 0x13
  1309                           
  1310  0033                     ___bmul@product:	
  1311                           ; 1 bytes @ 0x13
  1312                           
  1313  0033                     ___awdiv@dividend:	
  1314                           ; 1 bytes @ 0x13
  1315                           
  1316  0033                     ___awmod@dividend:	
  1317                           ; 2 bytes @ 0x13
  1318                           
  1319  0033                     ___lwdiv@dividend:	
  1320                           ; 2 bytes @ 0x13
  1321                           
  1322  0033                     ___lwmod@dividend:	
  1323                           ; 2 bytes @ 0x13
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0x13
  1327  0033                     	ds	1
  1328  0034                     ??_LCDByte:	
  1329  0034                     I2C1_ReadFrame@i2c1SlaveAddress:	
  1330                           ; 0 bytes @ 0x14
  1331                           
  1332  0034                     I2C1_WriteFrame@i2c1SlaveAddress:	
  1333                           ; 1 bytes @ 0x14
  1334                           
  1335  0034                     ___bmul@multiplier:	
  1336                           ; 1 bytes @ 0x14
  1337                           
  1338                           
  1339                           ; 1 bytes @ 0x14
  1340  0034                     	ds	1
  1341  0035                     ??___awdiv:	
  1342  0035                     ??___awmod:	
  1343                           ; 0 bytes @ 0x15
  1344                           
  1345  0035                     ??___lwdiv:	
  1346                           ; 0 bytes @ 0x15
  1347                           
  1348  0035                     ??___lwmod:	
  1349                           ; 0 bytes @ 0x15
  1350                           
  1351                           
  1352                           ; 0 bytes @ 0x15
  1353  0035                     	ds	1
  1354  0036                     LCDByte@hn:	
  1355  0036                     ___awdiv@counter:	
  1356                           ; 1 bytes @ 0x16
  1357                           
  1358  0036                     ___awmod@counter:	
  1359                           ; 1 bytes @ 0x16
  1360                           
  1361  0036                     ___lwdiv@counter:	
  1362                           ; 1 bytes @ 0x16
  1363                           
  1364  0036                     ___lwmod@counter:	
  1365                           ; 1 bytes @ 0x16
  1366                           
  1367                           
  1368                           ; 1 bytes @ 0x16
  1369  0036                     	ds	1
  1370  0037                     LCDByte@ln:	
  1371  0037                     ___awdiv@sign:	
  1372                           ; 1 bytes @ 0x17
  1373                           
  1374  0037                     ___awmod@sign:	
  1375                           ; 1 bytes @ 0x17
  1376                           
  1377  0037                     ___lwdiv@quotient:	
  1378                           ; 1 bytes @ 0x17
  1379                           
  1380                           
  1381                           ; 2 bytes @ 0x17
  1382  0037                     	ds	1
  1383  0038                     LCDByte@c:	
  1384  0038                     ___awdiv@quotient:	
  1385                           ; 1 bytes @ 0x18
  1386                           
  1387                           
  1388                           ; 2 bytes @ 0x18
  1389  0038                     	ds	1
  1390  0039                     ?_DS1307_SetTime:	
  1391  0039                     LCDByte@temp:	
  1392                           ; 0 bytes @ 0x19
  1393                           
  1394  0039                     DS1307_SetTime@Hours:	
  1395                           ; 1 bytes @ 0x19
  1396                           
  1397                           
  1398                           ; 2 bytes @ 0x19
  1399  0039                     	ds	1
  1400  003A                     ??_LCDInit:	
  1401  003A                     ??_LCDWriteString:	
  1402                           ; 0 bytes @ 0x1A
  1403                           
  1404  003A                     ?_LCDGotoXY:	
  1405                           ; 0 bytes @ 0x1A
  1406                           
  1407  003A                     ?_LCDWriteInt:	
  1408                           ; 0 bytes @ 0x1A
  1409                           
  1410  003A                     LCDGotoXY@y:	
  1411                           ; 0 bytes @ 0x1A
  1412                           
  1413  003A                     LCDWriteInt@val:	
  1414                           ; 1 bytes @ 0x1A
  1415                           
  1416                           
  1417                           ; 2 bytes @ 0x1A
  1418  003A                     	ds	1
  1419  003B                     ??_LCDGotoXY:	
  1420  003B                     LCDWriteString@cc:	
  1421                           ; 0 bytes @ 0x1B
  1422                           
  1423  003B                     DS1307_SetTime@Mins:	
  1424                           ; 1 bytes @ 0x1B
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x1B
  1428  003B                     	ds	1
  1429  003C                     LCDWriteString@msg:	
  1430  003C                     LCDWriteInt@field_length:	
  1431                           ; 1 bytes @ 0x1C
  1432                           
  1433  003C                     LCDGotoXY@x:	
  1434                           ; 1 bytes @ 0x1C
  1435                           
  1436                           
  1437                           ; 1 bytes @ 0x1C
  1438  003C                     	ds	1
  1439  003D                     ??_LCDWriteInt:	
  1440  003D                     ??_Debug:	
  1441                           ; 0 bytes @ 0x1D
  1442                           
  1443  003D                     Debug@data:	
  1444                           ; 0 bytes @ 0x1D
  1445                           
  1446  003D                     LCDInit@style:	
  1447                           ; 1 bytes @ 0x1D
  1448                           
  1449  003D                     DS1307_SetTime@Secs:	
  1450                           ; 1 bytes @ 0x1D
  1451                           
  1452                           
  1453                           ; 2 bytes @ 0x1D
  1454  003D                     	ds	1
  1455  003E                     ??_DS1307_ReadTime:	
  1456  003E                     ??_DS1307_ReadDate:	
  1457                           ; 0 bytes @ 0x1E
  1458                           
  1459  003E                     LCDInit@__i:	
  1460                           ; 0 bytes @ 0x1E
  1461                           
  1462                           
  1463                           ; 1 bytes @ 0x1E
  1464  003E                     	ds	1
  1465  003F                     ?_ShowTime:	
  1466  003F                     ?_ShowDate:	
  1467                           ; 0 bytes @ 0x1F
  1468                           
  1469  003F                     ShowTime@y:	
  1470                           ; 0 bytes @ 0x1F
  1471                           
  1472  003F                     ShowDate@y:	
  1473                           ; 1 bytes @ 0x1F
  1474                           
  1475  003F                     DS1307_SetTime@Mode:	
  1476                           ; 1 bytes @ 0x1F
  1477                           
  1478                           
  1479                           ; 2 bytes @ 0x1F
  1480  003F                     	ds	1
  1481  0040                     ShowTime@clear:	
  1482  0040                     ShowDate@clear:	
  1483                           ; 1 bytes @ 0x20
  1484                           
  1485                           
  1486                           ; 1 bytes @ 0x20
  1487  0040                     	ds	1
  1488  0041                     ShowTime@x:	
  1489  0041                     ShowDate@x:	
  1490                           ; 1 bytes @ 0x21
  1491                           
  1492                           
  1493                           ; 1 bytes @ 0x21
  1494  0041                     	ds	1
  1495                           
  1496                           	psect	maintext
  1497  005A                     __pmaintext:	
  1498 ;;
  1499 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1500 ;;
  1501 ;; *************** function _main *****************
  1502 ;; Defined at:
  1503 ;;		line 53 in file "main.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 17F/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1519 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;Total ram usage:        4 bytes
  1522 ;; Hardware stack levels required when called:   10
  1523 ;; This function calls:
  1524 ;;		_DS1307_ReadDate
  1525 ;;		_DS1307_ReadTime
  1526 ;;		_DS1307_SetTime
  1527 ;;		_LCDByte
  1528 ;;		_LCDGotoXY
  1529 ;;		_LCDInit
  1530 ;;		_LCDWriteString
  1531 ;;		_SetUpDevice
  1532 ;;		_ShowDate
  1533 ;;		_ShowTime
  1534 ;;		_i2c_init
  1535 ;; This function is called by:
  1536 ;;		Startup code after reset
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _main
  1542  005A                     _main:	
  1543                           
  1544                           ;main.c: 54: SetUpDevice();
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in _main: [allreg]
  1548  005A  3185  25DD  3180   	fcall	_SetUpDevice
  1549                           
  1550                           ;main.c: 57: LCDInit(0B00000000);
  1551  005D  3000               	movlw	0
  1552  005E  3187  2727  3180   	fcall	_LCDInit
  1553                           
  1554                           ;main.c: 60: (LCDByte(0b00000001,0));
  1555  0061  0020               	movlb	0	; select bank0
  1556  0062  01B3               	clrf	LCDByte@isdata
  1557  0063  3001               	movlw	1
  1558  0064  318F  2709  3180   	fcall	_LCDByte
  1559                           
  1560                           ;main.c: 63: LCDWriteString("Initializing...");
  1561  0067  3024               	movlw	(STR_1| (0+32768))& (0+255)
  1562  0068  318D  2599  3180   	fcall	_LCDWriteString
  1563                           
  1564                           ;main.c: 64: _delay((unsigned long)((1000)*(32000000ULL/4000.0)));
  1565  006B  3029               	movlw	41
  1566  006C  0021               	movlb	1	; select bank1
  1567  006D  00C3               	movwf	(??_main^(0+128)+2)
  1568  006E  3096               	movlw	150
  1569  006F  00C2               	movwf	(??_main^(0+128)+1)
  1570  0070  30A6               	movlw	166
  1571  0071  00C1               	movwf	??_main^(0+128)
  1572  0072                     u5627:	
  1573  0072  0BC1               	decfsz	??_main^(0+128),f
  1574  0073  2872               	goto	u5627
  1575  0074  0BC2               	decfsz	(??_main^(0+128)+1),f
  1576  0075  2872               	goto	u5627
  1577  0076  0BC3               	decfsz	(??_main^(0+128)+2),f
  1578  0077  2872               	goto	u5627
  1579                           
  1580                           ;main.c: 66: (LCDByte(0b00000001,0));
  1581  0078  0020               	movlb	0	; select bank0
  1582  0079  01B3               	clrf	LCDByte@isdata
  1583  007A  3001               	movlw	1
  1584  007B  318F  2709  3180   	fcall	_LCDByte
  1585                           
  1586                           ;main.c: 67: LCDWriteString("Sale voli Zanu");
  1587  007E  3034               	movlw	(STR_2| (0+32768))& (0+255)
  1588  007F  318D  2599  3180   	fcall	_LCDWriteString
  1589                           
  1590                           ;main.c: 68: LCDGotoXY(0,1);
  1591  0082  0020               	movlb	0	; select bank0
  1592  0083  01BA               	clrf	LCDGotoXY@y
  1593  0084  0ABA               	incf	LCDGotoXY@y,f
  1594  0085  3000               	movlw	0
  1595  0086  3187  27D6  3180   	fcall	_LCDGotoXY
  1596                           
  1597                           ;main.c: 69: LCDWriteString("i malu bebicu :)");
  1598  0089  3003               	movlw	(STR_3| (0+32768))& (0+255)
  1599  008A  318D  2599  3180   	fcall	_LCDWriteString
  1600                           
  1601                           ;main.c: 74: i2c_init();
  1602  008D  318C  243A  3180   	fcall	_i2c_init
  1603                           
  1604                           ;main.c: 75: _delay((unsigned long)((3000)*(32000000ULL/4000.0)));
  1605  0090  307A               	movlw	122
  1606  0091  0021               	movlb	1	; select bank1
  1607  0092  00C3               	movwf	(??_main^(0+128)+2)
  1608  0093  30C1               	movlw	193
  1609  0094  00C2               	movwf	(??_main^(0+128)+1)
  1610  0095  30F9               	movlw	249
  1611  0096  00C1               	movwf	??_main^(0+128)
  1612  0097                     u5637:	
  1613  0097  0BC1               	decfsz	??_main^(0+128),f
  1614  0098  2897               	goto	u5637
  1615  0099  0BC2               	decfsz	(??_main^(0+128)+1),f
  1616  009A  2897               	goto	u5637
  1617  009B  0BC3               	decfsz	(??_main^(0+128)+2),f
  1618  009C  2897               	goto	u5637
  1619  009D  289E               	nop2
  1620                           
  1621                           ;main.c: 83: DS1307_ReadTime(&TimeArray);
  1622  009E  3059               	movlw	_TimeArray& (0+255)
  1623  009F  3181  2183  3180   	fcall	_DS1307_ReadTime
  1624                           
  1625                           ;main.c: 84: DS1307_ReadDate(&DateArray);
  1626  00A2  3054               	movlw	_DateArray& (0+255)
  1627  00A3  3183  23E8  3180   	fcall	_DS1307_ReadDate
  1628                           
  1629                           ;main.c: 86: ShowTime(5, 0, 1);
  1630  00A6  0020               	movlb	0	; select bank0
  1631  00A7  01BF               	clrf	ShowTime@y
  1632  00A8  01C0               	clrf	ShowTime@clear
  1633  00A9  0AC0               	incf	ShowTime@clear,f
  1634  00AA  3005               	movlw	5
  1635  00AB  3186  2668  3180   	fcall	_ShowTime
  1636                           
  1637                           ;main.c: 87: ShowDate(1, 1, 0);
  1638  00AE  0020               	movlb	0	; select bank0
  1639  00AF  01BF               	clrf	ShowDate@y
  1640  00B0  0ABF               	incf	ShowDate@y,f
  1641  00B1  01C0               	clrf	ShowDate@clear
  1642  00B2  3001               	movlw	1
  1643  00B3  3183  2333  3180   	fcall	_ShowDate
  1644                           
  1645                           ;main.c: 91: INTCONbits.GIE = 1;
  1646  00B6  178B               	bsf	11,7	;volatile
  1647                           
  1648                           ;main.c: 92: INTCONbits.T0IE = 1;
  1649  00B7  168B               	bsf	11,5	;volatile
  1650                           
  1651                           ;main.c: 93: INTCONbits.PEIE = 1;
  1652  00B8  170B               	bsf	11,6	;volatile
  1653  00B9                     l3818:	
  1654                           ;main.c: 98: while(1) {
  1655                           
  1656                           
  1657                           ;main.c: 100: if(PORTAbits.RA4 == 0) {
  1658  00B9  0020               	movlb	0	; select bank0
  1659  00BA  1A0C               	btfsc	12,4	;volatile
  1660  00BB  2908               	goto	l3834
  1661                           
  1662                           ;main.c: 101: sati = TimeArray[2];
  1663  00BC  085B               	movf	_TimeArray+2,w	;volatile
  1664  00BD  0021               	movlb	1	; select bank1
  1665  00BE  00C1               	movwf	??_main^(0+128)
  1666  00BF  0841               	movf	??_main^(0+128),w
  1667  00C0  0020               	movlb	0	; select bank0
  1668  00C1  00D2               	movwf	_sati	;volatile
  1669                           
  1670                           ;main.c: 103: if(sati < 23) { sati++; }
  1671  00C2  3017               	movlw	23
  1672  00C3  0252               	subwf	_sati,w	;volatile
  1673  00C4  1803               	skipnc
  1674  00C5  28CD               	goto	l3824
  1675  00C6  3001               	movlw	1
  1676  00C7  0021               	movlb	1	; select bank1
  1677  00C8  00C1               	movwf	??_main^(0+128)
  1678  00C9  0841               	movf	??_main^(0+128),w
  1679  00CA  0020               	movlb	0	; select bank0
  1680  00CB  07D2               	addwf	_sati,f	;volatile
  1681  00CC  28CE               	goto	l3826
  1682  00CD                     l3824:	
  1683                           
  1684                           ;main.c: 104: else { sati = 0; }
  1685  00CD  01D2               	clrf	_sati	;volatile
  1686  00CE                     l3826:	
  1687                           
  1688                           ;main.c: 106: DS1307_SetTime(sati, minute, 0, 2);
  1689  00CE  0852               	movf	_sati,w	;volatile
  1690  00CF  0021               	movlb	1	; select bank1
  1691  00D0  00C1               	movwf	??_main^(0+128)
  1692  00D1  01C2               	clrf	(??_main^(0+128)+1)
  1693  00D2  0841               	movf	??_main^(0+128),w
  1694  00D3  0020               	movlb	0	; select bank0
  1695  00D4  00B9               	movwf	DS1307_SetTime@Hours
  1696  00D5  0021               	movlb	1	; select bank1
  1697  00D6  0842               	movf	(??_main+1)^(0+128),w
  1698  00D7  0020               	movlb	0	; select bank0
  1699  00D8  00BA               	movwf	DS1307_SetTime@Hours+1
  1700  00D9  0851               	movf	_minute,w	;volatile
  1701  00DA  0021               	movlb	1	; select bank1
  1702  00DB  00C3               	movwf	(??_main+2)^(0+128)
  1703  00DC  01C4               	clrf	((??_main+2)^(0+128)+1)
  1704  00DD  0843               	movf	(??_main+2)^(0+128),w
  1705  00DE  0020               	movlb	0	; select bank0
  1706  00DF  00BB               	movwf	DS1307_SetTime@Mins
  1707  00E0  0021               	movlb	1	; select bank1
  1708  00E1  0844               	movf	(??_main+3)^(0+128),w
  1709  00E2  0020               	movlb	0	; select bank0
  1710  00E3  00BC               	movwf	DS1307_SetTime@Mins+1
  1711  00E4  3000               	movlw	0
  1712  00E5  00BD               	movwf	DS1307_SetTime@Secs
  1713  00E6  3000               	movlw	0
  1714  00E7  00BE               	movwf	DS1307_SetTime@Secs+1
  1715  00E8  3002               	movlw	2
  1716  00E9  00BF               	movwf	DS1307_SetTime@Mode
  1717  00EA  3000               	movlw	0
  1718  00EB  00C0               	movwf	DS1307_SetTime@Mode+1
  1719  00EC  3182  2266  3180   	fcall	_DS1307_SetTime
  1720                           
  1721                           ;main.c: 107: DS1307_ReadTime(&TimeArray);
  1722  00EF  3059               	movlw	_TimeArray& (0+255)
  1723  00F0  3181  2183  3180   	fcall	_DS1307_ReadTime
  1724                           
  1725                           ;main.c: 108: ShowTime(5, 0, 0);
  1726  00F3  0020               	movlb	0	; select bank0
  1727  00F4  01BF               	clrf	ShowTime@y
  1728  00F5  01C0               	clrf	ShowTime@clear
  1729  00F6  3005               	movlw	5
  1730  00F7  3186  2668  3180   	fcall	_ShowTime
  1731                           
  1732                           ;main.c: 110: _delay((unsigned long)((500)*(32000000ULL/4000.0)));
  1733  00FA  3015               	movlw	21
  1734  00FB  0021               	movlb	1	; select bank1
  1735  00FC  00C3               	movwf	(??_main^(0+128)+2)
  1736  00FD  304B               	movlw	75
  1737  00FE  00C2               	movwf	(??_main^(0+128)+1)
  1738  00FF  30D1               	movlw	209
  1739  0100  00C1               	movwf	??_main^(0+128)
  1740  0101                     u5647:	
  1741  0101  0BC1               	decfsz	??_main^(0+128),f
  1742  0102  2901               	goto	u5647
  1743  0103  0BC2               	decfsz	(??_main^(0+128)+1),f
  1744  0104  2901               	goto	u5647
  1745  0105  0BC3               	decfsz	(??_main^(0+128)+2),f
  1746  0106  2901               	goto	u5647
  1747  0107  0000               	nop
  1748  0108                     l3834:	
  1749                           
  1750                           ;main.c: 111: }
  1751                           ;main.c: 113: if(PORTAbits.RA5 == 0) {
  1752  0108  0020               	movlb	0	; select bank0
  1753  0109  1A8C               	btfsc	12,5	;volatile
  1754  010A  2963               	goto	l3856
  1755                           
  1756                           ;main.c: 114: minute = TimeArray[1];
  1757  010B  085A               	movf	_TimeArray+1,w	;volatile
  1758  010C  0021               	movlb	1	; select bank1
  1759  010D  00C1               	movwf	??_main^(0+128)
  1760  010E  0841               	movf	??_main^(0+128),w
  1761  010F  0020               	movlb	0	; select bank0
  1762  0110  00D1               	movwf	_minute	;volatile
  1763                           
  1764                           ;main.c: 116: if(minute < 59) { minute++; }
  1765  0111  303B               	movlw	59
  1766  0112  0251               	subwf	_minute,w	;volatile
  1767  0113  1803               	skipnc
  1768  0114  291C               	goto	l3840
  1769  0115  3001               	movlw	1
  1770  0116  0021               	movlb	1	; select bank1
  1771  0117  00C1               	movwf	??_main^(0+128)
  1772  0118  0841               	movf	??_main^(0+128),w
  1773  0119  0020               	movlb	0	; select bank0
  1774  011A  07D1               	addwf	_minute,f	;volatile
  1775  011B  2929               	goto	l3848
  1776  011C                     l3840:	
  1777                           
  1778                           ;main.c: 117: else {
  1779                           ;main.c: 118: minute = 0;
  1780  011C  01D1               	clrf	_minute	;volatile
  1781                           
  1782                           ;main.c: 119: if(sati < 23) { sati++; }
  1783  011D  3017               	movlw	23
  1784  011E  0252               	subwf	_sati,w	;volatile
  1785  011F  1803               	skipnc
  1786  0120  2928               	goto	l3846
  1787  0121  3001               	movlw	1
  1788  0122  0021               	movlb	1	; select bank1
  1789  0123  00C1               	movwf	??_main^(0+128)
  1790  0124  0841               	movf	??_main^(0+128),w
  1791  0125  0020               	movlb	0	; select bank0
  1792  0126  07D2               	addwf	_sati,f	;volatile
  1793  0127  2929               	goto	l3848
  1794  0128                     l3846:	
  1795                           
  1796                           ;main.c: 120: else { sati = 0; }
  1797  0128  01D2               	clrf	_sati	;volatile
  1798  0129                     l3848:	
  1799                           
  1800                           ;main.c: 121: }
  1801                           ;main.c: 123: DS1307_SetTime(sati, minute, 0, 2);
  1802  0129  0852               	movf	_sati,w	;volatile
  1803  012A  0021               	movlb	1	; select bank1
  1804  012B  00C1               	movwf	??_main^(0+128)
  1805  012C  01C2               	clrf	(??_main^(0+128)+1)
  1806  012D  0841               	movf	??_main^(0+128),w
  1807  012E  0020               	movlb	0	; select bank0
  1808  012F  00B9               	movwf	DS1307_SetTime@Hours
  1809  0130  0021               	movlb	1	; select bank1
  1810  0131  0842               	movf	(??_main+1)^(0+128),w
  1811  0132  0020               	movlb	0	; select bank0
  1812  0133  00BA               	movwf	DS1307_SetTime@Hours+1
  1813  0134  0851               	movf	_minute,w	;volatile
  1814  0135  0021               	movlb	1	; select bank1
  1815  0136  00C3               	movwf	(??_main+2)^(0+128)
  1816  0137  01C4               	clrf	((??_main+2)^(0+128)+1)
  1817  0138  0843               	movf	(??_main+2)^(0+128),w
  1818  0139  0020               	movlb	0	; select bank0
  1819  013A  00BB               	movwf	DS1307_SetTime@Mins
  1820  013B  0021               	movlb	1	; select bank1
  1821  013C  0844               	movf	(??_main+3)^(0+128),w
  1822  013D  0020               	movlb	0	; select bank0
  1823  013E  00BC               	movwf	DS1307_SetTime@Mins+1
  1824  013F  3000               	movlw	0
  1825  0140  00BD               	movwf	DS1307_SetTime@Secs
  1826  0141  3000               	movlw	0
  1827  0142  00BE               	movwf	DS1307_SetTime@Secs+1
  1828  0143  3002               	movlw	2
  1829  0144  00BF               	movwf	DS1307_SetTime@Mode
  1830  0145  3000               	movlw	0
  1831  0146  00C0               	movwf	DS1307_SetTime@Mode+1
  1832  0147  3182  2266  3180   	fcall	_DS1307_SetTime
  1833                           
  1834                           ;main.c: 124: DS1307_ReadTime(&TimeArray);
  1835  014A  3059               	movlw	_TimeArray& (0+255)
  1836  014B  3181  2183  3180   	fcall	_DS1307_ReadTime
  1837                           
  1838                           ;main.c: 125: ShowTime(5, 0, 0);
  1839  014E  0020               	movlb	0	; select bank0
  1840  014F  01BF               	clrf	ShowTime@y
  1841  0150  01C0               	clrf	ShowTime@clear
  1842  0151  3005               	movlw	5
  1843  0152  3186  2668  3180   	fcall	_ShowTime
  1844                           
  1845                           ;main.c: 126: _delay((unsigned long)((500)*(32000000ULL/4000.0)));
  1846  0155  3015               	movlw	21
  1847  0156  0021               	movlb	1	; select bank1
  1848  0157  00C3               	movwf	(??_main^(0+128)+2)
  1849  0158  304B               	movlw	75
  1850  0159  00C2               	movwf	(??_main^(0+128)+1)
  1851  015A  30D1               	movlw	209
  1852  015B  00C1               	movwf	??_main^(0+128)
  1853  015C                     u5657:	
  1854  015C  0BC1               	decfsz	??_main^(0+128),f
  1855  015D  295C               	goto	u5657
  1856  015E  0BC2               	decfsz	(??_main^(0+128)+1),f
  1857  015F  295C               	goto	u5657
  1858  0160  0BC3               	decfsz	(??_main^(0+128)+2),f
  1859  0161  295C               	goto	u5657
  1860  0162  0000               	nop
  1861  0163                     l3856:	
  1862                           
  1863                           ;main.c: 127: }
  1864                           ;main.c: 129: if(FlagDateTimeChanged == 1) {
  1865  0163  0020               	movlb	0	; select bank0
  1866  0164  084B               	movf	_FlagDateTimeChanged,w	;volatile
  1867  0165  3A01               	xorlw	1
  1868  0166  1D03               	skipz
  1869  0167  28B9               	goto	l3818
  1870                           
  1871                           ;main.c: 130: DS1307_ReadTime(&TimeArray);
  1872  0168  3059               	movlw	_TimeArray& (0+255)
  1873  0169  3181  2183  3180   	fcall	_DS1307_ReadTime
  1874                           
  1875                           ;main.c: 131: DS1307_ReadDate(&DateArray);
  1876  016C  3054               	movlw	_DateArray& (0+255)
  1877  016D  3183  23E8  3180   	fcall	_DS1307_ReadDate
  1878                           
  1879                           ;main.c: 133: ShowTime(5, 0, 1);
  1880  0170  0020               	movlb	0	; select bank0
  1881  0171  01BF               	clrf	ShowTime@y
  1882  0172  01C0               	clrf	ShowTime@clear
  1883  0173  0AC0               	incf	ShowTime@clear,f
  1884  0174  3005               	movlw	5
  1885  0175  3186  2668  3180   	fcall	_ShowTime
  1886                           
  1887                           ;main.c: 134: ShowDate(2, 1, 0);
  1888  0178  0020               	movlb	0	; select bank0
  1889  0179  01BF               	clrf	ShowDate@y
  1890  017A  0ABF               	incf	ShowDate@y,f
  1891  017B  01C0               	clrf	ShowDate@clear
  1892  017C  3002               	movlw	2
  1893  017D  3183  2333  3180   	fcall	_ShowDate
  1894                           
  1895                           ;main.c: 136: FlagDateTimeChanged = 0;
  1896  0180  0020               	movlb	0	; select bank0
  1897  0181  01CB               	clrf	_FlagDateTimeChanged	;volatile
  1898  0182  28B9               	goto	l3818
  1899  0183                     __end_of_main:	
  1900                           
  1901                           	psect	text1
  1902  0C3A                     __ptext1:	
  1903 ;; *************** function _i2c_init *****************
  1904 ;; Defined at:
  1905 ;;		line 8 in file "i2cbysk.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;		None               void
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    5
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _i2c_init
  1935  0C3A                     _i2c_init:	
  1936                           
  1937                           ;i2cbysk.c: 26: TRISCbits.TRISC0 = 1;
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  1941  0C3A  0021               	movlb	1	; select bank1
  1942  0C3B  140E               	bsf	14,0	;volatile
  1943                           
  1944                           ;i2cbysk.c: 27: TRISCbits.TRISC1 = 1;
  1945  0C3C  148E               	bsf	14,1	;volatile
  1946                           
  1947                           ;i2cbysk.c: 30: SSPADD = 39;
  1948  0C3D  3027               	movlw	39
  1949  0C3E  0024               	movlb	4	; select bank4
  1950  0C3F  0092               	movwf	18	;volatile
  1951                           
  1952                           ;i2cbysk.c: 34: SSP1STATbits.SMP = 1;
  1953  0C40  1794               	bsf	20,7	;volatile
  1954                           
  1955                           ;i2cbysk.c: 35: SSP1STATbits.CKE = 1;
  1956  0C41  1714               	bsf	20,6	;volatile
  1957                           
  1958                           ;i2cbysk.c: 39: SSP1CON1 = 0x24;
  1959  0C42  3024               	movlw	36
  1960  0C43  0095               	movwf	21	;volatile
  1961                           
  1962                           ;i2cbysk.c: 40: SSP1CON1bits.SSPEN = 1;
  1963  0C44  1695               	bsf	21,5	;volatile
  1964                           
  1965                           ;i2cbysk.c: 41: SSP1CON1bits.SSPM = 0b1000;
  1966  0C45  0815               	movf	21,w	;volatile
  1967  0C46  39F0               	andlw	-16
  1968  0C47  3808               	iorlw	8
  1969  0C48  0095               	movwf	21	;volatile
  1970                           
  1971                           ;i2cbysk.c: 48: SSP1CON3bits.SDAHT = 1;
  1972  0C49  1597               	bsf	23,3	;volatile
  1973                           
  1974                           ;i2cbysk.c: 49: SSP1CON3bits.AHEN = 0;
  1975  0C4A  1097               	bcf	23,1	;volatile
  1976                           
  1977                           ;i2cbysk.c: 50: SSP1CON3bits.DHEN = 0;
  1978  0C4B  1017               	bcf	23,0	;volatile
  1979                           
  1980                           ;i2cbysk.c: 53: SSP1BUF = 0x00;
  1981  0C4C  0191               	clrf	17	;volatile
  1982                           
  1983                           ;i2cbysk.c: 56: SSP1MSK = 0x00;
  1984  0C4D  0193               	clrf	19	;volatile
  1985  0C4E  0008               	return
  1986  0C4F                     __end_of_i2c_init:	
  1987                           
  1988                           	psect	text2
  1989  0668                     __ptext2:	
  1990 ;; *************** function _ShowTime *****************
  1991 ;; Defined at:
  1992 ;;		line 194 in file "main.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  x               1    wreg     unsigned char 
  1995 ;;  y               1   31[BANK0 ] unsigned char 
  1996 ;;  clear           1   32[BANK0 ] unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  x               1   33[BANK0 ] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;		None               void
  2001 ;; Registers used:
  2002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2008 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2012 ;;Total ram usage:        6 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    8
  2015 ;; This function calls:
  2016 ;;		_LCDByte
  2017 ;;		_LCDGotoXY
  2018 ;;		_LCDWriteInt
  2019 ;;		_LCDWriteString
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _ShowTime
  2027  0668                     _ShowTime:	
  2028                           
  2029                           ;incstack = 0
  2030                           ; Regs used in _ShowTime: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2031                           ;ShowTime@x stored from wreg
  2032  0668  0020               	movlb	0	; select bank0
  2033  0669  00C1               	movwf	ShowTime@x
  2034                           
  2035                           ;main.c: 195: sati = TimeArray[2];
  2036  066A  085B               	movf	_TimeArray+2,w	;volatile
  2037  066B  0021               	movlb	1	; select bank1
  2038  066C  00BE               	movwf	??_ShowTime^(0+128)
  2039  066D  083E               	movf	??_ShowTime^(0+128),w
  2040  066E  0020               	movlb	0	; select bank0
  2041  066F  00D2               	movwf	_sati	;volatile
  2042                           
  2043                           ;main.c: 196: minute = TimeArray[1];
  2044  0670  085A               	movf	_TimeArray+1,w	;volatile
  2045  0671  0021               	movlb	1	; select bank1
  2046  0672  00BE               	movwf	??_ShowTime^(0+128)
  2047  0673  083E               	movf	??_ShowTime^(0+128),w
  2048  0674  0020               	movlb	0	; select bank0
  2049  0675  00D1               	movwf	_minute	;volatile
  2050                           
  2051                           ;main.c: 198: if(clear) { (LCDByte(0b00000001,0)); }
  2052  0676  0840               	movf	ShowTime@clear,w
  2053  0677  1903               	btfsc	3,2
  2054  0678  2E7F               	goto	l4038
  2055  0679  01B3               	clrf	LCDByte@isdata
  2056  067A  3001               	movlw	1
  2057  067B  318F  2709  3186   	fcall	_LCDByte
  2058  067E  0020               	movlb	0	; select bank0
  2059  067F                     l4038:	
  2060                           
  2061                           ;main.c: 200: LCDGotoXY(x,y);
  2062  067F  0020               	movlb	0	; select bank0
  2063  0680  083F               	movf	ShowTime@y,w
  2064  0681  0021               	movlb	1	; select bank1
  2065  0682  00BE               	movwf	??_ShowTime^(0+128)
  2066  0683  083E               	movf	??_ShowTime^(0+128),w
  2067  0684  0020               	movlb	0	; select bank0
  2068  0685  00BA               	movwf	LCDGotoXY@y
  2069  0686  0841               	movf	ShowTime@x,w
  2070  0687  3187  27D6  3186   	fcall	_LCDGotoXY
  2071                           
  2072                           ;main.c: 201: LCDWriteInt(sati, 2);
  2073  068A  0020               	movlb	0	; select bank0
  2074  068B  0852               	movf	_sati,w	;volatile
  2075  068C  0021               	movlb	1	; select bank1
  2076  068D  00BE               	movwf	??_ShowTime^(0+128)
  2077  068E  01BF               	clrf	(??_ShowTime^(0+128)+1)
  2078  068F  083E               	movf	??_ShowTime^(0+128),w
  2079  0690  0020               	movlb	0	; select bank0
  2080  0691  00BA               	movwf	LCDWriteInt@val
  2081  0692  0021               	movlb	1	; select bank1
  2082  0693  083F               	movf	(??_ShowTime+1)^(0+128),w
  2083  0694  0020               	movlb	0	; select bank0
  2084  0695  00BB               	movwf	LCDWriteInt@val+1
  2085  0696  3002               	movlw	2
  2086  0697  0021               	movlb	1	; select bank1
  2087  0698  00C0               	movwf	(??_ShowTime+2)^(0+128)
  2088  0699  0840               	movf	(??_ShowTime+2)^(0+128),w
  2089  069A  0020               	movlb	0	; select bank0
  2090  069B  00BC               	movwf	LCDWriteInt@field_length
  2091  069C  3184  2498  3186   	fcall	_LCDWriteInt
  2092                           
  2093                           ;main.c: 203: if(HourBlink == 1) {
  2094  069F  0020               	movlb	0	; select bank0
  2095  06A0  085D               	movf	_HourBlink,w	;volatile
  2096  06A1  3A01               	xorlw	1
  2097  06A2  1D03               	skipz
  2098  06A3  2EAB               	goto	l4048
  2099                           
  2100                           ;main.c: 204: LCDWriteString(":");
  2101  06A4  3066               	movlw	(STR_4| (0+32768))& (0+255)
  2102  06A5  318D  2599  3186   	fcall	_LCDWriteString
  2103                           
  2104                           ;main.c: 205: HourBlink = 0;
  2105  06A8  0020               	movlb	0	; select bank0
  2106  06A9  01DD               	clrf	_HourBlink	;volatile
  2107                           
  2108                           ;main.c: 206: }
  2109  06AA  2EB5               	goto	l4052
  2110  06AB                     l4048:	
  2111                           
  2112                           ;main.c: 207: else {
  2113                           ;main.c: 208: LCDWriteString(" ");
  2114  06AB  3046               	movlw	((STR_11+3)| (0+32768))& (0+255)
  2115  06AC  318D  2599  3186   	fcall	_LCDWriteString
  2116                           
  2117                           ;main.c: 209: HourBlink = 1;
  2118  06AF  3001               	movlw	1
  2119  06B0  0021               	movlb	1	; select bank1
  2120  06B1  00BE               	movwf	??_ShowTime^(0+128)
  2121  06B2  083E               	movf	??_ShowTime^(0+128),w
  2122  06B3  0020               	movlb	0	; select bank0
  2123  06B4  00DD               	movwf	_HourBlink	;volatile
  2124  06B5                     l4052:	
  2125                           
  2126                           ;main.c: 210: }
  2127                           ;main.c: 212: LCDWriteInt(minute, 2);
  2128  06B5  0851               	movf	_minute,w	;volatile
  2129  06B6  0021               	movlb	1	; select bank1
  2130  06B7  00BE               	movwf	??_ShowTime^(0+128)
  2131  06B8  01BF               	clrf	(??_ShowTime^(0+128)+1)
  2132  06B9  083E               	movf	??_ShowTime^(0+128),w
  2133  06BA  0020               	movlb	0	; select bank0
  2134  06BB  00BA               	movwf	LCDWriteInt@val
  2135  06BC  0021               	movlb	1	; select bank1
  2136  06BD  083F               	movf	(??_ShowTime+1)^(0+128),w
  2137  06BE  0020               	movlb	0	; select bank0
  2138  06BF  00BB               	movwf	LCDWriteInt@val+1
  2139  06C0  3002               	movlw	2
  2140  06C1  0021               	movlb	1	; select bank1
  2141  06C2  00C0               	movwf	(??_ShowTime+2)^(0+128)
  2142  06C3  0840               	movf	(??_ShowTime+2)^(0+128),w
  2143  06C4  0020               	movlb	0	; select bank0
  2144  06C5  00BC               	movwf	LCDWriteInt@field_length
  2145  06C6  3184  2498         	fcall	_LCDWriteInt
  2146  06C8  0008               	return
  2147  06C9                     __end_of_ShowTime:	
  2148                           
  2149                           	psect	text3
  2150  0333                     __ptext3:	
  2151 ;; *************** function _ShowDate *****************
  2152 ;; Defined at:
  2153 ;;		line 216 in file "main.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  x               1    wreg     unsigned char 
  2156 ;;  y               1   31[BANK0 ] unsigned char 
  2157 ;;  clear           1   32[BANK0 ] unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  x               1   33[BANK0 ] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;		None               void
  2162 ;; Registers used:
  2163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2171 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;Total ram usage:        6 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    8
  2176 ;; This function calls:
  2177 ;;		_LCDByte
  2178 ;;		_LCDGotoXY
  2179 ;;		_LCDWriteInt
  2180 ;;		_LCDWriteString
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _ShowDate
  2188  0333                     _ShowDate:	
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in _ShowDate: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2192                           ;ShowDate@x stored from wreg
  2193  0333  0020               	movlb	0	; select bank0
  2194  0334  00C1               	movwf	ShowDate@x
  2195                           
  2196                           ;main.c: 217: danusedmici = DateArray[0];
  2197  0335  0854               	movf	_DateArray,w	;volatile
  2198  0336  0021               	movlb	1	; select bank1
  2199  0337  00BE               	movwf	??_ShowDate^(0+128)
  2200  0338  083E               	movf	??_ShowDate^(0+128),w
  2201  0339  0020               	movlb	0	; select bank0
  2202  033A  00CE               	movwf	_danusedmici	;volatile
  2203                           
  2204                           ;main.c: 218: dan = DateArray[1];
  2205  033B  0855               	movf	_DateArray+1,w	;volatile
  2206  033C  0021               	movlb	1	; select bank1
  2207  033D  00BE               	movwf	??_ShowDate^(0+128)
  2208  033E  083E               	movf	??_ShowDate^(0+128),w
  2209  033F  0020               	movlb	0	; select bank0
  2210  0340  00CD               	movwf	_dan	;volatile
  2211                           
  2212                           ;main.c: 219: mesec = DateArray[2];
  2213  0341  0856               	movf	_DateArray+2,w	;volatile
  2214  0342  0021               	movlb	1	; select bank1
  2215  0343  00BE               	movwf	??_ShowDate^(0+128)
  2216  0344  083E               	movf	??_ShowDate^(0+128),w
  2217  0345  0020               	movlb	0	; select bank0
  2218  0346  00D0               	movwf	_mesec	;volatile
  2219                           
  2220                           ;main.c: 220: godina = DateArray[3];
  2221  0347  0857               	movf	_DateArray+3,w	;volatile
  2222  0348  0021               	movlb	1	; select bank1
  2223  0349  00BE               	movwf	??_ShowDate^(0+128)
  2224  034A  083E               	movf	??_ShowDate^(0+128),w
  2225  034B  0020               	movlb	0	; select bank0
  2226  034C  00CF               	movwf	_godina	;volatile
  2227                           
  2228                           ;main.c: 223: if(clear) { (LCDByte(0b00000001,0)); }
  2229  034D  0840               	movf	ShowDate@clear,w
  2230  034E  1903               	btfsc	3,2
  2231  034F  2B56               	goto	l4058
  2232  0350  01B3               	clrf	LCDByte@isdata
  2233  0351  3001               	movlw	1
  2234  0352  318F  2709  3183   	fcall	_LCDByte
  2235  0355  0020               	movlb	0	; select bank0
  2236  0356                     l4058:	
  2237                           
  2238                           ;main.c: 225: LCDGotoXY(x,y);
  2239  0356  0020               	movlb	0	; select bank0
  2240  0357  083F               	movf	ShowDate@y,w
  2241  0358  0021               	movlb	1	; select bank1
  2242  0359  00BE               	movwf	??_ShowDate^(0+128)
  2243  035A  083E               	movf	??_ShowDate^(0+128),w
  2244  035B  0020               	movlb	0	; select bank0
  2245  035C  00BA               	movwf	LCDGotoXY@y
  2246  035D  0841               	movf	ShowDate@x,w
  2247  035E  3187  27D6  3183   	fcall	_LCDGotoXY
  2248                           
  2249                           ;main.c: 227: switch (danusedmici) {
  2250  0361  2B85               	goto	l4076
  2251  0362                     l4060:	
  2252                           ;main.c: 228: case 1:
  2253                           
  2254                           
  2255                           ;main.c: 229: LCDWriteString("Pon ");
  2256  0362  3052               	movlw	(STR_6| (0+32768))& (0+255)
  2257  0363  318D  2599  3183   	fcall	_LCDWriteString
  2258                           
  2259                           ;main.c: 230: break;
  2260  0366  2B9D               	goto	l4078
  2261  0367                     l4062:	
  2262                           ;main.c: 232: case 2:
  2263                           
  2264                           
  2265                           ;main.c: 233: LCDWriteString("Uto ");
  2266  0367  3057               	movlw	(STR_7| (0+32768))& (0+255)
  2267  0368  318D  2599  3183   	fcall	_LCDWriteString
  2268                           
  2269                           ;main.c: 234: break;
  2270  036B  2B9D               	goto	l4078
  2271  036C                     l4064:	
  2272                           ;main.c: 236: case 3:
  2273                           
  2274                           
  2275                           ;main.c: 237: LCDWriteString("Sre ");
  2276  036C  304D               	movlw	(STR_8| (0+32768))& (0+255)
  2277  036D  318D  2599  3183   	fcall	_LCDWriteString
  2278                           
  2279                           ;main.c: 238: break;
  2280  0370  2B9D               	goto	l4078
  2281  0371                     l4066:	
  2282                           ;main.c: 240: case 4:
  2283                           
  2284                           
  2285                           ;main.c: 241: LCDWriteString("Cet ");
  2286  0371  305C               	movlw	(STR_9| (0+32768))& (0+255)
  2287  0372  318D  2599  3183   	fcall	_LCDWriteString
  2288                           
  2289                           ;main.c: 242: break;
  2290  0375  2B9D               	goto	l4078
  2291  0376                     l4068:	
  2292                           ;main.c: 244: case 5:
  2293                           
  2294                           
  2295                           ;main.c: 245: LCDWriteString("Pet ");
  2296  0376  3061               	movlw	(STR_10| (0+32768))& (0+255)
  2297  0377  318D  2599  3183   	fcall	_LCDWriteString
  2298                           
  2299                           ;main.c: 246: break;
  2300  037A  2B9D               	goto	l4078
  2301  037B                     l4070:	
  2302                           ;main.c: 248: case 6:
  2303                           
  2304                           
  2305                           ;main.c: 249: LCDWriteString("Sub ");
  2306  037B  3043               	movlw	(STR_11| (0+32768))& (0+255)
  2307  037C  318D  2599  3183   	fcall	_LCDWriteString
  2308                           
  2309                           ;main.c: 250: break;
  2310  037F  2B9D               	goto	l4078
  2311  0380                     l4072:	
  2312                           ;main.c: 252: case 7:
  2313                           
  2314                           
  2315                           ;main.c: 253: LCDWriteString("Ned ");
  2316  0380  3048               	movlw	(STR_12| (0+32768))& (0+255)
  2317  0381  318D  2599  3183   	fcall	_LCDWriteString
  2318                           
  2319                           ;main.c: 258: }
  2320                           
  2321                           ;main.c: 257: break;
  2322                           
  2323                           ;main.c: 256: default:
  2324                           
  2325                           ;main.c: 254: break;
  2326  0384  2B9D               	goto	l4078
  2327  0385                     l4076:	
  2328  0385  0020               	movlb	0	; select bank0
  2329  0386  084E               	movf	_danusedmici,w	;volatile
  2330                           
  2331                           ; Switch size 1, requested type "space"
  2332                           ; Number of cases is 7, Range of values is 1 to 7
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte           22    12 (average)
  2336                           ; direct_byte           23     9 (fixed)
  2337                           ; jumptable            263     9 (fixed)
  2338                           ;	Chosen strategy is simple_byte
  2339  0387  3A01               	xorlw	1	; case 1
  2340  0388  1903               	skipnz
  2341  0389  2B62               	goto	l4060
  2342  038A  3A03               	xorlw	3	; case 2
  2343  038B  1903               	skipnz
  2344  038C  2B67               	goto	l4062
  2345  038D  3A01               	xorlw	1	; case 3
  2346  038E  1903               	skipnz
  2347  038F  2B6C               	goto	l4064
  2348  0390  3A07               	xorlw	7	; case 4
  2349  0391  1903               	skipnz
  2350  0392  2B71               	goto	l4066
  2351  0393  3A01               	xorlw	1	; case 5
  2352  0394  1903               	skipnz
  2353  0395  2B76               	goto	l4068
  2354  0396  3A03               	xorlw	3	; case 6
  2355  0397  1903               	skipnz
  2356  0398  2B7B               	goto	l4070
  2357  0399  3A01               	xorlw	1	; case 7
  2358  039A  1903               	skipnz
  2359  039B  2B80               	goto	l4072
  2360  039C  2B9D               	goto	l4078
  2361  039D                     l4078:	
  2362                           
  2363                           ;main.c: 261: LCDWriteInt(dan, 2);
  2364  039D  0020               	movlb	0	; select bank0
  2365  039E  084D               	movf	_dan,w	;volatile
  2366  039F  0021               	movlb	1	; select bank1
  2367  03A0  00BE               	movwf	??_ShowDate^(0+128)
  2368  03A1  01BF               	clrf	(??_ShowDate^(0+128)+1)
  2369  03A2  083E               	movf	??_ShowDate^(0+128),w
  2370  03A3  0020               	movlb	0	; select bank0
  2371  03A4  00BA               	movwf	LCDWriteInt@val
  2372  03A5  0021               	movlb	1	; select bank1
  2373  03A6  083F               	movf	(??_ShowDate+1)^(0+128),w
  2374  03A7  0020               	movlb	0	; select bank0
  2375  03A8  00BB               	movwf	LCDWriteInt@val+1
  2376  03A9  3002               	movlw	2
  2377  03AA  0021               	movlb	1	; select bank1
  2378  03AB  00C0               	movwf	(??_ShowDate+2)^(0+128)
  2379  03AC  0840               	movf	(??_ShowDate+2)^(0+128),w
  2380  03AD  0020               	movlb	0	; select bank0
  2381  03AE  00BC               	movwf	LCDWriteInt@field_length
  2382  03AF  3184  2498  3183   	fcall	_LCDWriteInt
  2383                           
  2384                           ;main.c: 263: LCDWriteString(".");
  2385  03B2  3032               	movlw	((STR_1+14)| (0+32768))& (0+255)
  2386  03B3  318D  2599  3183   	fcall	_LCDWriteString
  2387                           
  2388                           ;main.c: 264: LCDWriteInt(mesec, 2);
  2389  03B6  0020               	movlb	0	; select bank0
  2390  03B7  0850               	movf	_mesec,w	;volatile
  2391  03B8  0021               	movlb	1	; select bank1
  2392  03B9  00BE               	movwf	??_ShowDate^(0+128)
  2393  03BA  01BF               	clrf	(??_ShowDate^(0+128)+1)
  2394  03BB  083E               	movf	??_ShowDate^(0+128),w
  2395  03BC  0020               	movlb	0	; select bank0
  2396  03BD  00BA               	movwf	LCDWriteInt@val
  2397  03BE  0021               	movlb	1	; select bank1
  2398  03BF  083F               	movf	(??_ShowDate+1)^(0+128),w
  2399  03C0  0020               	movlb	0	; select bank0
  2400  03C1  00BB               	movwf	LCDWriteInt@val+1
  2401  03C2  3002               	movlw	2
  2402  03C3  0021               	movlb	1	; select bank1
  2403  03C4  00C0               	movwf	(??_ShowDate+2)^(0+128)
  2404  03C5  0840               	movf	(??_ShowDate+2)^(0+128),w
  2405  03C6  0020               	movlb	0	; select bank0
  2406  03C7  00BC               	movwf	LCDWriteInt@field_length
  2407  03C8  3184  2498  3183   	fcall	_LCDWriteInt
  2408                           
  2409                           ;main.c: 266: LCDWriteString(".");
  2410  03CB  3032               	movlw	((STR_1+14)| (0+32768))& (0+255)
  2411  03CC  318D  2599  3183   	fcall	_LCDWriteString
  2412                           
  2413                           ;main.c: 267: LCDWriteInt(godina, 2);
  2414  03CF  0020               	movlb	0	; select bank0
  2415  03D0  084F               	movf	_godina,w	;volatile
  2416  03D1  0021               	movlb	1	; select bank1
  2417  03D2  00BE               	movwf	??_ShowDate^(0+128)
  2418  03D3  01BF               	clrf	(??_ShowDate^(0+128)+1)
  2419  03D4  083E               	movf	??_ShowDate^(0+128),w
  2420  03D5  0020               	movlb	0	; select bank0
  2421  03D6  00BA               	movwf	LCDWriteInt@val
  2422  03D7  0021               	movlb	1	; select bank1
  2423  03D8  083F               	movf	(??_ShowDate+1)^(0+128),w
  2424  03D9  0020               	movlb	0	; select bank0
  2425  03DA  00BB               	movwf	LCDWriteInt@val+1
  2426  03DB  3002               	movlw	2
  2427  03DC  0021               	movlb	1	; select bank1
  2428  03DD  00C0               	movwf	(??_ShowDate+2)^(0+128)
  2429  03DE  0840               	movf	(??_ShowDate+2)^(0+128),w
  2430  03DF  0020               	movlb	0	; select bank0
  2431  03E0  00BC               	movwf	LCDWriteInt@field_length
  2432  03E1  3184  2498  3183   	fcall	_LCDWriteInt
  2433                           
  2434                           ;main.c: 268: LCDWriteString(".");
  2435  03E4  3032               	movlw	((STR_1+14)| (0+32768))& (0+255)
  2436  03E5  318D  2599         	fcall	_LCDWriteString
  2437  03E7  0008               	return
  2438  03E8                     __end_of_ShowDate:	
  2439                           
  2440                           	psect	text4
  2441  0498                     __ptext4:	
  2442 ;; *************** function _LCDWriteInt *****************
  2443 ;; Defined at:
  2444 ;;		line 313 in file "lcd_hd44780_pic16.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  val             2   26[BANK0 ] int 
  2447 ;;  field_length    1   28[BANK0 ] char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  str             5    0[BANK1 ] unsigned char [5]
  2450 ;;  i               2    7[BANK1 ] int 
  2451 ;;  j               2    5[BANK1 ] int 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;		None               void
  2454 ;; Registers used:
  2455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2461 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Totals:         0       5       9       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;Total ram usage:       14 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    7
  2468 ;; This function calls:
  2469 ;;		_LCDByte
  2470 ;;		___awdiv
  2471 ;;		___awmod
  2472 ;; This function is called by:
  2473 ;;		_ShowTime
  2474 ;;		_ShowDate
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _LCDWriteInt
  2480  0498                     _LCDWriteInt:	
  2481                           
  2482                           ;lcd_hd44780_pic16.c: 326: char str[5]={0,0,0,0,0};
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _LCDWriteInt: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  2486  0498  3042               	movlw	low LCDWriteInt@F2719
  2487  0499  0086               	movwf	6
  2488  049A  3000               	movlw	high LCDWriteInt@F2719
  2489  049B  0087               	movwf	7
  2490  049C  30B5               	movlw	low LCDWriteInt@str
  2491  049D  0084               	movwf	4
  2492  049E  3000               	movlw	high LCDWriteInt@str
  2493  049F  0085               	movwf	5
  2494  04A0  3005               	movlw	5
  2495  04A1  00FF               	movwf	127
  2496  04A2                     u4230:	
  2497  04A2  0016               	moviw fsr1++
  2498  04A3  001A               	movwi fsr0++
  2499  04A4  0BFF               	decfsz	127,f
  2500  04A5  2CA2               	goto	u4230
  2501                           
  2502                           ;lcd_hd44780_pic16.c: 327: int i=4,j=0;
  2503  04A6  3004               	movlw	4
  2504  04A7  0021               	movlb	1	; select bank1
  2505  04A8  00BC               	movwf	LCDWriteInt@i^(0+128)
  2506  04A9  3000               	movlw	0
  2507  04AA  00BD               	movwf	(LCDWriteInt@i^(0+128)+1)
  2508  04AB  01BA               	clrf	LCDWriteInt@j^(0+128)
  2509  04AC  01BB               	clrf	(LCDWriteInt@j+1)^(0+128)
  2510                           
  2511                           ;lcd_hd44780_pic16.c: 330: if(val<0)
  2512  04AD  0020               	movlb	0	; select bank0
  2513  04AE  1FBB               	btfss	LCDWriteInt@val+1,7
  2514  04AF  2CBC               	goto	l4136
  2515                           
  2516                           ;lcd_hd44780_pic16.c: 331: {
  2517                           ;lcd_hd44780_pic16.c: 332: (LCDByte('-',1));
  2518  04B0  01B3               	clrf	LCDByte@isdata
  2519  04B1  0AB3               	incf	LCDByte@isdata,f
  2520  04B2  302D               	movlw	45
  2521  04B3  318F  2709  3184   	fcall	_LCDByte
  2522                           
  2523                           ;lcd_hd44780_pic16.c: 333: val=val*-1;
  2524  04B6  0020               	movlb	0	; select bank0
  2525  04B7  09BA               	comf	LCDWriteInt@val,f
  2526  04B8  09BB               	comf	LCDWriteInt@val+1,f
  2527  04B9  0ABA               	incf	LCDWriteInt@val,f
  2528  04BA  1903               	skipnz
  2529  04BB  0ABB               	incf	LCDWriteInt@val+1,f
  2530  04BC                     l4136:	
  2531                           ;lcd_hd44780_pic16.c: 334: }
  2532                           ;lcd_hd44780_pic16.c: 336: while(val)
  2533                           
  2534  04BC  0020               	movlb	0	; select bank0
  2535  04BD  083B               	movf	LCDWriteInt@val+1,w
  2536  04BE  043A               	iorwf	LCDWriteInt@val,w
  2537  04BF  1903               	btfsc	3,2
  2538  04C0  2CF3               	goto	l4138
  2539                           
  2540                           ;lcd_hd44780_pic16.c: 337: {
  2541                           ;lcd_hd44780_pic16.c: 338: str[i]=val%10;
  2542  04C1  300A               	movlw	10
  2543  04C2  00B1               	movwf	___awmod@divisor
  2544  04C3  3000               	movlw	0
  2545  04C4  00B2               	movwf	___awmod@divisor+1
  2546  04C5  083B               	movf	LCDWriteInt@val+1,w
  2547  04C6  01B4               	clrf	___awmod@dividend+1
  2548  04C7  07B4               	addwf	___awmod@dividend+1,f
  2549  04C8  083A               	movf	LCDWriteInt@val,w
  2550  04C9  01B3               	clrf	___awmod@dividend
  2551  04CA  07B3               	addwf	___awmod@dividend,f
  2552  04CB  318E  2627  3184   	fcall	___awmod
  2553  04CE  0020               	movlb	0	; select bank0
  2554  04CF  0831               	movf	?___awmod,w
  2555  04D0  00BD               	movwf	??_LCDWriteInt
  2556  04D1  0021               	movlb	1	; select bank1
  2557  04D2  083C               	movf	LCDWriteInt@i^(0+128),w
  2558  04D3  3EB5               	addlw	LCDWriteInt@str& (0+255)
  2559  04D4  0086               	movwf	6
  2560  04D5  0187               	clrf	7
  2561  04D6  0020               	movlb	0	; select bank0
  2562  04D7  083D               	movf	??_LCDWriteInt,w
  2563  04D8  0081               	movwf	1
  2564                           
  2565                           ;lcd_hd44780_pic16.c: 339: val=val/10;
  2566  04D9  300A               	movlw	10
  2567  04DA  00B1               	movwf	___awdiv@divisor
  2568  04DB  3000               	movlw	0
  2569  04DC  00B2               	movwf	___awdiv@divisor+1
  2570  04DD  083B               	movf	LCDWriteInt@val+1,w
  2571  04DE  01B4               	clrf	___awdiv@dividend+1
  2572  04DF  07B4               	addwf	___awdiv@dividend+1,f
  2573  04E0  083A               	movf	LCDWriteInt@val,w
  2574  04E1  01B3               	clrf	___awdiv@dividend
  2575  04E2  07B3               	addwf	___awdiv@dividend,f
  2576  04E3  3187  2782  3184   	fcall	___awdiv
  2577  04E6  0020               	movlb	0	; select bank0
  2578  04E7  0832               	movf	?___awdiv+1,w
  2579  04E8  01BB               	clrf	LCDWriteInt@val+1
  2580  04E9  07BB               	addwf	LCDWriteInt@val+1,f
  2581  04EA  0831               	movf	?___awdiv,w
  2582  04EB  01BA               	clrf	LCDWriteInt@val
  2583  04EC  07BA               	addwf	LCDWriteInt@val,f
  2584                           
  2585                           ;lcd_hd44780_pic16.c: 340: i--;
  2586  04ED  30FF               	movlw	255
  2587  04EE  0021               	movlb	1	; select bank1
  2588  04EF  07BC               	addwf	LCDWriteInt@i^(0+128),f
  2589  04F0  30FF               	movlw	255
  2590  04F1  3DBD               	addwfc	(LCDWriteInt@i+1)^(0+128),f
  2591  04F2  2CBC               	goto	l4136
  2592  04F3                     l4138:	
  2593                           
  2594                           ;lcd_hd44780_pic16.c: 341: }
  2595                           ;lcd_hd44780_pic16.c: 342: if(field_length==-1)
  2596  04F3  083C               	movf	LCDWriteInt@field_length,w
  2597  04F4  3AFF               	xorlw	255
  2598  04F5  1903               	btfsc	3,2
  2599  04F6  2CFD               	goto	l4144
  2600  04F7  2D07               	goto	l4146
  2601  04F8                     l4142:	
  2602                           ;lcd_hd44780_pic16.c: 343: while(str[j]==0) j++;
  2603                           
  2604  04F8  3001               	movlw	1
  2605  04F9  0021               	movlb	1	; select bank1
  2606  04FA  07BA               	addwf	LCDWriteInt@j^(0+128),f
  2607  04FB  3000               	movlw	0
  2608  04FC  3DBB               	addwfc	(LCDWriteInt@j+1)^(0+128),f
  2609  04FD                     l4144:	
  2610  04FD  0021               	movlb	1	; select bank1
  2611  04FE  083A               	movf	LCDWriteInt@j^(0+128),w
  2612  04FF  3EB5               	addlw	LCDWriteInt@str& (0+255)
  2613  0500  0086               	movwf	6
  2614  0501  0187               	clrf	7
  2615  0502  0801               	movf	1,w
  2616  0503  3A00               	xorlw	0
  2617  0504  1D03               	btfss	3,2
  2618  0505  2D1B               	goto	l181
  2619  0506  2CF8               	goto	l4142
  2620  0507                     l4146:	
  2621                           
  2622                           ;lcd_hd44780_pic16.c: 344: else
  2623                           ;lcd_hd44780_pic16.c: 345: j=5-field_length;
  2624  0507  0020               	movlb	0	; select bank0
  2625  0508  083C               	movf	LCDWriteInt@field_length,w
  2626  0509  00BD               	movwf	??_LCDWriteInt
  2627  050A  01BE               	clrf	??_LCDWriteInt+1
  2628  050B  1BBD               	btfsc	??_LCDWriteInt,7
  2629  050C  03BE               	decf	??_LCDWriteInt+1,f
  2630  050D  09BD               	comf	??_LCDWriteInt,f
  2631  050E  09BE               	comf	??_LCDWriteInt+1,f
  2632  050F  0ABD               	incf	??_LCDWriteInt,f
  2633  0510  1903               	skipnz
  2634  0511  0ABE               	incf	??_LCDWriteInt+1,f
  2635  0512  083D               	movf	??_LCDWriteInt,w
  2636  0513  3E05               	addlw	5
  2637  0514  0021               	movlb	1	; select bank1
  2638  0515  00BA               	movwf	LCDWriteInt@j^(0+128)
  2639  0516  3000               	movlw	0
  2640  0517  0020               	movlb	0	; select bank0
  2641  0518  3D3E               	addwfc	??_LCDWriteInt+1,w
  2642  0519  0021               	movlb	1	; select bank1
  2643  051A  00BB               	movwf	(LCDWriteInt@j+1)^(0+128)
  2644  051B                     l181:	
  2645                           
  2646                           ;lcd_hd44780_pic16.c: 348: for(i=j;i<5;i++)
  2647  051B  083B               	movf	(LCDWriteInt@j+1)^(0+128),w
  2648  051C  01BD               	clrf	(LCDWriteInt@i+1)^(0+128)
  2649  051D  07BD               	addwf	(LCDWriteInt@i+1)^(0+128),f
  2650  051E  083A               	movf	LCDWriteInt@j^(0+128),w
  2651  051F  01BC               	clrf	LCDWriteInt@i^(0+128)
  2652  0520  07BC               	addwf	LCDWriteInt@i^(0+128),f
  2653  0521                     L1:	
  2654  0521  083D               	movf	(LCDWriteInt@i+1)^(0+128),w
  2655  0522  3A80               	xorlw	128
  2656  0523  00FF               	movwf	127
  2657  0524  3080               	movlw	128
  2658  0525  027F               	subwf	127,w
  2659  0526  1D03               	skipz
  2660  0527  2D2A               	goto	u4285
  2661  0528  3005               	movlw	5
  2662  0529  023C               	subwf	LCDWriteInt@i^(0+128),w
  2663  052A                     u4285:	
  2664  052A  1803               	btfsc	3,0
  2665  052B  0008               	return
  2666                           
  2667                           ;lcd_hd44780_pic16.c: 349: {
  2668                           ;lcd_hd44780_pic16.c: 350: (LCDByte(48+str[i],1));
  2669  052C  0020               	movlb	0	; select bank0
  2670  052D  01B3               	clrf	LCDByte@isdata
  2671  052E  0AB3               	incf	LCDByte@isdata,f
  2672  052F  0021               	movlb	1	; select bank1
  2673  0530  083C               	movf	LCDWriteInt@i^(0+128),w
  2674  0531  3EB5               	addlw	LCDWriteInt@str& (0+255)
  2675  0532  0086               	movwf	6
  2676  0533  0187               	clrf	7
  2677  0534  0801               	movf	1,w
  2678  0535  3E30               	addlw	48
  2679  0536  318F  2709  3184   	fcall	_LCDByte
  2680  0539  3001               	movlw	1
  2681  053A  0021               	movlb	1	; select bank1
  2682  053B  07BC               	addwf	LCDWriteInt@i^(0+128),f
  2683  053C  3000               	movlw	0
  2684  053D  3DBD               	addwfc	(LCDWriteInt@i+1)^(0+128),f
  2685  053E  2D21               	goto	L1
  2686  053F                     __end_of_LCDWriteInt:	
  2687                           
  2688                           	psect	text5
  2689  0E27                     __ptext5:	
  2690 ;; *************** function ___awmod *****************
  2691 ;; Defined at:
  2692 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  divisor         2   17[BANK0 ] int 
  2695 ;;  dividend        2   19[BANK0 ] int 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  sign            1   23[BANK0 ] unsigned char 
  2698 ;;  counter         1   22[BANK0 ] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  2   17[BANK0 ] int 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2709 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2710 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;Total ram usage:        7 bytes
  2713 ;; Hardware stack levels used:    1
  2714 ;; Hardware stack levels required when called:    5
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_LCDWriteInt
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           
  2723                           ;psect for function ___awmod
  2724  0E27                     ___awmod:	
  2725                           
  2726                           ;incstack = 0
  2727                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2728  0E27  0020               	movlb	0	; select bank0
  2729  0E28  01B7               	clrf	___awmod@sign
  2730  0E29  1FB4               	btfss	___awmod@dividend+1,7
  2731  0E2A  2E32               	goto	l4424
  2732  0E2B  09B3               	comf	___awmod@dividend,f
  2733  0E2C  09B4               	comf	___awmod@dividend+1,f
  2734  0E2D  0AB3               	incf	___awmod@dividend,f
  2735  0E2E  1903               	skipnz
  2736  0E2F  0AB4               	incf	___awmod@dividend+1,f
  2737  0E30  01B7               	clrf	___awmod@sign
  2738  0E31  0AB7               	incf	___awmod@sign,f
  2739  0E32                     l4424:	
  2740  0E32  1FB2               	btfss	___awmod@divisor+1,7
  2741  0E33  2E39               	goto	l4428
  2742  0E34  09B1               	comf	___awmod@divisor,f
  2743  0E35  09B2               	comf	___awmod@divisor+1,f
  2744  0E36  0AB1               	incf	___awmod@divisor,f
  2745  0E37  1903               	skipnz
  2746  0E38  0AB2               	incf	___awmod@divisor+1,f
  2747  0E39                     l4428:	
  2748  0E39  0832               	movf	___awmod@divisor+1,w
  2749  0E3A  0431               	iorwf	___awmod@divisor,w
  2750  0E3B  1903               	skipnz
  2751  0E3C  2E60               	goto	l4446
  2752  0E3D  01B6               	clrf	___awmod@counter
  2753  0E3E  0AB6               	incf	___awmod@counter,f
  2754  0E3F                     l4436:	
  2755  0E3F  1BB2               	btfsc	___awmod@divisor+1,7
  2756  0E40  2E4B               	goto	l4438
  2757  0E41  3001               	movlw	1
  2758  0E42                     u5005:	
  2759  0E42  35B1               	lslf	___awmod@divisor,f
  2760  0E43  0DB2               	rlf	___awmod@divisor+1,f
  2761  0E44  0B89               	decfsz	9,f
  2762  0E45  2E42               	goto	u5005
  2763  0E46  3001               	movlw	1
  2764  0E47  00B5               	movwf	??___awmod
  2765  0E48  0835               	movf	??___awmod,w
  2766  0E49  07B6               	addwf	___awmod@counter,f
  2767  0E4A  2E3F               	goto	l4436
  2768  0E4B                     l4438:	
  2769  0E4B  0832               	movf	___awmod@divisor+1,w
  2770  0E4C  0234               	subwf	___awmod@dividend+1,w
  2771  0E4D  1D03               	skipz
  2772  0E4E  2E51               	goto	u5025
  2773  0E4F  0831               	movf	___awmod@divisor,w
  2774  0E50  0233               	subwf	___awmod@dividend,w
  2775  0E51                     u5025:	
  2776  0E51  1C03               	skipc
  2777  0E52  2E57               	goto	l4442
  2778  0E53  0831               	movf	___awmod@divisor,w
  2779  0E54  02B3               	subwf	___awmod@dividend,f
  2780  0E55  0832               	movf	___awmod@divisor+1,w
  2781  0E56  3BB4               	subwfb	___awmod@dividend+1,f
  2782  0E57                     l4442:	
  2783  0E57  3001               	movlw	1
  2784  0E58                     u5035:	
  2785  0E58  36B2               	lsrf	___awmod@divisor+1,f
  2786  0E59  0CB1               	rrf	___awmod@divisor,f
  2787  0E5A  0B89               	decfsz	9,f
  2788  0E5B  2E58               	goto	u5035
  2789  0E5C  3001               	movlw	1
  2790  0E5D  02B6               	subwf	___awmod@counter,f
  2791  0E5E  1D03               	btfss	3,2
  2792  0E5F  2E4B               	goto	l4438
  2793  0E60                     l4446:	
  2794  0E60  0837               	movf	___awmod@sign,w
  2795  0E61  1903               	btfsc	3,2
  2796  0E62  2E68               	goto	l4450
  2797  0E63  09B3               	comf	___awmod@dividend,f
  2798  0E64  09B4               	comf	___awmod@dividend+1,f
  2799  0E65  0AB3               	incf	___awmod@dividend,f
  2800  0E66  1903               	skipnz
  2801  0E67  0AB4               	incf	___awmod@dividend+1,f
  2802  0E68                     l4450:	
  2803  0E68  0834               	movf	___awmod@dividend+1,w
  2804  0E69  01B2               	clrf	?___awmod+1
  2805  0E6A  07B2               	addwf	?___awmod+1,f
  2806  0E6B  0833               	movf	___awmod@dividend,w
  2807  0E6C  01B1               	clrf	?___awmod
  2808  0E6D  07B1               	addwf	?___awmod,f
  2809  0E6E  0008               	return
  2810  0E6F                     __end_of___awmod:	
  2811                           
  2812                           	psect	text6
  2813  0782                     __ptext6:	
  2814 ;; *************** function ___awdiv *****************
  2815 ;; Defined at:
  2816 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awdiv.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  divisor         2   17[BANK0 ] int 
  2819 ;;  dividend        2   19[BANK0 ] int 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  quotient        2   24[BANK0 ] int 
  2822 ;;  sign            1   23[BANK0 ] unsigned char 
  2823 ;;  counter         1   22[BANK0 ] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  2   17[BANK0 ] int 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2833 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;Total ram usage:        9 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    5
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_LCDWriteInt
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           
  2848                           ;psect for function ___awdiv
  2849  0782                     ___awdiv:	
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2853  0782  0020               	movlb	0	; select bank0
  2854  0783  01B7               	clrf	___awdiv@sign
  2855  0784  1FB2               	btfss	___awdiv@divisor+1,7
  2856  0785  2F8D               	goto	l4380
  2857  0786  09B1               	comf	___awdiv@divisor,f
  2858  0787  09B2               	comf	___awdiv@divisor+1,f
  2859  0788  0AB1               	incf	___awdiv@divisor,f
  2860  0789  1903               	skipnz
  2861  078A  0AB2               	incf	___awdiv@divisor+1,f
  2862  078B  01B7               	clrf	___awdiv@sign
  2863  078C  0AB7               	incf	___awdiv@sign,f
  2864  078D                     l4380:	
  2865  078D  1FB4               	btfss	___awdiv@dividend+1,7
  2866  078E  2F98               	goto	l4386
  2867  078F  09B3               	comf	___awdiv@dividend,f
  2868  0790  09B4               	comf	___awdiv@dividend+1,f
  2869  0791  0AB3               	incf	___awdiv@dividend,f
  2870  0792  1903               	skipnz
  2871  0793  0AB4               	incf	___awdiv@dividend+1,f
  2872  0794  3001               	movlw	1
  2873  0795  00B5               	movwf	??___awdiv
  2874  0796  0835               	movf	??___awdiv,w
  2875  0797  06B7               	xorwf	___awdiv@sign,f
  2876  0798                     l4386:	
  2877  0798  01B8               	clrf	___awdiv@quotient
  2878  0799  01B9               	clrf	___awdiv@quotient+1
  2879  079A  0832               	movf	___awdiv@divisor+1,w
  2880  079B  0431               	iorwf	___awdiv@divisor,w
  2881  079C  1903               	skipnz
  2882  079D  2FC7               	goto	l4408
  2883  079E  01B6               	clrf	___awdiv@counter
  2884  079F  0AB6               	incf	___awdiv@counter,f
  2885  07A0                     l4396:	
  2886  07A0  1BB2               	btfsc	___awdiv@divisor+1,7
  2887  07A1  2FAC               	goto	l4398
  2888  07A2  3001               	movlw	1
  2889  07A3                     u4905:	
  2890  07A3  35B1               	lslf	___awdiv@divisor,f
  2891  07A4  0DB2               	rlf	___awdiv@divisor+1,f
  2892  07A5  0B89               	decfsz	9,f
  2893  07A6  2FA3               	goto	u4905
  2894  07A7  3001               	movlw	1
  2895  07A8  00B5               	movwf	??___awdiv
  2896  07A9  0835               	movf	??___awdiv,w
  2897  07AA  07B6               	addwf	___awdiv@counter,f
  2898  07AB  2FA0               	goto	l4396
  2899  07AC                     l4398:	
  2900  07AC  3001               	movlw	1
  2901  07AD                     u4925:	
  2902  07AD  35B8               	lslf	___awdiv@quotient,f
  2903  07AE  0DB9               	rlf	___awdiv@quotient+1,f
  2904  07AF  0B89               	decfsz	9,f
  2905  07B0  2FAD               	goto	u4925
  2906  07B1  0832               	movf	___awdiv@divisor+1,w
  2907  07B2  0234               	subwf	___awdiv@dividend+1,w
  2908  07B3  1D03               	skipz
  2909  07B4  2FB7               	goto	u4935
  2910  07B5  0831               	movf	___awdiv@divisor,w
  2911  07B6  0233               	subwf	___awdiv@dividend,w
  2912  07B7                     u4935:	
  2913  07B7  1C03               	skipc
  2914  07B8  2FBE               	goto	l4404
  2915  07B9  0831               	movf	___awdiv@divisor,w
  2916  07BA  02B3               	subwf	___awdiv@dividend,f
  2917  07BB  0832               	movf	___awdiv@divisor+1,w
  2918  07BC  3BB4               	subwfb	___awdiv@dividend+1,f
  2919  07BD  1438               	bsf	___awdiv@quotient,0
  2920  07BE                     l4404:	
  2921  07BE  3001               	movlw	1
  2922  07BF                     u4945:	
  2923  07BF  36B2               	lsrf	___awdiv@divisor+1,f
  2924  07C0  0CB1               	rrf	___awdiv@divisor,f
  2925  07C1  0B89               	decfsz	9,f
  2926  07C2  2FBF               	goto	u4945
  2927  07C3  3001               	movlw	1
  2928  07C4  02B6               	subwf	___awdiv@counter,f
  2929  07C5  1D03               	btfss	3,2
  2930  07C6  2FAC               	goto	l4398
  2931  07C7                     l4408:	
  2932  07C7  0837               	movf	___awdiv@sign,w
  2933  07C8  1903               	btfsc	3,2
  2934  07C9  2FCF               	goto	l4412
  2935  07CA  09B8               	comf	___awdiv@quotient,f
  2936  07CB  09B9               	comf	___awdiv@quotient+1,f
  2937  07CC  0AB8               	incf	___awdiv@quotient,f
  2938  07CD  1903               	skipnz
  2939  07CE  0AB9               	incf	___awdiv@quotient+1,f
  2940  07CF                     l4412:	
  2941  07CF  0839               	movf	___awdiv@quotient+1,w
  2942  07D0  01B2               	clrf	?___awdiv+1
  2943  07D1  07B2               	addwf	?___awdiv+1,f
  2944  07D2  0838               	movf	___awdiv@quotient,w
  2945  07D3  01B1               	clrf	?___awdiv
  2946  07D4  07B1               	addwf	?___awdiv,f
  2947  07D5  0008               	return
  2948  07D6                     __end_of___awdiv:	
  2949                           
  2950                           	psect	text7
  2951  05DD                     __ptext7:	
  2952 ;; *************** function _SetUpDevice *****************
  2953 ;; Defined at:
  2954 ;;		line 142 in file "main.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;		None               void
  2961 ;; Registers used:
  2962 ;;		wreg, status,2, status,0
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    5
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _SetUpDevice
  2984  05DD                     _SetUpDevice:	
  2985                           
  2986                           ;main.c: 144: OSCCONbits.IRCF = 0b1110;
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _SetUpDevice: [wreg+status,2+status,0]
  2990  05DD  0021               	movlb	1	; select bank1
  2991  05DE  0819               	movf	25,w	;volatile
  2992  05DF  3987               	andlw	-121
  2993  05E0  3870               	iorlw	112
  2994  05E1  0099               	movwf	25	;volatile
  2995                           
  2996                           ;main.c: 168: OSCCONbits.SCS = 0x00;
  2997  05E2  30FC               	movlw	-4
  2998  05E3  0599               	andwf	25,f	;volatile
  2999                           
  3000                           ;main.c: 169: OSCCONbits.SPLLEN = 1;
  3001  05E4  1799               	bsf	25,7	;volatile
  3002                           
  3003                           ;main.c: 172: OPTION_REGbits.TMR0CS = 0;
  3004  05E5  1295               	bcf	21,5	;volatile
  3005                           
  3006                           ;main.c: 173: OPTION_REGbits.PS = 0b101;
  3007  05E6  0815               	movf	21,w	;volatile
  3008  05E7  39F8               	andlw	-8
  3009  05E8  3805               	iorlw	5
  3010  05E9  0095               	movwf	21	;volatile
  3011                           
  3012                           ;main.c: 174: OPTION_REGbits.PSA = 0;
  3013  05EA  1195               	bcf	21,3	;volatile
  3014                           
  3015                           ;main.c: 177: ANSELA = 0x00;
  3016  05EB  0023               	movlb	3	; select bank3
  3017  05EC  018C               	clrf	12	;volatile
  3018                           
  3019                           ;main.c: 178: ANSELC = 0x00;
  3020  05ED  018E               	clrf	14	;volatile
  3021                           
  3022                           ;main.c: 180: TRISC = 0x00;
  3023  05EE  0021               	movlb	1	; select bank1
  3024  05EF  018E               	clrf	14	;volatile
  3025                           
  3026                           ;main.c: 182: TRISAbits.TRISA5 = 1;
  3027  05F0  168C               	bsf	12,5	;volatile
  3028                           
  3029                           ;main.c: 183: TRISAbits.TRISA4 = 1;
  3030  05F1  160C               	bsf	12,4	;volatile
  3031  05F2  0008               	return
  3032  05F3                     __end_of_SetUpDevice:	
  3033                           
  3034                           	psect	text8
  3035  0727                     __ptext8:	
  3036 ;; *************** function _LCDInit *****************
  3037 ;; Defined at:
  3038 ;;		line 199 in file "lcd_hd44780_pic16.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  style           1    wreg     unsigned char 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  style           1   29[BANK0 ] unsigned char 
  3043 ;;  __i             1   30[BANK0 ] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;		None               void
  3046 ;; Registers used:
  3047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;Total ram usage:        5 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    7
  3060 ;; This function calls:
  3061 ;;		_LCDBusyLoop
  3062 ;;		_LCDByte
  3063 ;; This function is called by:
  3064 ;;		_main
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _LCDInit
  3070  0727                     _LCDInit:	
  3071                           
  3072                           ;incstack = 0
  3073                           ; Regs used in _LCDInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3074                           ;LCDInit@style stored from wreg
  3075  0727  0020               	movlb	0	; select bank0
  3076  0728  00BD               	movwf	LCDInit@style
  3077                           
  3078                           ;lcd_hd44780_pic16.c: 215: _delay((unsigned long)((30)*(32000000ULL/4000.0)));
  3079  0729  3002               	movlw	2
  3080  072A  00BC               	movwf	??_LCDInit+2
  3081  072B  3038               	movlw	56
  3082  072C  00BB               	movwf	??_LCDInit+1
  3083  072D  30AD               	movlw	173
  3084  072E  00BA               	movwf	??_LCDInit
  3085  072F                     u5667:	
  3086  072F  0BBA               	decfsz	??_LCDInit,f
  3087  0730  2F2F               	goto	u5667
  3088  0731  0BBB               	decfsz	??_LCDInit+1,f
  3089  0732  2F2F               	goto	u5667
  3090  0733  0BBC               	decfsz	??_LCDInit+2,f
  3091  0734  2F2F               	goto	u5667
  3092                           
  3093                           ;lcd_hd44780_pic16.c: 218: TRISC&=(~(0x0F<<2));
  3094  0735  30C3               	movlw	195
  3095  0736  0020               	movlb	0	; select bank0
  3096  0737  00BA               	movwf	??_LCDInit
  3097  0738  083A               	movf	??_LCDInit,w
  3098  0739  0021               	movlb	1	; select bank1
  3099  073A  058E               	andwf	14,f	;volatile
  3100                           
  3101                           ;lcd_hd44780_pic16.c: 220: TRISAbits.TRISA2=0;
  3102  073B  110C               	bcf	12,2	;volatile
  3103                           
  3104                           ;lcd_hd44780_pic16.c: 221: TRISAbits.TRISA0=0;
  3105  073C  100C               	bcf	12,0	;volatile
  3106                           
  3107                           ;lcd_hd44780_pic16.c: 222: TRISAbits.TRISA1=0;
  3108  073D  108C               	bcf	12,1	;volatile
  3109                           
  3110                           ;lcd_hd44780_pic16.c: 224: PORTC&=(~(0x0F<<2));
  3111  073E  30C3               	movlw	195
  3112  073F  0020               	movlb	0	; select bank0
  3113  0740  00BA               	movwf	??_LCDInit
  3114  0741  083A               	movf	??_LCDInit,w
  3115  0742  058E               	andwf	14,f	;volatile
  3116                           
  3117                           ;lcd_hd44780_pic16.c: 226: (RA2=0);
  3118  0743  110C               	bcf	12,2	;volatile
  3119                           
  3120                           ;lcd_hd44780_pic16.c: 227: (RA1=0);
  3121  0744  108C               	bcf	12,1	;volatile
  3122                           
  3123                           ;lcd_hd44780_pic16.c: 228: (RA0=0);
  3124  0745  100C               	bcf	12,0	;volatile
  3125                           
  3126                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((0.5)*(32000000ULL/4000000.0)));
  3127  0746  2F47               	nop2	;2 cycle nop
  3128  0747  2F48               	nop2	;2 cycle nop
  3129                           
  3130                           ;lcd_hd44780_pic16.c: 233: (RA2=1);
  3131  0748  0020               	movlb	0	; select bank0
  3132  0749  150C               	bsf	12,2	;volatile
  3133                           
  3134                           ;lcd_hd44780_pic16.c: 234: PORTC|=((0b00000010)<<2);
  3135  074A  158E               	bsf	14,3	;volatile
  3136                           
  3137                           ;lcd_hd44780_pic16.c: 235: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3138  074B  2F4C               	nop2	;2 cycle nop
  3139  074C  2F4D               	nop2	;2 cycle nop
  3140  074D  2F4E               	nop2	;2 cycle nop
  3141  074E  2F4F               	nop2	;2 cycle nop
  3142                           
  3143                           ;lcd_hd44780_pic16.c: 236: (RA2=0);
  3144  074F  0020               	movlb	0	; select bank0
  3145  0750  110C               	bcf	12,2	;volatile
  3146                           
  3147                           ;lcd_hd44780_pic16.c: 237: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  3148  0751  2F52               	nop2	;2 cycle nop
  3149  0752  2F53               	nop2	;2 cycle nop
  3150  0753  2F54               	nop2	;2 cycle nop
  3151  0754  2F55               	nop2	;2 cycle nop
  3152                           
  3153                           ;lcd_hd44780_pic16.c: 240: LCDBusyLoop();
  3154  0755  3185  25F3  3187   	fcall	_LCDBusyLoop
  3155                           
  3156                           ;lcd_hd44780_pic16.c: 245: (LCDByte(0b00101000,0));
  3157  0758  0020               	movlb	0	; select bank0
  3158  0759  01B3               	clrf	LCDByte@isdata
  3159  075A  3028               	movlw	40
  3160  075B  318F  2709  3187   	fcall	_LCDByte
  3161                           
  3162                           ;lcd_hd44780_pic16.c: 246: (LCDByte(0b00001100|style,0));
  3163  075E  0020               	movlb	0	; select bank0
  3164  075F  01B3               	clrf	LCDByte@isdata
  3165  0760  083D               	movf	LCDInit@style,w
  3166  0761  380C               	iorlw	12
  3167  0762  318F  2709  3187   	fcall	_LCDByte
  3168                           
  3169                           ;lcd_hd44780_pic16.c: 249: (LCDByte(0b01000000,0));
  3170  0765  0020               	movlb	0	; select bank0
  3171  0766  01B3               	clrf	LCDByte@isdata
  3172  0767  3040               	movlw	64
  3173  0768  318F  2709  3187   	fcall	_LCDByte
  3174                           
  3175                           ;lcd_hd44780_pic16.c: 251: uint8_t __i;
  3176                           ;lcd_hd44780_pic16.c: 252: for(__i=0;__i<sizeof(__cgram);__i++)
  3177  076B  0020               	movlb	0	; select bank0
  3178  076C  01BE               	clrf	LCDInit@__i
  3179  076D                     L2:	
  3180  076D  3040               	movlw	64
  3181  076E  023E               	subwf	LCDInit@__i,w
  3182  076F  1803               	btfsc	3,0
  3183  0770  0008               	return
  3184                           
  3185                           ;lcd_hd44780_pic16.c: 253: (LCDByte(__cgram[__i],1));
  3186  0771  01B3               	clrf	LCDByte@isdata
  3187  0772  0AB3               	incf	LCDByte@isdata,f
  3188  0773  083E               	movf	LCDInit@__i,w
  3189  0774  3E20               	addlw	___cgram& (0+255)
  3190  0775  0086               	movwf	6
  3191  0776  3001               	movlw	1	; select bank2/3
  3192  0777  0087               	movwf	7
  3193  0778  0801               	movf	1,w
  3194  0779  318F  2709  3187   	fcall	_LCDByte
  3195  077C  3001               	movlw	1
  3196  077D  0020               	movlb	0	; select bank0
  3197  077E  00BA               	movwf	??_LCDInit
  3198  077F  083A               	movf	??_LCDInit,w
  3199  0780  07BE               	addwf	LCDInit@__i,f
  3200  0781  2F6D               	goto	L2
  3201  0782                     __end_of_LCDInit:	
  3202                           
  3203                           	psect	text9
  3204  0266                     __ptext9:	
  3205 ;; *************** function _DS1307_SetTime *****************
  3206 ;; Defined at:
  3207 ;;		line 58 in file "ds1307.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  Hours           2   25[BANK0 ] unsigned int 
  3210 ;;  Mins            2   27[BANK0 ] unsigned int 
  3211 ;;  Secs            2   29[BANK0 ] unsigned int 
  3212 ;;  Mode            2   31[BANK0 ] unsigned int 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  Temp            4    5[BANK1 ] unsigned char [4]
  3215 ;;  result          1    4[BANK1 ] unsigned char 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;		None               void
  3218 ;; Registers used:
  3219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3225 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3226 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  3227 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;      Totals:         0       8       9       0       0       0       0       0       0       0       0       0       
      +0       0
  3229 ;;Total ram usage:       17 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    6
  3232 ;; This function calls:
  3233 ;;		_I2C1_WriteFrame
  3234 ;;		___lwdiv
  3235 ;;		___lwmod
  3236 ;; This function is called by:
  3237 ;;		_main
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _DS1307_SetTime
  3243  0266                     _DS1307_SetTime:	
  3244                           
  3245                           ;ds1307.c: 59: unsigned char Temp[4] = {0,0,0,0};
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _DS1307_SetTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3249  0266  0021               	movlb	1	; select bank1
  3250  0267  0830               	movf	(DS1307_SetTime@F2848+3)^(0+128),w
  3251  0268  00BD               	movwf	(DS1307_SetTime@Temp+3)^(0+128)
  3252  0269  082F               	movf	(DS1307_SetTime@F2848+2)^(0+128),w
  3253  026A  00BC               	movwf	(DS1307_SetTime@Temp+2)^(0+128)
  3254  026B  082E               	movf	(DS1307_SetTime@F2848+1)^(0+128),w
  3255  026C  00BB               	movwf	(DS1307_SetTime@Temp+1)^(0+128)
  3256  026D  082D               	movf	DS1307_SetTime@F2848^(0+128),w
  3257  026E  00BA               	movwf	DS1307_SetTime@Temp^(0+128)
  3258                           
  3259                           ;ds1307.c: 60: unsigned char result = 0;
  3260  026F  01B9               	clrf	DS1307_SetTime@result^(0+128)
  3261                           
  3262                           ;ds1307.c: 63: Temp[0] = 0x00;
  3263  0270  01BA               	clrf	DS1307_SetTime@Temp^(0+128)
  3264                           
  3265                           ;ds1307.c: 64: Temp[1] = 0x00 | (((unsigned char)(Secs/10))<<4)|((unsigned char)(Secs%10
      +                          ));
  3266  0271  300A               	movlw	10
  3267  0272  0020               	movlb	0	; select bank0
  3268  0273  00B1               	movwf	___lwmod@divisor
  3269  0274  3000               	movlw	0
  3270  0275  00B2               	movwf	___lwmod@divisor+1
  3271  0276  083E               	movf	DS1307_SetTime@Secs+1,w
  3272  0277  01B4               	clrf	___lwmod@dividend+1
  3273  0278  07B4               	addwf	___lwmod@dividend+1,f
  3274  0279  083D               	movf	DS1307_SetTime@Secs,w
  3275  027A  01B3               	clrf	___lwmod@dividend
  3276  027B  07B3               	addwf	___lwmod@dividend,f
  3277  027C  318C  2473  3182   	fcall	___lwmod
  3278  027F  0020               	movlb	0	; select bank0
  3279  0280  0831               	movf	?___lwmod,w
  3280  0281  0021               	movlb	1	; select bank1
  3281  0282  00B5               	movwf	??_DS1307_SetTime^(0+128)
  3282  0283  0020               	movlb	0	; select bank0
  3283  0284  0832               	movf	?___lwmod+1,w
  3284  0285  0021               	movlb	1	; select bank1
  3285  0286  00B6               	movwf	(??_DS1307_SetTime^(0+128)+1)
  3286  0287  300A               	movlw	10
  3287  0288  0020               	movlb	0	; select bank0
  3288  0289  00B1               	movwf	___lwdiv@divisor
  3289  028A  3000               	movlw	0
  3290  028B  00B2               	movwf	___lwdiv@divisor+1
  3291  028C  083E               	movf	DS1307_SetTime@Secs+1,w
  3292  028D  01B4               	clrf	___lwdiv@dividend+1
  3293  028E  07B4               	addwf	___lwdiv@dividend+1,f
  3294  028F  083D               	movf	DS1307_SetTime@Secs,w
  3295  0290  01B3               	clrf	___lwdiv@dividend
  3296  0291  07B3               	addwf	___lwdiv@dividend,f
  3297  0292  318C  24A2  3182   	fcall	___lwdiv
  3298  0295  0020               	movlb	0	; select bank0
  3299  0296  0831               	movf	?___lwdiv,w
  3300  0297  0021               	movlb	1	; select bank1
  3301  0298  00B7               	movwf	(??_DS1307_SetTime+2)^(0+128)
  3302  0299  3003               	movlw	3
  3303  029A                     u4205:	
  3304  029A  35B7               	lslf	(??_DS1307_SetTime+2)^(0+128),f
  3305  029B  3EFF               	addlw	-1
  3306  029C  1D03               	skipz
  3307  029D  2A9A               	goto	u4205
  3308  029E  3537               	lslf	(??_DS1307_SetTime+2)^(0+128),w
  3309  029F  0435               	iorwf	??_DS1307_SetTime^(0+128),w
  3310  02A0  00B8               	movwf	(??_DS1307_SetTime+3)^(0+128)
  3311  02A1  0838               	movf	(??_DS1307_SetTime+3)^(0+128),w
  3312  02A2  00BB               	movwf	(DS1307_SetTime@Temp^(0+128)+1)
  3313                           
  3314                           ;ds1307.c: 65: Temp[2] = (((unsigned char)(Mins/10))<<4)|((unsigned char)(Mins%10));
  3315  02A3  300A               	movlw	10
  3316  02A4  0020               	movlb	0	; select bank0
  3317  02A5  00B1               	movwf	___lwmod@divisor
  3318  02A6  3000               	movlw	0
  3319  02A7  00B2               	movwf	___lwmod@divisor+1
  3320  02A8  083C               	movf	DS1307_SetTime@Mins+1,w
  3321  02A9  01B4               	clrf	___lwmod@dividend+1
  3322  02AA  07B4               	addwf	___lwmod@dividend+1,f
  3323  02AB  083B               	movf	DS1307_SetTime@Mins,w
  3324  02AC  01B3               	clrf	___lwmod@dividend
  3325  02AD  07B3               	addwf	___lwmod@dividend,f
  3326  02AE  318C  2473  3182   	fcall	___lwmod
  3327  02B1  0020               	movlb	0	; select bank0
  3328  02B2  0831               	movf	?___lwmod,w
  3329  02B3  0021               	movlb	1	; select bank1
  3330  02B4  00B5               	movwf	??_DS1307_SetTime^(0+128)
  3331  02B5  0020               	movlb	0	; select bank0
  3332  02B6  0832               	movf	?___lwmod+1,w
  3333  02B7  0021               	movlb	1	; select bank1
  3334  02B8  00B6               	movwf	(??_DS1307_SetTime^(0+128)+1)
  3335  02B9  300A               	movlw	10
  3336  02BA  0020               	movlb	0	; select bank0
  3337  02BB  00B1               	movwf	___lwdiv@divisor
  3338  02BC  3000               	movlw	0
  3339  02BD  00B2               	movwf	___lwdiv@divisor+1
  3340  02BE  083C               	movf	DS1307_SetTime@Mins+1,w
  3341  02BF  01B4               	clrf	___lwdiv@dividend+1
  3342  02C0  07B4               	addwf	___lwdiv@dividend+1,f
  3343  02C1  083B               	movf	DS1307_SetTime@Mins,w
  3344  02C2  01B3               	clrf	___lwdiv@dividend
  3345  02C3  07B3               	addwf	___lwdiv@dividend,f
  3346  02C4  318C  24A2  3182   	fcall	___lwdiv
  3347  02C7  0020               	movlb	0	; select bank0
  3348  02C8  0831               	movf	?___lwdiv,w
  3349  02C9  0021               	movlb	1	; select bank1
  3350  02CA  00B7               	movwf	(??_DS1307_SetTime+2)^(0+128)
  3351  02CB  3003               	movlw	3
  3352  02CC                     u4215:	
  3353  02CC  35B7               	lslf	(??_DS1307_SetTime+2)^(0+128),f
  3354  02CD  3EFF               	addlw	-1
  3355  02CE  1D03               	skipz
  3356  02CF  2ACC               	goto	u4215
  3357  02D0  3537               	lslf	(??_DS1307_SetTime+2)^(0+128),w
  3358  02D1  0435               	iorwf	??_DS1307_SetTime^(0+128),w
  3359  02D2  00B8               	movwf	(??_DS1307_SetTime+3)^(0+128)
  3360  02D3  0838               	movf	(??_DS1307_SetTime+3)^(0+128),w
  3361  02D4  00BC               	movwf	(DS1307_SetTime@Temp^(0+128)+2)
  3362                           
  3363                           ;ds1307.c: 66: Temp[3] = (((unsigned char)(Hours/10))<<4)|((unsigned char)(Hours%10));
  3364  02D5  300A               	movlw	10
  3365  02D6  0020               	movlb	0	; select bank0
  3366  02D7  00B1               	movwf	___lwmod@divisor
  3367  02D8  3000               	movlw	0
  3368  02D9  00B2               	movwf	___lwmod@divisor+1
  3369  02DA  083A               	movf	DS1307_SetTime@Hours+1,w
  3370  02DB  01B4               	clrf	___lwmod@dividend+1
  3371  02DC  07B4               	addwf	___lwmod@dividend+1,f
  3372  02DD  0839               	movf	DS1307_SetTime@Hours,w
  3373  02DE  01B3               	clrf	___lwmod@dividend
  3374  02DF  07B3               	addwf	___lwmod@dividend,f
  3375  02E0  318C  2473  3182   	fcall	___lwmod
  3376  02E3  0020               	movlb	0	; select bank0
  3377  02E4  0831               	movf	?___lwmod,w
  3378  02E5  0021               	movlb	1	; select bank1
  3379  02E6  00B5               	movwf	??_DS1307_SetTime^(0+128)
  3380  02E7  0020               	movlb	0	; select bank0
  3381  02E8  0832               	movf	?___lwmod+1,w
  3382  02E9  0021               	movlb	1	; select bank1
  3383  02EA  00B6               	movwf	(??_DS1307_SetTime^(0+128)+1)
  3384  02EB  300A               	movlw	10
  3385  02EC  0020               	movlb	0	; select bank0
  3386  02ED  00B1               	movwf	___lwdiv@divisor
  3387  02EE  3000               	movlw	0
  3388  02EF  00B2               	movwf	___lwdiv@divisor+1
  3389  02F0  083A               	movf	DS1307_SetTime@Hours+1,w
  3390  02F1  01B4               	clrf	___lwdiv@dividend+1
  3391  02F2  07B4               	addwf	___lwdiv@dividend+1,f
  3392  02F3  0839               	movf	DS1307_SetTime@Hours,w
  3393  02F4  01B3               	clrf	___lwdiv@dividend
  3394  02F5  07B3               	addwf	___lwdiv@dividend,f
  3395  02F6  318C  24A2  3182   	fcall	___lwdiv
  3396  02F9  0020               	movlb	0	; select bank0
  3397  02FA  0831               	movf	?___lwdiv,w
  3398  02FB  0021               	movlb	1	; select bank1
  3399  02FC  00B7               	movwf	(??_DS1307_SetTime+2)^(0+128)
  3400  02FD  3003               	movlw	3
  3401  02FE                     u4225:	
  3402  02FE  35B7               	lslf	(??_DS1307_SetTime+2)^(0+128),f
  3403  02FF  3EFF               	addlw	-1
  3404  0300  1D03               	skipz
  3405  0301  2AFE               	goto	u4225
  3406  0302  3537               	lslf	(??_DS1307_SetTime+2)^(0+128),w
  3407  0303  0435               	iorwf	??_DS1307_SetTime^(0+128),w
  3408  0304  00B8               	movwf	(??_DS1307_SetTime+3)^(0+128)
  3409  0305  0838               	movf	(??_DS1307_SetTime+3)^(0+128),w
  3410  0306  00BD               	movwf	(DS1307_SetTime@Temp^(0+128)+3)
  3411                           
  3412                           ;ds1307.c: 68: switch(Mode)
  3413  0307  2B11               	goto	l4104
  3414  0308                     l386:	
  3415                           ;ds1307.c: 69: {
  3416                           ;ds1307.c: 70: case 0: Temp[2] |= 0x40; break;
  3417                           
  3418  0308  0021               	movlb	1	; select bank1
  3419  0309  173C               	bsf	(DS1307_SetTime@Temp^(0+128)+2),6
  3420  030A  2B1F               	goto	l4106
  3421  030B                     l4100:	
  3422                           ;ds1307.c: 71: case 1: Temp[2] |= 0x60; break;
  3423                           
  3424  030B  3060               	movlw	96
  3425  030C  0021               	movlb	1	; select bank1
  3426  030D  00B5               	movwf	??_DS1307_SetTime^(0+128)
  3427  030E  0835               	movf	??_DS1307_SetTime^(0+128),w
  3428  030F  04BC               	iorwf	(DS1307_SetTime@Temp^(0+128)+2),f
  3429                           
  3430                           ;ds1307.c: 74: }
  3431                           
  3432                           ;ds1307.c: 73: default: break;
  3433  0310  2B1F               	goto	l4106
  3434  0311                     l4104:	
  3435                           
  3436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3437                           ; Switch size 1, requested type "space"
  3438                           ; Number of cases is 1, Range of values is 0 to 0
  3439                           ; switch strategies available:
  3440                           ; Name         Instructions Cycles
  3441                           ; simple_byte            4     3 (average)
  3442                           ; direct_byte            8     6 (fixed)
  3443                           ; jumptable            260     6 (fixed)
  3444                           ;	Chosen strategy is simple_byte
  3445  0311  0020               	movlb	0	; select bank0
  3446  0312  0840               	movf	DS1307_SetTime@Mode+1,w
  3447  0313  3A00               	xorlw	0	; case 0
  3448  0314  1903               	skipnz
  3449  0315  2B17               	goto	l4768
  3450  0316  2B1F               	goto	l4106
  3451  0317                     l4768:	
  3452                           
  3453                           ; Switch size 1, requested type "space"
  3454                           ; Number of cases is 2, Range of values is 0 to 1
  3455                           ; switch strategies available:
  3456                           ; Name         Instructions Cycles
  3457                           ; simple_byte            7     4 (average)
  3458                           ; direct_byte           10     6 (fixed)
  3459                           ; jumptable            260     6 (fixed)
  3460                           ;	Chosen strategy is simple_byte
  3461  0317  083F               	movf	DS1307_SetTime@Mode,w
  3462  0318  3A00               	xorlw	0	; case 0
  3463  0319  1903               	skipnz
  3464  031A  2B08               	goto	l386
  3465  031B  3A01               	xorlw	1	; case 1
  3466  031C  1903               	skipnz
  3467  031D  2B0B               	goto	l4100
  3468  031E  2B1F               	goto	l4106
  3469  031F                     l4106:	
  3470                           
  3471                           ;ds1307.c: 76: result = I2C1_WriteFrame(0xD0, Temp, 4);
  3472  031F  30BA               	movlw	DS1307_SetTime@Temp& (0+255)
  3473  0320  0021               	movlb	1	; select bank1
  3474  0321  00B5               	movwf	??_DS1307_SetTime^(0+128)
  3475  0322  0835               	movf	??_DS1307_SetTime^(0+128),w
  3476  0323  0020               	movlb	0	; select bank0
  3477  0324  00B1               	movwf	I2C1_WriteFrame@i2c1WritePointer
  3478  0325  3004               	movlw	4
  3479  0326  0021               	movlb	1	; select bank1
  3480  0327  00B6               	movwf	(??_DS1307_SetTime+1)^(0+128)
  3481  0328  0836               	movf	(??_DS1307_SetTime+1)^(0+128),w
  3482  0329  0020               	movlb	0	; select bank0
  3483  032A  00B2               	movwf	I2C1_WriteFrame@i2c1FrameLength
  3484  032B  30D0               	movlw	208
  3485  032C  318E  266F         	fcall	_I2C1_WriteFrame
  3486  032E  0021               	movlb	1	; select bank1
  3487  032F  00B7               	movwf	(??_DS1307_SetTime+2)^(0+128)
  3488  0330  0837               	movf	(??_DS1307_SetTime+2)^(0+128),w
  3489  0331  00B9               	movwf	DS1307_SetTime@result^(0+128)
  3490  0332  0008               	return
  3491  0333                     __end_of_DS1307_SetTime:	
  3492                           
  3493                           	psect	text10
  3494  0C73                     __ptext10:	
  3495 ;; *************** function ___lwmod *****************
  3496 ;; Defined at:
  3497 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  divisor         2   17[BANK0 ] unsigned int 
  3500 ;;  dividend        2   19[BANK0 ] unsigned int 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  counter         1   22[BANK0 ] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2   17[BANK0 ] unsigned int 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3514 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;Total ram usage:        6 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    5
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_DS1307_SetTime
  3523 ;;		_DS1307_encodeTime
  3524 ;;		_DS1307_SetDate
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function ___lwmod
  3530  0C73                     ___lwmod:	
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3534  0C73  0020               	movlb	0	; select bank0
  3535  0C74  0832               	movf	___lwmod@divisor+1,w
  3536  0C75  0431               	iorwf	___lwmod@divisor,w
  3537  0C76  1903               	skipnz
  3538  0C77  2C9B               	goto	l4514
  3539  0C78  01B6               	clrf	___lwmod@counter
  3540  0C79  0AB6               	incf	___lwmod@counter,f
  3541  0C7A                     l4504:	
  3542  0C7A  1BB2               	btfsc	___lwmod@divisor+1,7
  3543  0C7B  2C86               	goto	l4506
  3544  0C7C  3001               	movlw	1
  3545  0C7D                     u5165:	
  3546  0C7D  35B1               	lslf	___lwmod@divisor,f
  3547  0C7E  0DB2               	rlf	___lwmod@divisor+1,f
  3548  0C7F  0B89               	decfsz	9,f
  3549  0C80  2C7D               	goto	u5165
  3550  0C81  3001               	movlw	1
  3551  0C82  00B5               	movwf	??___lwmod
  3552  0C83  0835               	movf	??___lwmod,w
  3553  0C84  07B6               	addwf	___lwmod@counter,f
  3554  0C85  2C7A               	goto	l4504
  3555  0C86                     l4506:	
  3556  0C86  0832               	movf	___lwmod@divisor+1,w
  3557  0C87  0234               	subwf	___lwmod@dividend+1,w
  3558  0C88  1D03               	skipz
  3559  0C89  2C8C               	goto	u5185
  3560  0C8A  0831               	movf	___lwmod@divisor,w
  3561  0C8B  0233               	subwf	___lwmod@dividend,w
  3562  0C8C                     u5185:	
  3563  0C8C  1C03               	skipc
  3564  0C8D  2C92               	goto	l4510
  3565  0C8E  0831               	movf	___lwmod@divisor,w
  3566  0C8F  02B3               	subwf	___lwmod@dividend,f
  3567  0C90  0832               	movf	___lwmod@divisor+1,w
  3568  0C91  3BB4               	subwfb	___lwmod@dividend+1,f
  3569  0C92                     l4510:	
  3570  0C92  3001               	movlw	1
  3571  0C93                     u5195:	
  3572  0C93  36B2               	lsrf	___lwmod@divisor+1,f
  3573  0C94  0CB1               	rrf	___lwmod@divisor,f
  3574  0C95  0B89               	decfsz	9,f
  3575  0C96  2C93               	goto	u5195
  3576  0C97  3001               	movlw	1
  3577  0C98  02B6               	subwf	___lwmod@counter,f
  3578  0C99  1D03               	btfss	3,2
  3579  0C9A  2C86               	goto	l4506
  3580  0C9B                     l4514:	
  3581  0C9B  0834               	movf	___lwmod@dividend+1,w
  3582  0C9C  01B2               	clrf	?___lwmod+1
  3583  0C9D  07B2               	addwf	?___lwmod+1,f
  3584  0C9E  0833               	movf	___lwmod@dividend,w
  3585  0C9F  01B1               	clrf	?___lwmod
  3586  0CA0  07B1               	addwf	?___lwmod,f
  3587  0CA1  0008               	return
  3588  0CA2                     __end_of___lwmod:	
  3589                           
  3590                           	psect	text11
  3591  0CA2                     __ptext11:	
  3592 ;; *************** function ___lwdiv *****************
  3593 ;; Defined at:
  3594 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  divisor         2   17[BANK0 ] unsigned int 
  3597 ;;  dividend        2   19[BANK0 ] unsigned int 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  quotient        2   23[BANK0 ] unsigned int 
  3600 ;;  counter         1   22[BANK0 ] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2   17[BANK0 ] unsigned int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3610 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3611 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;Total ram usage:        8 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:    5
  3617 ;; This function calls:
  3618 ;;		Nothing
  3619 ;; This function is called by:
  3620 ;;		_DS1307_SetTime
  3621 ;;		_DS1307_encodeTime
  3622 ;;		_DS1307_SetDate
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           
  3627                           ;psect for function ___lwdiv
  3628  0CA2                     ___lwdiv:	
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3632  0CA2  0020               	movlb	0	; select bank0
  3633  0CA3  01B7               	clrf	___lwdiv@quotient
  3634  0CA4  01B8               	clrf	___lwdiv@quotient+1
  3635  0CA5  0832               	movf	___lwdiv@divisor+1,w
  3636  0CA6  0431               	iorwf	___lwdiv@divisor,w
  3637  0CA7  1903               	skipnz
  3638  0CA8  2CD2               	goto	l4492
  3639  0CA9  01B6               	clrf	___lwdiv@counter
  3640  0CAA  0AB6               	incf	___lwdiv@counter,f
  3641  0CAB                     l4480:	
  3642  0CAB  1BB2               	btfsc	___lwdiv@divisor+1,7
  3643  0CAC  2CB7               	goto	l4482
  3644  0CAD  3001               	movlw	1
  3645  0CAE                     u5095:	
  3646  0CAE  35B1               	lslf	___lwdiv@divisor,f
  3647  0CAF  0DB2               	rlf	___lwdiv@divisor+1,f
  3648  0CB0  0B89               	decfsz	9,f
  3649  0CB1  2CAE               	goto	u5095
  3650  0CB2  3001               	movlw	1
  3651  0CB3  00B5               	movwf	??___lwdiv
  3652  0CB4  0835               	movf	??___lwdiv,w
  3653  0CB5  07B6               	addwf	___lwdiv@counter,f
  3654  0CB6  2CAB               	goto	l4480
  3655  0CB7                     l4482:	
  3656  0CB7  3001               	movlw	1
  3657  0CB8                     u5115:	
  3658  0CB8  35B7               	lslf	___lwdiv@quotient,f
  3659  0CB9  0DB8               	rlf	___lwdiv@quotient+1,f
  3660  0CBA  0B89               	decfsz	9,f
  3661  0CBB  2CB8               	goto	u5115
  3662  0CBC  0832               	movf	___lwdiv@divisor+1,w
  3663  0CBD  0234               	subwf	___lwdiv@dividend+1,w
  3664  0CBE  1D03               	skipz
  3665  0CBF  2CC2               	goto	u5125
  3666  0CC0  0831               	movf	___lwdiv@divisor,w
  3667  0CC1  0233               	subwf	___lwdiv@dividend,w
  3668  0CC2                     u5125:	
  3669  0CC2  1C03               	skipc
  3670  0CC3  2CC9               	goto	l4488
  3671  0CC4  0831               	movf	___lwdiv@divisor,w
  3672  0CC5  02B3               	subwf	___lwdiv@dividend,f
  3673  0CC6  0832               	movf	___lwdiv@divisor+1,w
  3674  0CC7  3BB4               	subwfb	___lwdiv@dividend+1,f
  3675  0CC8  1437               	bsf	___lwdiv@quotient,0
  3676  0CC9                     l4488:	
  3677  0CC9  3001               	movlw	1
  3678  0CCA                     u5135:	
  3679  0CCA  36B2               	lsrf	___lwdiv@divisor+1,f
  3680  0CCB  0CB1               	rrf	___lwdiv@divisor,f
  3681  0CCC  0B89               	decfsz	9,f
  3682  0CCD  2CCA               	goto	u5135
  3683  0CCE  3001               	movlw	1
  3684  0CCF  02B6               	subwf	___lwdiv@counter,f
  3685  0CD0  1D03               	btfss	3,2
  3686  0CD1  2CB7               	goto	l4482
  3687  0CD2                     l4492:	
  3688  0CD2  0838               	movf	___lwdiv@quotient+1,w
  3689  0CD3  01B2               	clrf	?___lwdiv+1
  3690  0CD4  07B2               	addwf	?___lwdiv+1,f
  3691  0CD5  0837               	movf	___lwdiv@quotient,w
  3692  0CD6  01B1               	clrf	?___lwdiv
  3693  0CD7  07B1               	addwf	?___lwdiv,f
  3694  0CD8  0008               	return
  3695  0CD9                     __end_of___lwdiv:	
  3696                           
  3697                           	psect	text12
  3698  0E6F                     __ptext12:	
  3699 ;; *************** function _I2C1_WriteFrame *****************
  3700 ;; Defined at:
  3701 ;;		line 217 in file "i2cbysk.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  i2c1SlaveAdd    1    wreg     unsigned char 
  3704 ;;  i2c1WritePoi    1   17[BANK0 ] PTR unsigned char 
  3705 ;;		 -> DS1307_SetDate@Temp(5), DS1307_SetTime@Temp(4), 
  3706 ;;  i2c1FrameLen    1   18[BANK0 ] unsigned char 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  i2c1SlaveAdd    1   20[BANK0 ] unsigned char 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      unsigned char 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3718 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;Total ram usage:        4 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    5
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_DS1307_SetTime
  3729 ;;		_DS1307_SetDate
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _I2C1_WriteFrame
  3735  0E6F                     _I2C1_WriteFrame:	
  3736                           
  3737                           ;incstack = 0
  3738                           ; Regs used in _I2C1_WriteFrame: [wreg+fsr1l+fsr1h+status,2+status,0]
  3739                           ;I2C1_WriteFrame@i2c1SlaveAddress stored from wreg
  3740  0E6F  0020               	movlb	0	; select bank0
  3741  0E70  00B4               	movwf	I2C1_WriteFrame@i2c1SlaveAddress
  3742                           
  3743                           ;i2cbysk.c: 219: if (SSP1STATbits.S)
  3744  0E71  0024               	movlb	4	; select bank4
  3745  0E72  1D94               	btfss	20,3	;volatile
  3746  0E73  2E76               	goto	l299
  3747                           
  3748                           ;i2cbysk.c: 220: {
  3749                           ;i2cbysk.c: 221: return I2C1_BUS_BUSY;
  3750  0E74  3003               	movlw	3
  3751  0E75  0008               	return
  3752  0E76                     l299:	
  3753                           
  3754                           ;i2cbysk.c: 222: }
  3755                           ;i2cbysk.c: 225: SSP1CON2bits.SEN = 1;
  3756  0E76  1416               	bsf	22,0	;volatile
  3757  0E77                     l301:	
  3758                           ;i2cbysk.c: 227: {
  3759                           
  3760                           ;i2cbysk.c: 226: while (SSP1CON2bits.SEN)
  3761                           
  3762  0E77  1816               	btfsc	22,0	;volatile
  3763  0E78  2E77               	goto	l301
  3764                           
  3765                           ;i2cbysk.c: 228: }
  3766                           ;i2cbysk.c: 231: if (PIR2bits.BCL1IF)
  3767  0E79  0020               	movlb	0	; select bank0
  3768  0E7A  1D92               	btfss	18,3	;volatile
  3769  0E7B  2E7F               	goto	l4232
  3770                           
  3771                           ;i2cbysk.c: 232: {
  3772                           ;i2cbysk.c: 233: PIR2bits.BCL1IF = 0;
  3773  0E7C  1192               	bcf	18,3	;volatile
  3774                           
  3775                           ;i2cbysk.c: 234: return I2C1_BUS_COLLISION;
  3776  0E7D  3002               	movlw	2
  3777  0E7E  0008               	return
  3778  0E7F                     l4232:	
  3779                           
  3780                           ;i2cbysk.c: 235: }
  3781                           ;i2cbysk.c: 238: SSP1BUF = i2c1SlaveAddress;
  3782  0E7F  0834               	movf	I2C1_WriteFrame@i2c1SlaveAddress,w
  3783  0E80  0024               	movlb	4	; select bank4
  3784  0E81  0091               	movwf	17	;volatile
  3785  0E82                     l305:	
  3786                           ;i2cbysk.c: 240: {
  3787                           
  3788                           ;i2cbysk.c: 239: while (SSP1STATbits.BF || SSP1STATbits.R_nW)
  3789                           
  3790  0E82  1C14               	btfss	20,0	;volatile
  3791  0E83  1914               	btfsc	20,2	;volatile
  3792  0E84  2E82               	goto	l305
  3793                           
  3794                           ;i2cbysk.c: 241: }
  3795                           ;i2cbysk.c: 244: if (SSP1CON2bits.ACKSTAT )
  3796  0E85  1F16               	btfss	22,6	;volatile
  3797  0E86  2EAB               	goto	l4262
  3798                           
  3799                           ;i2cbysk.c: 245: {
  3800                           ;i2cbysk.c: 246: SSP1CON2bits.PEN = 1;
  3801  0E87  1516               	bsf	22,2	;volatile
  3802  0E88                     l309:	
  3803                           ;i2cbysk.c: 248: {
  3804                           
  3805                           ;i2cbysk.c: 247: while (SSP1CON2bits.PEN)
  3806                           
  3807  0E88  1916               	btfsc	22,2	;volatile
  3808  0E89  2E88               	goto	l309
  3809                           
  3810                           ;i2cbysk.c: 249: }
  3811                           ;i2cbysk.c: 250: return I2C1_ACK_NOT_RECEIVED;
  3812  0E8A  3000               	movlw	0
  3813  0E8B  0008               	return
  3814  0E8C                     l4242:	
  3815                           ;i2cbysk.c: 251: }
  3816                           ;i2cbysk.c: 253: while (i2c1FrameLength)
  3817                           
  3818                           
  3819                           ;i2cbysk.c: 254: {
  3820                           ;i2cbysk.c: 256: SSP1BUF = *i2c1WritePointer++;
  3821  0E8C  0020               	movlb	0	; select bank0
  3822  0E8D  0831               	movf	I2C1_WriteFrame@i2c1WritePointer,w
  3823  0E8E  0086               	movwf	6
  3824  0E8F  0187               	clrf	7
  3825  0E90  0801               	movf	1,w
  3826  0E91  0024               	movlb	4	; select bank4
  3827  0E92  0091               	movwf	17	;volatile
  3828  0E93  3001               	movlw	1
  3829  0E94  0020               	movlb	0	; select bank0
  3830  0E95  00B3               	movwf	??_I2C1_WriteFrame
  3831  0E96  0833               	movf	??_I2C1_WriteFrame,w
  3832  0E97  07B1               	addwf	I2C1_WriteFrame@i2c1WritePointer,f
  3833  0E98                     l314:	
  3834                           ;i2cbysk.c: 258: {
  3835                           
  3836                           ;i2cbysk.c: 257: while (SSP1STATbits.BF || SSP1STATbits.R_nW)
  3837                           
  3838  0E98  0024               	movlb	4	; select bank4
  3839  0E99  1C14               	btfss	20,0	;volatile
  3840  0E9A  1914               	btfsc	20,2	;volatile
  3841  0E9B  2E98               	goto	l314
  3842                           
  3843                           ;i2cbysk.c: 259: }
  3844                           ;i2cbysk.c: 262: if ( SSP1CON2bits.ACKSTAT )
  3845  0E9C  1F16               	btfss	22,6	;volatile
  3846  0E9D  2EA3               	goto	l317
  3847                           
  3848                           ;i2cbysk.c: 263: {
  3849                           ;i2cbysk.c: 264: SSP1CON2bits.PEN = 1;
  3850  0E9E  1516               	bsf	22,2	;volatile
  3851  0E9F                     l318:	
  3852                           ;i2cbysk.c: 266: {
  3853                           
  3854                           ;i2cbysk.c: 265: while (SSP1CON2bits.PEN)
  3855                           
  3856  0E9F  1916               	btfsc	22,2	;volatile
  3857  0EA0  2E9F               	goto	l318
  3858                           
  3859                           ;i2cbysk.c: 267: }
  3860                           ;i2cbysk.c: 268: return I2C1_ACK_NOT_RECEIVED;
  3861  0EA1  3000               	movlw	0
  3862  0EA2  0008               	return
  3863  0EA3                     l317:	
  3864                           
  3865                           ;i2cbysk.c: 269: }
  3866                           ;i2cbysk.c: 272: if (PIR2bits.BCL1IF)
  3867  0EA3  0020               	movlb	0	; select bank0
  3868  0EA4  1D92               	btfss	18,3	;volatile
  3869  0EA5  2EA9               	goto	l4260
  3870                           
  3871                           ;i2cbysk.c: 273: {
  3872                           ;i2cbysk.c: 274: PIR2bits.BCL1IF = 0;
  3873  0EA6  1192               	bcf	18,3	;volatile
  3874                           
  3875                           ;i2cbysk.c: 275: return I2C1_BUS_COLLISION;
  3876  0EA7  3002               	movlw	2
  3877  0EA8  0008               	return
  3878  0EA9                     l4260:	
  3879                           
  3880                           ;i2cbysk.c: 276: }
  3881                           ;i2cbysk.c: 277: i2c1FrameLength-- ;
  3882  0EA9  3001               	movlw	1
  3883  0EAA  02B2               	subwf	I2C1_WriteFrame@i2c1FrameLength,f
  3884  0EAB                     l4262:	
  3885  0EAB  0020               	movlb	0	; select bank0
  3886  0EAC  08B2               	movf	I2C1_WriteFrame@i2c1FrameLength,f
  3887  0EAD  1D03               	skipz
  3888  0EAE  2E8C               	goto	l4242
  3889                           
  3890                           ;i2cbysk.c: 278: }
  3891                           ;i2cbysk.c: 281: SSP1CON2bits.PEN = 1;
  3892  0EAF  0024               	movlb	4	; select bank4
  3893  0EB0  1516               	bsf	22,2	;volatile
  3894  0EB1                     l323:	
  3895                           ;i2cbysk.c: 283: {
  3896                           
  3897                           ;i2cbysk.c: 282: while (SSP1CON2bits.PEN)
  3898                           
  3899  0EB1  1916               	btfsc	22,2	;volatile
  3900  0EB2  2EB1               	goto	l323
  3901                           
  3902                           ;i2cbysk.c: 284: }
  3903                           ;i2cbysk.c: 287: if(PIR2bits.BCL1IF)
  3904  0EB3  0020               	movlb	0	; select bank0
  3905  0EB4  1D92               	btfss	18,3	;volatile
  3906  0EB5  2EB9               	goto	l4270
  3907                           
  3908                           ;i2cbysk.c: 288: {
  3909                           ;i2cbysk.c: 289: PIR2bits.BCL1IF = 0;
  3910  0EB6  1192               	bcf	18,3	;volatile
  3911                           
  3912                           ;i2cbysk.c: 290: return I2C1_BUS_COLLISION;
  3913  0EB7  3002               	movlw	2
  3914  0EB8  0008               	return
  3915  0EB9                     l4270:	
  3916                           
  3917                           ;i2cbysk.c: 291: }
  3918                           ;i2cbysk.c: 292: return I2C1_SUCCESS;
  3919  0EB9  3001               	movlw	1
  3920  0EBA  0008               	return
  3921  0EBB                     __end_of_I2C1_WriteFrame:	
  3922                           
  3923                           	psect	text13
  3924  0183                     __ptext13:	
  3925 ;; *************** function _DS1307_ReadTime *****************
  3926 ;; Defined at:
  3927 ;;		line 80 in file "ds1307.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  SaveTimeTo      1    wreg     PTR volatile unsigned ch
  3930 ;;		 -> TimeArray(4), 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  SaveTimeTo      1    5[BANK1 ] PTR volatile unsigned ch
  3933 ;;		 -> TimeArray(4), 
  3934 ;;  TempI2CRead     4    1[BANK1 ] unsigned char [4]
  3935 ;;  Temp            1    6[BANK1 ] unsigned char 
  3936 ;;  result          1    0[BANK1 ] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;		None               void
  3939 ;; Registers used:
  3940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Totals:         0       4       7       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;Total ram usage:       11 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    9
  3953 ;; This function calls:
  3954 ;;		_Debug
  3955 ;;		_I2C1_ReadFrame
  3956 ;;		_I2C1_WriteByte
  3957 ;;		___bmul
  3958 ;; This function is called by:
  3959 ;;		_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           
  3964                           ;psect for function _DS1307_ReadTime
  3965  0183                     _DS1307_ReadTime:	
  3966                           
  3967                           ;incstack = 0
  3968                           ; Regs used in _DS1307_ReadTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3969                           ;DS1307_ReadTime@SaveTimeTo stored from wreg
  3970  0183  0021               	movlb	1	; select bank1
  3971  0184  00BA               	movwf	DS1307_ReadTime@SaveTimeTo^(0+128)
  3972                           
  3973                           ;ds1307.c: 81: unsigned char result = 0;
  3974  0185  01B5               	clrf	DS1307_ReadTime@result^(0+128)
  3975                           
  3976                           ;ds1307.c: 82: unsigned char TempI2CRead[4] = {0,0,0,0};
  3977  0186  082C               	movf	(DS1307_ReadTime@F2859+3)^(0+128),w
  3978  0187  00B9               	movwf	(DS1307_ReadTime@TempI2CRead+3)^(0+128)
  3979  0188  082B               	movf	(DS1307_ReadTime@F2859+2)^(0+128),w
  3980  0189  00B8               	movwf	(DS1307_ReadTime@TempI2CRead+2)^(0+128)
  3981  018A  082A               	movf	(DS1307_ReadTime@F2859+1)^(0+128),w
  3982  018B  00B7               	movwf	(DS1307_ReadTime@TempI2CRead+1)^(0+128)
  3983  018C  0829               	movf	DS1307_ReadTime@F2859^(0+128),w
  3984  018D  00B6               	movwf	DS1307_ReadTime@TempI2CRead^(0+128)
  3985                           
  3986                           ;ds1307.c: 84: if(!I2C1_WriteByte(0xD0, 0x00)) {
  3987  018E  0020               	movlb	0	; select bank0
  3988  018F  01B1               	clrf	I2C1_WriteByte@i2c1Data
  3989  0190  30D0               	movlw	208
  3990  0191  318C  24D9  3181   	fcall	_I2C1_WriteByte
  3991  0194  3800               	iorlw	0
  3992  0195  1D03               	skipz
  3993  0196  299B               	goto	l3976
  3994                           
  3995                           ;ds1307.c: 85: Debug((unsigned char *)"Reset 2 failed!");
  3996  0197  3014               	movlw	(STR_16| (0+32768))& (0+255)
  3997  0198  318C  2416  3181   	fcall	_Debug
  3998  019B                     l3976:	
  3999                           
  4000                           ;ds1307.c: 86: }
  4001                           ;ds1307.c: 87: result = I2C1_ReadFrame(0xD0, TempI2CRead, 3);
  4002  019B  30B6               	movlw	DS1307_ReadTime@TempI2CRead& (0+255)
  4003  019C  0020               	movlb	0	; select bank0
  4004  019D  00BE               	movwf	??_DS1307_ReadTime
  4005  019E  083E               	movf	??_DS1307_ReadTime,w
  4006  019F  00B1               	movwf	I2C1_ReadFrame@i2c1ReadPointer
  4007  01A0  3003               	movlw	3
  4008  01A1  00BF               	movwf	??_DS1307_ReadTime+1
  4009  01A2  083F               	movf	??_DS1307_ReadTime+1,w
  4010  01A3  00B2               	movwf	I2C1_ReadFrame@i2c1FrameLength
  4011  01A4  30D0               	movlw	208
  4012  01A5  3186  26C9  3181   	fcall	_I2C1_ReadFrame
  4013  01A8  0020               	movlb	0	; select bank0
  4014  01A9  00C0               	movwf	??_DS1307_ReadTime+2
  4015  01AA  0840               	movf	??_DS1307_ReadTime+2,w
  4016  01AB  0021               	movlb	1	; select bank1
  4017  01AC  00B5               	movwf	DS1307_ReadTime@result^(0+128)
  4018                           
  4019                           ;ds1307.c: 89: unsigned char Temp = 0;
  4020  01AD  01BB               	clrf	DS1307_ReadTime@Temp^(0+128)
  4021                           
  4022                           ;ds1307.c: 92: Temp = TempI2CRead[0];
  4023  01AE  0836               	movf	DS1307_ReadTime@TempI2CRead^(0+128),w
  4024  01AF  0020               	movlb	0	; select bank0
  4025  01B0  00BE               	movwf	??_DS1307_ReadTime
  4026  01B1  083E               	movf	??_DS1307_ReadTime,w
  4027  01B2  0021               	movlb	1	; select bank1
  4028  01B3  00BB               	movwf	DS1307_ReadTime@Temp^(0+128)
  4029                           
  4030                           ;ds1307.c: 93: SaveTimeTo[0] = ((Temp&0x7F)>>4)*10 + (Temp&0x0F);
  4031  01B4  300F               	movlw	15
  4032  01B5  053B               	andwf	DS1307_ReadTime@Temp^(0+128),w
  4033  01B6  0020               	movlb	0	; select bank0
  4034  01B7  00BE               	movwf	??_DS1307_ReadTime
  4035  01B8  300A               	movlw	10
  4036  01B9  00BF               	movwf	??_DS1307_ReadTime+1
  4037  01BA  083F               	movf	??_DS1307_ReadTime+1,w
  4038  01BB  00B1               	movwf	___bmul@multiplicand
  4039  01BC  0021               	movlb	1	; select bank1
  4040  01BD  083B               	movf	DS1307_ReadTime@Temp^(0+128),w
  4041  01BE  0020               	movlb	0	; select bank0
  4042  01BF  00C0               	movwf	??_DS1307_ReadTime+2
  4043  01C0  3004               	movlw	4
  4044  01C1                     u4075:	
  4045  01C1  36C0               	lsrf	??_DS1307_ReadTime+2,f
  4046  01C2  0B89               	decfsz	9,f
  4047  01C3  29C1               	goto	u4075
  4048  01C4  0840               	movf	??_DS1307_ReadTime+2,w
  4049  01C5  3907               	andlw	7
  4050  01C6  318C  2428  3181   	fcall	___bmul
  4051  01C9  0020               	movlb	0	; select bank0
  4052  01CA  073E               	addwf	??_DS1307_ReadTime,w
  4053  01CB  00C1               	movwf	??_DS1307_ReadTime+3
  4054  01CC  0021               	movlb	1	; select bank1
  4055  01CD  083A               	movf	DS1307_ReadTime@SaveTimeTo^(0+128),w
  4056  01CE  0086               	movwf	6
  4057  01CF  0187               	clrf	7
  4058  01D0  0020               	movlb	0	; select bank0
  4059  01D1  0841               	movf	??_DS1307_ReadTime+3,w
  4060  01D2  0081               	movwf	1
  4061                           
  4062                           ;ds1307.c: 96: Temp = TempI2CRead[1];
  4063  01D3  0021               	movlb	1	; select bank1
  4064  01D4  0837               	movf	(DS1307_ReadTime@TempI2CRead^(0+128)+1),w
  4065  01D5  0020               	movlb	0	; select bank0
  4066  01D6  00BE               	movwf	??_DS1307_ReadTime
  4067  01D7  083E               	movf	??_DS1307_ReadTime,w
  4068  01D8  0021               	movlb	1	; select bank1
  4069  01D9  00BB               	movwf	DS1307_ReadTime@Temp^(0+128)
  4070                           
  4071                           ;ds1307.c: 97: SaveTimeTo[1] = (Temp>>4)*10 + (Temp&0x0F);
  4072  01DA  300F               	movlw	15
  4073  01DB  053B               	andwf	DS1307_ReadTime@Temp^(0+128),w
  4074  01DC  0020               	movlb	0	; select bank0
  4075  01DD  00BE               	movwf	??_DS1307_ReadTime
  4076  01DE  300A               	movlw	10
  4077  01DF  00BF               	movwf	??_DS1307_ReadTime+1
  4078  01E0  083F               	movf	??_DS1307_ReadTime+1,w
  4079  01E1  00B1               	movwf	___bmul@multiplicand
  4080  01E2  0021               	movlb	1	; select bank1
  4081  01E3  083B               	movf	DS1307_ReadTime@Temp^(0+128),w
  4082  01E4  0020               	movlb	0	; select bank0
  4083  01E5  00C0               	movwf	??_DS1307_ReadTime+2
  4084  01E6  3004               	movlw	4
  4085  01E7                     u4085:	
  4086  01E7  36C0               	lsrf	??_DS1307_ReadTime+2,f
  4087  01E8  0B89               	decfsz	9,f
  4088  01E9  29E7               	goto	u4085
  4089  01EA  0840               	movf	??_DS1307_ReadTime+2,w
  4090  01EB  318C  2428  3181   	fcall	___bmul
  4091  01EE  0020               	movlb	0	; select bank0
  4092  01EF  073E               	addwf	??_DS1307_ReadTime,w
  4093  01F0  00C1               	movwf	??_DS1307_ReadTime+3
  4094  01F1  0021               	movlb	1	; select bank1
  4095  01F2  0A3A               	incf	DS1307_ReadTime@SaveTimeTo^(0+128),w
  4096  01F3  0086               	movwf	6
  4097  01F4  0187               	clrf	7
  4098  01F5  0020               	movlb	0	; select bank0
  4099  01F6  0841               	movf	??_DS1307_ReadTime+3,w
  4100  01F7  0081               	movwf	1
  4101                           
  4102                           ;ds1307.c: 100: if(TempI2CRead[2]&0x40)
  4103  01F8  0021               	movlb	1	; select bank1
  4104  01F9  1F38               	btfss	(DS1307_ReadTime@TempI2CRead^(0+128)+2),6
  4105  01FA  2A36               	goto	l4000
  4106                           
  4107                           ;ds1307.c: 101: {
  4108                           ;ds1307.c: 102: if(TempI2CRead[2]&0x20)
  4109  01FB  1EB8               	btfss	(DS1307_ReadTime@TempI2CRead^(0+128)+2),5
  4110  01FC  2A09               	goto	l3994
  4111                           
  4112                           ;ds1307.c: 103: SaveTimeTo[3] = 1;
  4113  01FD  3001               	movlw	1
  4114  01FE  0020               	movlb	0	; select bank0
  4115  01FF  00BE               	movwf	??_DS1307_ReadTime
  4116  0200  0021               	movlb	1	; select bank1
  4117  0201  083A               	movf	DS1307_ReadTime@SaveTimeTo^(0+128),w
  4118  0202  3E03               	addlw	3
  4119  0203  0086               	movwf	6
  4120  0204  0187               	clrf	7
  4121  0205  0020               	movlb	0	; select bank0
  4122  0206  083E               	movf	??_DS1307_ReadTime,w
  4123  0207  0081               	movwf	1
  4124  0208  2A0F               	goto	l3996
  4125  0209                     l3994:	
  4126                           
  4127                           ;ds1307.c: 104: else
  4128                           ;ds1307.c: 105: SaveTimeTo[3] = 0;
  4129  0209  0021               	movlb	1	; select bank1
  4130  020A  083A               	movf	DS1307_ReadTime@SaveTimeTo^(0+128),w
  4131  020B  3E03               	addlw	3
  4132  020C  0086               	movwf	6
  4133  020D  0187               	clrf	7
  4134  020E  0181               	clrf	1
  4135  020F                     l3996:	
  4136                           
  4137                           ;ds1307.c: 107: Temp = TempI2CRead[2];
  4138  020F  0021               	movlb	1	; select bank1
  4139  0210  0838               	movf	(DS1307_ReadTime@TempI2CRead^(0+128)+2),w
  4140  0211  0020               	movlb	0	; select bank0
  4141  0212  00BE               	movwf	??_DS1307_ReadTime
  4142  0213  083E               	movf	??_DS1307_ReadTime,w
  4143  0214  0021               	movlb	1	; select bank1
  4144  0215  00BB               	movwf	DS1307_ReadTime@Temp^(0+128)
  4145                           
  4146                           ;ds1307.c: 108: SaveTimeTo[2] = ((Temp&0x1F)>>4)*10 + (Temp&0x0F);
  4147  0216  300F               	movlw	15
  4148  0217  053B               	andwf	DS1307_ReadTime@Temp^(0+128),w
  4149  0218  0020               	movlb	0	; select bank0
  4150  0219  00BE               	movwf	??_DS1307_ReadTime
  4151  021A  300A               	movlw	10
  4152  021B  00BF               	movwf	??_DS1307_ReadTime+1
  4153  021C  083F               	movf	??_DS1307_ReadTime+1,w
  4154  021D  00B1               	movwf	___bmul@multiplicand
  4155  021E  0021               	movlb	1	; select bank1
  4156  021F  083B               	movf	DS1307_ReadTime@Temp^(0+128),w
  4157  0220  0020               	movlb	0	; select bank0
  4158  0221  00C0               	movwf	??_DS1307_ReadTime+2
  4159  0222  3004               	movlw	4
  4160  0223                     u4115:	
  4161  0223  36C0               	lsrf	??_DS1307_ReadTime+2,f
  4162  0224  0B89               	decfsz	9,f
  4163  0225  2A23               	goto	u4115
  4164  0226  0840               	movf	??_DS1307_ReadTime+2,w
  4165  0227  3901               	andlw	1
  4166  0228  318C  2428         	fcall	___bmul
  4167  022A  0020               	movlb	0	; select bank0
  4168  022B  073E               	addwf	??_DS1307_ReadTime,w
  4169  022C  00C1               	movwf	??_DS1307_ReadTime+3
  4170  022D  0021               	movlb	1	; select bank1
  4171  022E  083A               	movf	DS1307_ReadTime@SaveTimeTo^(0+128),w
  4172  022F  3E02               	addlw	2
  4173  0230  0086               	movwf	6
  4174  0231  0187               	clrf	7
  4175  0232  0020               	movlb	0	; select bank0
  4176  0233  0841               	movf	??_DS1307_ReadTime+3,w
  4177  0234  0081               	movwf	1
  4178                           
  4179                           ;ds1307.c: 109: }
  4180  0235  0008               	return
  4181  0236                     l4000:	
  4182                           
  4183                           ;ds1307.c: 110: else
  4184                           ;ds1307.c: 111: {
  4185                           ;ds1307.c: 112: Temp = TempI2CRead[2];
  4186  0236  0021               	movlb	1	; select bank1
  4187  0237  0838               	movf	(DS1307_ReadTime@TempI2CRead^(0+128)+2),w
  4188  0238  0020               	movlb	0	; select bank0
  4189  0239  00BE               	movwf	??_DS1307_ReadTime
  4190  023A  083E               	movf	??_DS1307_ReadTime,w
  4191  023B  0021               	movlb	1	; select bank1
  4192  023C  00BB               	movwf	DS1307_ReadTime@Temp^(0+128)
  4193                           
  4194                           ;ds1307.c: 113: SaveTimeTo[2] = (Temp>>4)*10 + (Temp&0x0F);
  4195  023D  300F               	movlw	15
  4196  023E  053B               	andwf	DS1307_ReadTime@Temp^(0+128),w
  4197  023F  0020               	movlb	0	; select bank0
  4198  0240  00BE               	movwf	??_DS1307_ReadTime
  4199  0241  300A               	movlw	10
  4200  0242  00BF               	movwf	??_DS1307_ReadTime+1
  4201  0243  083F               	movf	??_DS1307_ReadTime+1,w
  4202  0244  00B1               	movwf	___bmul@multiplicand
  4203  0245  0021               	movlb	1	; select bank1
  4204  0246  083B               	movf	DS1307_ReadTime@Temp^(0+128),w
  4205  0247  0020               	movlb	0	; select bank0
  4206  0248  00C0               	movwf	??_DS1307_ReadTime+2
  4207  0249  3004               	movlw	4
  4208  024A                     u4125:	
  4209  024A  36C0               	lsrf	??_DS1307_ReadTime+2,f
  4210  024B  0B89               	decfsz	9,f
  4211  024C  2A4A               	goto	u4125
  4212  024D  0840               	movf	??_DS1307_ReadTime+2,w
  4213  024E  318C  2428         	fcall	___bmul
  4214  0250  0020               	movlb	0	; select bank0
  4215  0251  073E               	addwf	??_DS1307_ReadTime,w
  4216  0252  00C1               	movwf	??_DS1307_ReadTime+3
  4217  0253  0021               	movlb	1	; select bank1
  4218  0254  083A               	movf	DS1307_ReadTime@SaveTimeTo^(0+128),w
  4219  0255  3E02               	addlw	2
  4220  0256  0086               	movwf	6
  4221  0257  0187               	clrf	7
  4222  0258  0020               	movlb	0	; select bank0
  4223  0259  0841               	movf	??_DS1307_ReadTime+3,w
  4224  025A  0081               	movwf	1
  4225                           
  4226                           ;ds1307.c: 114: SaveTimeTo[3] = 2;
  4227  025B  3002               	movlw	2
  4228  025C  00BE               	movwf	??_DS1307_ReadTime
  4229  025D  0021               	movlb	1	; select bank1
  4230  025E  083A               	movf	DS1307_ReadTime@SaveTimeTo^(0+128),w
  4231  025F  3E03               	addlw	3
  4232  0260  0086               	movwf	6
  4233  0261  0187               	clrf	7
  4234  0262  0020               	movlb	0	; select bank0
  4235  0263  083E               	movf	??_DS1307_ReadTime,w
  4236  0264  0081               	movwf	1
  4237  0265  0008               	return
  4238  0266                     __end_of_DS1307_ReadTime:	
  4239                           
  4240                           	psect	text14
  4241  03E8                     __ptext14:	
  4242 ;; *************** function _DS1307_ReadDate *****************
  4243 ;; Defined at:
  4244 ;;		line 134 in file "ds1307.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  SaveDateTo      1    wreg     PTR volatile unsigned ch
  4247 ;;		 -> DateArray(5), 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  SaveDateTo      1    5[BANK1 ] PTR volatile unsigned ch
  4250 ;;		 -> DateArray(5), 
  4251 ;;  TempI2CRead     4    1[BANK1 ] unsigned char [4]
  4252 ;;  Temp            1    6[BANK1 ] unsigned char 
  4253 ;;  result          1    0[BANK1 ] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;		None               void
  4256 ;; Registers used:
  4257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;      Totals:         0       4       7       0       0       0       0       0       0       0       0       0       
      +0       0
  4267 ;;Total ram usage:       11 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    9
  4270 ;; This function calls:
  4271 ;;		_Debug
  4272 ;;		_I2C1_ReadFrame
  4273 ;;		_I2C1_WriteByte
  4274 ;;		___bmul
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _DS1307_ReadDate
  4282  03E8                     _DS1307_ReadDate:	
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _DS1307_ReadDate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4286                           ;DS1307_ReadDate@SaveDateTo stored from wreg
  4287  03E8  0021               	movlb	1	; select bank1
  4288  03E9  00BA               	movwf	DS1307_ReadDate@SaveDateTo^(0+128)
  4289                           
  4290                           ;ds1307.c: 135: unsigned char result = 0;
  4291  03EA  01B5               	clrf	DS1307_ReadDate@result^(0+128)
  4292                           
  4293                           ;ds1307.c: 136: unsigned char TempI2CRead[4] = {0,0,0,0};
  4294  03EB  0828               	movf	(DS1307_ReadDate@F2872+3)^(0+128),w
  4295  03EC  00B9               	movwf	(DS1307_ReadDate@TempI2CRead+3)^(0+128)
  4296  03ED  0827               	movf	(DS1307_ReadDate@F2872+2)^(0+128),w
  4297  03EE  00B8               	movwf	(DS1307_ReadDate@TempI2CRead+2)^(0+128)
  4298  03EF  0826               	movf	(DS1307_ReadDate@F2872+1)^(0+128),w
  4299  03F0  00B7               	movwf	(DS1307_ReadDate@TempI2CRead+1)^(0+128)
  4300  03F1  0825               	movf	DS1307_ReadDate@F2872^(0+128),w
  4301  03F2  00B6               	movwf	DS1307_ReadDate@TempI2CRead^(0+128)
  4302                           
  4303                           ;ds1307.c: 138: if(!I2C1_WriteByte(0xD0, 0x03)) {
  4304  03F3  3003               	movlw	3
  4305  03F4  0020               	movlb	0	; select bank0
  4306  03F5  00BE               	movwf	??_DS1307_ReadDate
  4307  03F6  083E               	movf	??_DS1307_ReadDate,w
  4308  03F7  00B1               	movwf	I2C1_WriteByte@i2c1Data
  4309  03F8  30D0               	movlw	208
  4310  03F9  318C  24D9  3183   	fcall	_I2C1_WriteByte
  4311  03FC  3800               	iorlw	0
  4312  03FD  1D03               	skipz
  4313  03FE  2C03               	goto	l4014
  4314                           
  4315                           ;ds1307.c: 139: Debug((unsigned char *)"Reset 2 failed!");
  4316  03FF  3014               	movlw	(STR_16| (0+32768))& (0+255)
  4317  0400  318C  2416  3183   	fcall	_Debug
  4318  0403                     l4014:	
  4319                           
  4320                           ;ds1307.c: 140: }
  4321                           ;ds1307.c: 141: result = I2C1_ReadFrame(0xD0, TempI2CRead, 4);
  4322  0403  30B6               	movlw	DS1307_ReadDate@TempI2CRead& (0+255)
  4323  0404  0020               	movlb	0	; select bank0
  4324  0405  00BE               	movwf	??_DS1307_ReadDate
  4325  0406  083E               	movf	??_DS1307_ReadDate,w
  4326  0407  00B1               	movwf	I2C1_ReadFrame@i2c1ReadPointer
  4327  0408  3004               	movlw	4
  4328  0409  00BF               	movwf	??_DS1307_ReadDate+1
  4329  040A  083F               	movf	??_DS1307_ReadDate+1,w
  4330  040B  00B2               	movwf	I2C1_ReadFrame@i2c1FrameLength
  4331  040C  30D0               	movlw	208
  4332  040D  3186  26C9  3183   	fcall	_I2C1_ReadFrame
  4333  0410  0020               	movlb	0	; select bank0
  4334  0411  00C0               	movwf	??_DS1307_ReadDate+2
  4335  0412  0840               	movf	??_DS1307_ReadDate+2,w
  4336  0413  0021               	movlb	1	; select bank1
  4337  0414  00B5               	movwf	DS1307_ReadDate@result^(0+128)
  4338                           
  4339                           ;ds1307.c: 143: unsigned char Temp = 0;
  4340  0415  01BB               	clrf	DS1307_ReadDate@Temp^(0+128)
  4341                           
  4342                           ;ds1307.c: 146: Temp = TempI2CRead[0];
  4343  0416  0836               	movf	DS1307_ReadDate@TempI2CRead^(0+128),w
  4344  0417  0020               	movlb	0	; select bank0
  4345  0418  00BE               	movwf	??_DS1307_ReadDate
  4346  0419  083E               	movf	??_DS1307_ReadDate,w
  4347  041A  0021               	movlb	1	; select bank1
  4348  041B  00BB               	movwf	DS1307_ReadDate@Temp^(0+128)
  4349                           
  4350                           ;ds1307.c: 147: SaveDateTo[0] = (Temp & 0x7);
  4351  041C  083B               	movf	DS1307_ReadDate@Temp^(0+128),w
  4352  041D  3907               	andlw	7
  4353  041E  0020               	movlb	0	; select bank0
  4354  041F  00BE               	movwf	??_DS1307_ReadDate
  4355  0420  0021               	movlb	1	; select bank1
  4356  0421  083A               	movf	DS1307_ReadDate@SaveDateTo^(0+128),w
  4357  0422  0086               	movwf	6
  4358  0423  0187               	clrf	7
  4359  0424  0020               	movlb	0	; select bank0
  4360  0425  083E               	movf	??_DS1307_ReadDate,w
  4361  0426  0081               	movwf	1
  4362                           
  4363                           ;ds1307.c: 150: Temp = TempI2CRead[1];
  4364  0427  0021               	movlb	1	; select bank1
  4365  0428  0837               	movf	(DS1307_ReadDate@TempI2CRead^(0+128)+1),w
  4366  0429  0020               	movlb	0	; select bank0
  4367  042A  00BE               	movwf	??_DS1307_ReadDate
  4368  042B  083E               	movf	??_DS1307_ReadDate,w
  4369  042C  0021               	movlb	1	; select bank1
  4370  042D  00BB               	movwf	DS1307_ReadDate@Temp^(0+128)
  4371                           
  4372                           ;ds1307.c: 151: SaveDateTo[1] = ((Temp>>4)*10) + (Temp&0x0F);
  4373  042E  300F               	movlw	15
  4374  042F  053B               	andwf	DS1307_ReadDate@Temp^(0+128),w
  4375  0430  0020               	movlb	0	; select bank0
  4376  0431  00BE               	movwf	??_DS1307_ReadDate
  4377  0432  300A               	movlw	10
  4378  0433  00BF               	movwf	??_DS1307_ReadDate+1
  4379  0434  083F               	movf	??_DS1307_ReadDate+1,w
  4380  0435  00B1               	movwf	___bmul@multiplicand
  4381  0436  0021               	movlb	1	; select bank1
  4382  0437  083B               	movf	DS1307_ReadDate@Temp^(0+128),w
  4383  0438  0020               	movlb	0	; select bank0
  4384  0439  00C0               	movwf	??_DS1307_ReadDate+2
  4385  043A  3004               	movlw	4
  4386  043B                     u4145:	
  4387  043B  36C0               	lsrf	??_DS1307_ReadDate+2,f
  4388  043C  0B89               	decfsz	9,f
  4389  043D  2C3B               	goto	u4145
  4390  043E  0840               	movf	??_DS1307_ReadDate+2,w
  4391  043F  318C  2428  3183   	fcall	___bmul
  4392  0442  0020               	movlb	0	; select bank0
  4393  0443  073E               	addwf	??_DS1307_ReadDate,w
  4394  0444  00C1               	movwf	??_DS1307_ReadDate+3
  4395  0445  0021               	movlb	1	; select bank1
  4396  0446  0A3A               	incf	DS1307_ReadDate@SaveDateTo^(0+128),w
  4397  0447  0086               	movwf	6
  4398  0448  0187               	clrf	7
  4399  0449  0020               	movlb	0	; select bank0
  4400  044A  0841               	movf	??_DS1307_ReadDate+3,w
  4401  044B  0081               	movwf	1
  4402                           
  4403                           ;ds1307.c: 154: Temp = TempI2CRead[2];
  4404  044C  0021               	movlb	1	; select bank1
  4405  044D  0838               	movf	(DS1307_ReadDate@TempI2CRead^(0+128)+2),w
  4406  044E  0020               	movlb	0	; select bank0
  4407  044F  00BE               	movwf	??_DS1307_ReadDate
  4408  0450  083E               	movf	??_DS1307_ReadDate,w
  4409  0451  0021               	movlb	1	; select bank1
  4410  0452  00BB               	movwf	DS1307_ReadDate@Temp^(0+128)
  4411                           
  4412                           ;ds1307.c: 155: SaveDateTo[2] = ((Temp>>4)*10) + (Temp&0x0F);
  4413  0453  300F               	movlw	15
  4414  0454  053B               	andwf	DS1307_ReadDate@Temp^(0+128),w
  4415  0455  0020               	movlb	0	; select bank0
  4416  0456  00BE               	movwf	??_DS1307_ReadDate
  4417  0457  300A               	movlw	10
  4418  0458  00BF               	movwf	??_DS1307_ReadDate+1
  4419  0459  083F               	movf	??_DS1307_ReadDate+1,w
  4420  045A  00B1               	movwf	___bmul@multiplicand
  4421  045B  0021               	movlb	1	; select bank1
  4422  045C  083B               	movf	DS1307_ReadDate@Temp^(0+128),w
  4423  045D  0020               	movlb	0	; select bank0
  4424  045E  00C0               	movwf	??_DS1307_ReadDate+2
  4425  045F  3004               	movlw	4
  4426  0460                     u4155:	
  4427  0460  36C0               	lsrf	??_DS1307_ReadDate+2,f
  4428  0461  0B89               	decfsz	9,f
  4429  0462  2C60               	goto	u4155
  4430  0463  0840               	movf	??_DS1307_ReadDate+2,w
  4431  0464  318C  2428  3183   	fcall	___bmul
  4432  0467  0020               	movlb	0	; select bank0
  4433  0468  073E               	addwf	??_DS1307_ReadDate,w
  4434  0469  00C1               	movwf	??_DS1307_ReadDate+3
  4435  046A  0021               	movlb	1	; select bank1
  4436  046B  083A               	movf	DS1307_ReadDate@SaveDateTo^(0+128),w
  4437  046C  3E02               	addlw	2
  4438  046D  0086               	movwf	6
  4439  046E  0187               	clrf	7
  4440  046F  0020               	movlb	0	; select bank0
  4441  0470  0841               	movf	??_DS1307_ReadDate+3,w
  4442  0471  0081               	movwf	1
  4443                           
  4444                           ;ds1307.c: 158: Temp = TempI2CRead[3];
  4445  0472  0021               	movlb	1	; select bank1
  4446  0473  0839               	movf	(DS1307_ReadDate@TempI2CRead^(0+128)+3),w
  4447  0474  0020               	movlb	0	; select bank0
  4448  0475  00BE               	movwf	??_DS1307_ReadDate
  4449  0476  083E               	movf	??_DS1307_ReadDate,w
  4450  0477  0021               	movlb	1	; select bank1
  4451  0478  00BB               	movwf	DS1307_ReadDate@Temp^(0+128)
  4452                           
  4453                           ;ds1307.c: 159: SaveDateTo[3] = ((Temp>>4)*10) + (Temp&0x0F);
  4454  0479  300F               	movlw	15
  4455  047A  053B               	andwf	DS1307_ReadDate@Temp^(0+128),w
  4456  047B  0020               	movlb	0	; select bank0
  4457  047C  00BE               	movwf	??_DS1307_ReadDate
  4458  047D  300A               	movlw	10
  4459  047E  00BF               	movwf	??_DS1307_ReadDate+1
  4460  047F  083F               	movf	??_DS1307_ReadDate+1,w
  4461  0480  00B1               	movwf	___bmul@multiplicand
  4462  0481  0021               	movlb	1	; select bank1
  4463  0482  083B               	movf	DS1307_ReadDate@Temp^(0+128),w
  4464  0483  0020               	movlb	0	; select bank0
  4465  0484  00C0               	movwf	??_DS1307_ReadDate+2
  4466  0485  3004               	movlw	4
  4467  0486                     u4165:	
  4468  0486  36C0               	lsrf	??_DS1307_ReadDate+2,f
  4469  0487  0B89               	decfsz	9,f
  4470  0488  2C86               	goto	u4165
  4471  0489  0840               	movf	??_DS1307_ReadDate+2,w
  4472  048A  318C  2428         	fcall	___bmul
  4473  048C  0020               	movlb	0	; select bank0
  4474  048D  073E               	addwf	??_DS1307_ReadDate,w
  4475  048E  00C1               	movwf	??_DS1307_ReadDate+3
  4476  048F  0021               	movlb	1	; select bank1
  4477  0490  083A               	movf	DS1307_ReadDate@SaveDateTo^(0+128),w
  4478  0491  3E03               	addlw	3
  4479  0492  0086               	movwf	6
  4480  0493  0187               	clrf	7
  4481  0494  0020               	movlb	0	; select bank0
  4482  0495  0841               	movf	??_DS1307_ReadDate+3,w
  4483  0496  0081               	movwf	1
  4484  0497  0008               	return
  4485  0498                     __end_of_DS1307_ReadDate:	
  4486                           
  4487                           	psect	text15
  4488  0C28                     __ptext15:	
  4489 ;; *************** function ___bmul *****************
  4490 ;; Defined at:
  4491 ;;		line 2 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\bmul.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  multiplier      1    wreg     unsigned char 
  4494 ;;  multiplicand    1   17[BANK0 ] unsigned char 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  multiplier      1   20[BANK0 ] unsigned char 
  4497 ;;  product         1   19[BANK0 ] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      unsigned char 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4507 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;Total ram usage:        4 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    5
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_DS1307_ReadTime
  4518 ;;		_DS1307_ReadDate
  4519 ;;		_ds1307_decodeTime
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function ___bmul
  4525  0C28                     ___bmul:	
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4529                           ;___bmul@multiplier stored from wreg
  4530  0C28  0020               	movlb	0	; select bank0
  4531  0C29  00B4               	movwf	___bmul@multiplier
  4532  0C2A  01B3               	clrf	___bmul@product
  4533  0C2B                     l4456:	
  4534  0C2B  1C34               	btfss	___bmul@multiplier,0
  4535  0C2C  2C31               	goto	l4460
  4536  0C2D  0831               	movf	___bmul@multiplicand,w
  4537  0C2E  00B2               	movwf	??___bmul
  4538  0C2F  0832               	movf	??___bmul,w
  4539  0C30  07B3               	addwf	___bmul@product,f
  4540  0C31                     l4460:	
  4541  0C31  1003               	clrc
  4542  0C32  0DB1               	rlf	___bmul@multiplicand,f
  4543  0C33  1003               	clrc
  4544  0C34  0CB4               	rrf	___bmul@multiplier,f
  4545  0C35  08B4               	movf	___bmul@multiplier,f
  4546  0C36  1D03               	skipz
  4547  0C37  2C2B               	goto	l4456
  4548  0C38  0833               	movf	___bmul@product,w
  4549  0C39  0008               	return
  4550  0C3A                     __end_of___bmul:	
  4551                           
  4552                           	psect	text16
  4553  0CD9                     __ptext16:	
  4554 ;; *************** function _I2C1_WriteByte *****************
  4555 ;; Defined at:
  4556 ;;		line 304 in file "i2cbysk.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  i2c1SlaveAdd    1    wreg     unsigned char 
  4559 ;;  i2c1Data        1   17[BANK0 ] unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  i2c1SlaveAdd    1   18[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      unsigned char 
  4564 ;; Registers used:
  4565 ;;		wreg
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4571 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;Total ram usage:        2 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    5
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_DS1307_ReadTime
  4582 ;;		_DS1307_ReadDate
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           
  4587                           ;psect for function _I2C1_WriteByte
  4588  0CD9                     _I2C1_WriteByte:	
  4589                           
  4590                           ;incstack = 0
  4591                           ; Regs used in _I2C1_WriteByte: [wreg]
  4592                           ;I2C1_WriteByte@i2c1SlaveAddress stored from wreg
  4593  0CD9  0020               	movlb	0	; select bank0
  4594  0CDA  00B2               	movwf	I2C1_WriteByte@i2c1SlaveAddress
  4595                           
  4596                           ;i2cbysk.c: 306: if (SSP1STATbits.S)
  4597  0CDB  0024               	movlb	4	; select bank4
  4598  0CDC  1D94               	btfss	20,3	;volatile
  4599  0CDD  2CE0               	goto	l329
  4600                           
  4601                           ;i2cbysk.c: 307: {
  4602                           ;i2cbysk.c: 308: return I2C1_BUS_BUSY;
  4603  0CDE  3003               	movlw	3
  4604  0CDF  0008               	return
  4605  0CE0                     l329:	
  4606                           
  4607                           ;i2cbysk.c: 309: }
  4608                           ;i2cbysk.c: 312: SSP1CON2bits.SEN = 1;
  4609  0CE0  1416               	bsf	22,0	;volatile
  4610  0CE1                     l331:	
  4611                           ;i2cbysk.c: 314: {
  4612                           
  4613                           ;i2cbysk.c: 313: while (SSP1CON2bits.SEN)
  4614                           
  4615  0CE1  1816               	btfsc	22,0	;volatile
  4616  0CE2  2CE1               	goto	l331
  4617                           
  4618                           ;i2cbysk.c: 315: }
  4619                           ;i2cbysk.c: 318: if (PIR2bits.BCL1IF)
  4620  0CE3  0020               	movlb	0	; select bank0
  4621  0CE4  1D92               	btfss	18,3	;volatile
  4622  0CE5  2CE9               	goto	l4286
  4623                           
  4624                           ;i2cbysk.c: 319: {
  4625                           ;i2cbysk.c: 320: PIR2bits.BCL1IF = 0;
  4626  0CE6  1192               	bcf	18,3	;volatile
  4627                           
  4628                           ;i2cbysk.c: 321: return I2C1_BUS_COLLISION;
  4629  0CE7  3002               	movlw	2
  4630  0CE8  0008               	return
  4631  0CE9                     l4286:	
  4632                           
  4633                           ;i2cbysk.c: 322: }
  4634                           ;i2cbysk.c: 325: SSP1BUF = i2c1SlaveAddress;
  4635  0CE9  0832               	movf	I2C1_WriteByte@i2c1SlaveAddress,w
  4636  0CEA  0024               	movlb	4	; select bank4
  4637  0CEB  0091               	movwf	17	;volatile
  4638  0CEC                     l335:	
  4639                           ;i2cbysk.c: 327: {
  4640                           
  4641                           ;i2cbysk.c: 326: while (SSP1STATbits.BF || SSP1STATbits.R_nW)
  4642                           
  4643  0CEC  1C14               	btfss	20,0	;volatile
  4644  0CED  1914               	btfsc	20,2	;volatile
  4645  0CEE  2CEC               	goto	l335
  4646                           
  4647                           ;i2cbysk.c: 328: }
  4648                           ;i2cbysk.c: 331: if (SSP1CON2bits.ACKSTAT )
  4649  0CEF  1F16               	btfss	22,6	;volatile
  4650  0CF0  2CF6               	goto	l4296
  4651                           
  4652                           ;i2cbysk.c: 332: {
  4653                           ;i2cbysk.c: 333: SSP1CON2bits.PEN = 1;
  4654  0CF1  1516               	bsf	22,2	;volatile
  4655  0CF2                     l339:	
  4656                           ;i2cbysk.c: 335: {
  4657                           
  4658                           ;i2cbysk.c: 334: while (SSP1CON2bits.PEN)
  4659                           
  4660  0CF2  1916               	btfsc	22,2	;volatile
  4661  0CF3  2CF2               	goto	l339
  4662                           
  4663                           ;i2cbysk.c: 336: }
  4664                           ;i2cbysk.c: 337: return I2C1_ACK_NOT_RECEIVED;
  4665  0CF4  3000               	movlw	0
  4666  0CF5  0008               	return
  4667  0CF6                     l4296:	
  4668                           
  4669                           ;i2cbysk.c: 338: }
  4670                           ;i2cbysk.c: 341: SSP1BUF = i2c1Data;
  4671  0CF6  0020               	movlb	0	; select bank0
  4672  0CF7  0831               	movf	I2C1_WriteByte@i2c1Data,w
  4673  0CF8  0024               	movlb	4	; select bank4
  4674  0CF9  0091               	movwf	17	;volatile
  4675  0CFA                     l342:	
  4676                           ;i2cbysk.c: 343: {
  4677                           
  4678                           ;i2cbysk.c: 342: while (SSP1STATbits.BF || SSP1STATbits.R_nW)
  4679                           
  4680  0CFA  1C14               	btfss	20,0	;volatile
  4681  0CFB  1914               	btfsc	20,2	;volatile
  4682  0CFC  2CFA               	goto	l342
  4683                           
  4684                           ;i2cbysk.c: 344: }
  4685                           ;i2cbysk.c: 347: if ( SSP1CON2bits.ACKSTAT )
  4686  0CFD  1F16               	btfss	22,6	;volatile
  4687  0CFE  2D04               	goto	l345
  4688                           
  4689                           ;i2cbysk.c: 348: {
  4690                           ;i2cbysk.c: 349: SSP1CON2bits.PEN = 1;
  4691  0CFF  1516               	bsf	22,2	;volatile
  4692  0D00                     l346:	
  4693                           ;i2cbysk.c: 351: {
  4694                           
  4695                           ;i2cbysk.c: 350: while (SSP1CON2bits.PEN)
  4696                           
  4697  0D00  1916               	btfsc	22,2	;volatile
  4698  0D01  2D00               	goto	l346
  4699                           
  4700                           ;i2cbysk.c: 352: }
  4701                           ;i2cbysk.c: 353: return I2C1_ACK_NOT_RECEIVED;
  4702  0D02  3000               	movlw	0
  4703  0D03  0008               	return
  4704  0D04                     l345:	
  4705                           
  4706                           ;i2cbysk.c: 354: }
  4707                           ;i2cbysk.c: 357: if (PIR2bits.BCL1IF)
  4708  0D04  0020               	movlb	0	; select bank0
  4709  0D05  1D92               	btfss	18,3	;volatile
  4710  0D06  2D0A               	goto	l349
  4711                           
  4712                           ;i2cbysk.c: 358: {
  4713                           ;i2cbysk.c: 359: PIR2bits.BCL1IF = 0;
  4714  0D07  1192               	bcf	18,3	;volatile
  4715                           
  4716                           ;i2cbysk.c: 360: return I2C1_BUS_COLLISION;
  4717  0D08  3002               	movlw	2
  4718  0D09  0008               	return
  4719  0D0A                     l349:	
  4720                           
  4721                           ;i2cbysk.c: 361: }
  4722                           ;i2cbysk.c: 364: SSP1CON2bits.PEN = 1;
  4723  0D0A  0024               	movlb	4	; select bank4
  4724  0D0B  1516               	bsf	22,2	;volatile
  4725  0D0C                     l350:	
  4726                           ;i2cbysk.c: 366: {
  4727                           
  4728                           ;i2cbysk.c: 365: while (SSP1CON2bits.PEN)
  4729                           
  4730  0D0C  1916               	btfsc	22,2	;volatile
  4731  0D0D  2D0C               	goto	l350
  4732                           
  4733                           ;i2cbysk.c: 367: }
  4734                           ;i2cbysk.c: 370: if(PIR2bits.BCL1IF)
  4735  0D0E  0020               	movlb	0	; select bank0
  4736  0D0F  1D92               	btfss	18,3	;volatile
  4737  0D10  2D14               	goto	l4318
  4738                           
  4739                           ;i2cbysk.c: 371: {
  4740                           ;i2cbysk.c: 372: PIR2bits.BCL1IF = 0;
  4741  0D11  1192               	bcf	18,3	;volatile
  4742                           
  4743                           ;i2cbysk.c: 373: return I2C1_BUS_COLLISION;
  4744  0D12  3002               	movlw	2
  4745  0D13  0008               	return
  4746  0D14                     l4318:	
  4747                           
  4748                           ;i2cbysk.c: 374: }
  4749                           ;i2cbysk.c: 375: return I2C1_SUCCESS;
  4750  0D14  3001               	movlw	1
  4751  0D15  0008               	return
  4752  0D16                     __end_of_I2C1_WriteByte:	
  4753                           
  4754                           	psect	text17
  4755  06C9                     __ptext17:	
  4756 ;; *************** function _I2C1_ReadFrame *****************
  4757 ;; Defined at:
  4758 ;;		line 117 in file "i2cbysk.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  i2c1SlaveAdd    1    wreg     unsigned char 
  4761 ;;  i2c1ReadPoin    1   17[BANK0 ] PTR unsigned char 
  4762 ;;		 -> DS1307_ReadDate@TempI2CRead(4), DS1307_ReadTime@TempI2CRead(4), 
  4763 ;;  i2c1FrameLen    1   18[BANK0 ] unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  i2c1SlaveAdd    1   20[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4777 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4778 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4779 ;;Total ram usage:        4 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    5
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_DS1307_ReadTime
  4786 ;;		_DS1307_ReadDate
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function _I2C1_ReadFrame
  4792  06C9                     _I2C1_ReadFrame:	
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _I2C1_ReadFrame: [wreg+fsr1l+fsr1h+status,2+status,0]
  4796                           ;I2C1_ReadFrame@i2c1SlaveAddress stored from wreg
  4797  06C9  0020               	movlb	0	; select bank0
  4798  06CA  00B4               	movwf	I2C1_ReadFrame@i2c1SlaveAddress
  4799                           
  4800                           ;i2cbysk.c: 119: if(SSP1STATbits.S)
  4801  06CB  0024               	movlb	4	; select bank4
  4802  06CC  1D94               	btfss	20,3	;volatile
  4803  06CD  2ED0               	goto	l263
  4804                           
  4805                           ;i2cbysk.c: 120: {
  4806                           ;i2cbysk.c: 121: return I2C1_BUS_BUSY;
  4807  06CE  3003               	movlw	3
  4808  06CF  0008               	return
  4809  06D0                     l263:	
  4810                           
  4811                           ;i2cbysk.c: 122: }
  4812                           ;i2cbysk.c: 125: SSP1CON2bits.SEN = 1;
  4813  06D0  1416               	bsf	22,0	;volatile
  4814  06D1                     l265:	
  4815                           ;i2cbysk.c: 127: {
  4816                           
  4817                           ;i2cbysk.c: 126: while (SSP1CON2bits.SEN)
  4818                           
  4819  06D1  1816               	btfsc	22,0	;volatile
  4820  06D2  2ED1               	goto	l265
  4821                           
  4822                           ;i2cbysk.c: 128: }
  4823                           ;i2cbysk.c: 131: if(PIR2bits.BCL1IF)
  4824  06D3  0020               	movlb	0	; select bank0
  4825  06D4  1D92               	btfss	18,3	;volatile
  4826  06D5  2ED9               	goto	l4174
  4827                           
  4828                           ;i2cbysk.c: 132: {
  4829                           ;i2cbysk.c: 133: PIR2bits.BCL1IF = 0;
  4830  06D6  1192               	bcf	18,3	;volatile
  4831                           
  4832                           ;i2cbysk.c: 134: return I2C1_BUS_COLLISION;
  4833  06D7  3002               	movlw	2
  4834  06D8  0008               	return
  4835  06D9                     l4174:	
  4836                           
  4837                           ;i2cbysk.c: 135: }
  4838                           ;i2cbysk.c: 138: SSP1BUF = i2c1SlaveAddress | 0x01;
  4839  06D9  0834               	movf	I2C1_ReadFrame@i2c1SlaveAddress,w
  4840  06DA  3801               	iorlw	1
  4841  06DB  0024               	movlb	4	; select bank4
  4842  06DC  0091               	movwf	17	;volatile
  4843  06DD                     l269:	
  4844                           ;i2cbysk.c: 139: while ((SSP1STATbits.BF || SSP1STATbits.R_nW) && !PIR2bits.BCL1IF);
  4845                           
  4846  06DD  0024               	movlb	4	; select bank4
  4847  06DE  1814               	btfsc	20,0	;volatile
  4848  06DF  2EE2               	goto	l274
  4849  06E0  1D14               	btfss	20,2	;volatile
  4850  06E1  2EE5               	goto	l275
  4851  06E2                     l274:	
  4852  06E2  0020               	movlb	0	; select bank0
  4853  06E3  1D92               	btfss	18,3	;volatile
  4854  06E4  2EDD               	goto	l269
  4855  06E5                     l275:	
  4856                           
  4857                           ;i2cbysk.c: 142: if(PIR2bits.BCL1IF)
  4858  06E5  0020               	movlb	0	; select bank0
  4859  06E6  1D92               	btfss	18,3	;volatile
  4860  06E7  2EEB               	goto	l276
  4861                           
  4862                           ;i2cbysk.c: 143: {
  4863                           ;i2cbysk.c: 144: PIR2bits.BCL1IF = 0;
  4864  06E8  1192               	bcf	18,3	;volatile
  4865                           
  4866                           ;i2cbysk.c: 145: return I2C1_BUS_COLLISION;
  4867  06E9  3002               	movlw	2
  4868  06EA  0008               	return
  4869  06EB                     l276:	
  4870                           
  4871                           ;i2cbysk.c: 146: }
  4872                           ;i2cbysk.c: 149: if (SSP1CON2bits.ACKSTAT)
  4873  06EB  0024               	movlb	4	; select bank4
  4874  06EC  1F16               	btfss	22,6	;volatile
  4875  06ED  2F17               	goto	l4208
  4876                           
  4877                           ;i2cbysk.c: 150: {
  4878                           ;i2cbysk.c: 151: SSP1CON2bits.PEN = 1;
  4879  06EE  1516               	bsf	22,2	;volatile
  4880  06EF                     l278:	
  4881                           ;i2cbysk.c: 153: {
  4882                           
  4883                           ;i2cbysk.c: 152: while(SSP1CON2bits.PEN)
  4884                           
  4885  06EF  1916               	btfsc	22,2	;volatile
  4886  06F0  2EEF               	goto	l278
  4887                           
  4888                           ;i2cbysk.c: 154: }
  4889                           ;i2cbysk.c: 155: return I2C1_ACK_NOT_RECEIVED;
  4890  06F1  3000               	movlw	0
  4891  06F2  0008               	return
  4892  06F3                     l282:	
  4893                           ;i2cbysk.c: 156: }
  4894                           ;i2cbysk.c: 159: while (i2c1FrameLength)
  4895                           
  4896                           
  4897                           ;i2cbysk.c: 160: {
  4898                           ;i2cbysk.c: 162: SSP1CON2bits.RCEN = 1;
  4899  06F3  0024               	movlb	4	; select bank4
  4900  06F4  1596               	bsf	22,3	;volatile
  4901  06F5                     l283:	
  4902                           ;i2cbysk.c: 164: {
  4903                           
  4904                           ;i2cbysk.c: 163: while(SSP1CON2bits.RCEN)
  4905                           
  4906  06F5  1996               	btfsc	22,3	;volatile
  4907  06F6  2EF5               	goto	l283
  4908                           
  4909                           ;i2cbysk.c: 165: }
  4910                           ;i2cbysk.c: 166: *i2c1ReadPointer++ = SSP1BUF;
  4911  06F7  0811               	movf	17,w	;volatile
  4912  06F8  0020               	movlb	0	; select bank0
  4913  06F9  00B3               	movwf	??_I2C1_ReadFrame
  4914  06FA  0831               	movf	I2C1_ReadFrame@i2c1ReadPointer,w
  4915  06FB  0086               	movwf	6
  4916  06FC  0187               	clrf	7
  4917  06FD  0833               	movf	??_I2C1_ReadFrame,w
  4918  06FE  0081               	movwf	1
  4919  06FF  3001               	movlw	1
  4920  0700  00B3               	movwf	??_I2C1_ReadFrame
  4921  0701  0833               	movf	??_I2C1_ReadFrame,w
  4922  0702  07B1               	addwf	I2C1_ReadFrame@i2c1ReadPointer,f
  4923                           
  4924                           ;i2cbysk.c: 169: if(i2c1FrameLength == 1)
  4925  0703  0832               	movf	I2C1_ReadFrame@i2c1FrameLength,w
  4926  0704  3A01               	xorlw	1
  4927  0705  1D03               	skipz
  4928  0706  2F0A               	goto	l286
  4929                           
  4930                           ;i2cbysk.c: 170: {
  4931                           ;i2cbysk.c: 171: SSP1CON2bits.ACKDT = 1;
  4932  0707  0024               	movlb	4	; select bank4
  4933  0708  1696               	bsf	22,5	;volatile
  4934                           
  4935                           ;i2cbysk.c: 172: }
  4936  0709  2F0C               	goto	l287
  4937  070A                     l286:	
  4938                           
  4939                           ;i2cbysk.c: 173: else
  4940                           ;i2cbysk.c: 174: {
  4941                           ;i2cbysk.c: 175: SSP1CON2bits.ACKDT = 0;
  4942  070A  0024               	movlb	4	; select bank4
  4943  070B  1296               	bcf	22,5	;volatile
  4944  070C                     l287:	
  4945                           
  4946                           ;i2cbysk.c: 176: }
  4947                           ;i2cbysk.c: 178: SSP1CON2bits.ACKEN = 1;
  4948  070C  1616               	bsf	22,4	;volatile
  4949  070D                     l288:	
  4950                           ;i2cbysk.c: 180: {
  4951                           
  4952                           ;i2cbysk.c: 179: while (SSP1CON2bits.ACKEN)
  4953                           
  4954  070D  1A16               	btfsc	22,4	;volatile
  4955  070E  2F0D               	goto	l288
  4956                           
  4957                           ;i2cbysk.c: 181: }
  4958                           ;i2cbysk.c: 182: i2c1FrameLength--;
  4959  070F  3001               	movlw	1
  4960  0710  0020               	movlb	0	; select bank0
  4961  0711  02B2               	subwf	I2C1_ReadFrame@i2c1FrameLength,f
  4962                           
  4963                           ;i2cbysk.c: 185: if (PIR2bits.BCL1IF)
  4964  0712  1D92               	btfss	18,3	;volatile
  4965  0713  2F17               	goto	l4208
  4966                           
  4967                           ;i2cbysk.c: 186: {
  4968                           ;i2cbysk.c: 187: PIR2bits.BCL1IF = 0;
  4969  0714  1192               	bcf	18,3	;volatile
  4970                           
  4971                           ;i2cbysk.c: 188: return I2C1_BUS_COLLISION;
  4972  0715  3002               	movlw	2
  4973  0716  0008               	return
  4974  0717                     l4208:	
  4975  0717  0020               	movlb	0	; select bank0
  4976  0718  08B2               	movf	I2C1_ReadFrame@i2c1FrameLength,f
  4977  0719  1D03               	skipz
  4978  071A  2EF3               	goto	l282
  4979                           
  4980                           ;i2cbysk.c: 189: }
  4981                           ;i2cbysk.c: 191: }
  4982                           ;i2cbysk.c: 193: SSP1CON2bits.PEN = 1;
  4983  071B  0024               	movlb	4	; select bank4
  4984  071C  1516               	bsf	22,2	;volatile
  4985  071D                     l293:	
  4986                           ;i2cbysk.c: 195: {
  4987                           
  4988                           ;i2cbysk.c: 194: while (SSP1CON2bits.PEN)
  4989                           
  4990  071D  1916               	btfsc	22,2	;volatile
  4991  071E  2F1D               	goto	l293
  4992                           
  4993                           ;i2cbysk.c: 196: }
  4994                           ;i2cbysk.c: 199: if (PIR2bits.BCL1IF)
  4995  071F  0020               	movlb	0	; select bank0
  4996  0720  1D92               	btfss	18,3	;volatile
  4997  0721  2F25               	goto	l4216
  4998                           
  4999                           ;i2cbysk.c: 200: {
  5000                           ;i2cbysk.c: 201: PIR2bits.BCL1IF=0;
  5001  0722  1192               	bcf	18,3	;volatile
  5002                           
  5003                           ;i2cbysk.c: 202: return I2C1_BUS_COLLISION;
  5004  0723  3002               	movlw	2
  5005  0724  0008               	return
  5006  0725                     l4216:	
  5007                           
  5008                           ;i2cbysk.c: 203: }
  5009                           ;i2cbysk.c: 204: return I2C1_SUCCESS;
  5010  0725  3001               	movlw	1
  5011  0726  0008               	return
  5012  0727                     __end_of_I2C1_ReadFrame:	
  5013                           
  5014                           	psect	text18
  5015  0C16                     __ptext18:	
  5016 ;; *************** function _Debug *****************
  5017 ;; Defined at:
  5018 ;;		line 188 in file "main.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  data            1    wreg     PTR unsigned char 
  5021 ;;		 -> STR_17(16), STR_16(16), 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  data            1   29[BANK0 ] PTR unsigned char 
  5024 ;;		 -> STR_17(16), STR_16(16), 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;		None               void
  5027 ;; Registers used:
  5028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5037 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;Total ram usage:        1 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    8
  5041 ;; This function calls:
  5042 ;;		_LCDByte
  5043 ;;		_LCDGotoXY
  5044 ;;		_LCDWriteString
  5045 ;; This function is called by:
  5046 ;;		_DS1307_ReadTime
  5047 ;;		_DS1307_ReadDate
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _Debug
  5053  0C16                     _Debug:	
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _Debug: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5057                           ;Debug@data stored from wreg
  5058  0C16  0020               	movlb	0	; select bank0
  5059  0C17  00BD               	movwf	Debug@data
  5060                           
  5061                           ;main.c: 189: (LCDByte(0b00000001,0));
  5062  0C18  01B3               	clrf	LCDByte@isdata
  5063  0C19  3001               	movlw	1
  5064  0C1A  318F  2709  318C   	fcall	_LCDByte
  5065                           
  5066                           ;main.c: 190: { LCDGotoXY(0,0); LCDWriteString(data);};
  5067  0C1D  0020               	movlb	0	; select bank0
  5068  0C1E  01BA               	clrf	LCDGotoXY@y
  5069  0C1F  3000               	movlw	0
  5070  0C20  3187  27D6  318C   	fcall	_LCDGotoXY
  5071  0C23  0020               	movlb	0	; select bank0
  5072  0C24  083D               	movf	Debug@data,w
  5073  0C25  318D  2599         	fcall	_LCDWriteString
  5074  0C27  0008               	return
  5075  0C28                     __end_of_Debug:	
  5076                           
  5077                           	psect	text19
  5078  0D99                     __ptext19:	
  5079 ;; *************** function _LCDWriteString *****************
  5080 ;; Defined at:
  5081 ;;		line 257 in file "lcd_hd44780_pic16.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;  msg             1    wreg     PTR const unsigned char 
  5084 ;;		 -> STR_17(16), STR_16(16), STR_15(2), STR_14(2), 
  5085 ;;		 -> STR_13(2), STR_12(5), STR_11(5), STR_10(5), 
  5086 ;;		 -> STR_9(5), STR_8(5), STR_7(5), STR_6(5), 
  5087 ;;		 -> STR_5(2), STR_4(2), STR_3(17), STR_2(15), 
  5088 ;;		 -> STR_1(16), 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  msg             1   28[BANK0 ] PTR const unsigned char 
  5091 ;;		 -> STR_17(16), STR_16(16), STR_15(2), STR_14(2), 
  5092 ;;		 -> STR_13(2), STR_12(5), STR_11(5), STR_10(5), 
  5093 ;;		 -> STR_9(5), STR_8(5), STR_7(5), STR_6(5), 
  5094 ;;		 -> STR_5(2), STR_4(2), STR_3(17), STR_2(15), 
  5095 ;;		 -> STR_1(16), 
  5096 ;;  cc              1   27[BANK0 ] char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;		None               void
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0, pclath, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;Total ram usage:        3 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    7
  5113 ;; This function calls:
  5114 ;;		_LCDByte
  5115 ;; This function is called by:
  5116 ;;		_main
  5117 ;;		_Debug
  5118 ;;		_ShowTime
  5119 ;;		_ShowDate
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _LCDWriteString
  5125  0D99                     _LCDWriteString:	
  5126                           
  5127                           ;incstack = 0
  5128                           ; Regs used in _LCDWriteString: [wreg+status,2+status,0+pclath+cstack]
  5129                           ;LCDWriteString@msg stored from wreg
  5130  0D99  0020               	movlb	0	; select bank0
  5131  0D9A  00BC               	movwf	LCDWriteString@msg
  5132  0D9B                     l3952:	
  5133                           ;lcd_hd44780_pic16.c: 287: while(*msg!='\0')
  5134                           
  5135  0D9B  083C               	movf	LCDWriteString@msg,w
  5136  0D9C  3186               	movlp	high __stringtab
  5137  0D9D  000A               	callw
  5138  0D9E  318D               	pagesel	$	;select current page
  5139  0D9F  3800               	iorlw	0
  5140  0DA0  1903               	btfsc	3,2
  5141  0DA1  0008               	return
  5142                           
  5143                           ;lcd_hd44780_pic16.c: 288: {
  5144                           ;lcd_hd44780_pic16.c: 290: if(*msg=='%')
  5145  0DA2  083C               	movf	LCDWriteString@msg,w
  5146  0DA3  3186               	movlp	high __stringtab
  5147  0DA4  000A               	callw
  5148  0DA5  318D               	pagesel	$	;select current page
  5149  0DA6  3A25               	xorlw	37
  5150  0DA7  1D03               	skipz
  5151  0DA8  2DCF               	goto	l3948
  5152                           
  5153                           ;lcd_hd44780_pic16.c: 291: {
  5154                           ;lcd_hd44780_pic16.c: 292: msg++;
  5155  0DA9  3001               	movlw	1
  5156  0DAA  00BA               	movwf	??_LCDWriteString
  5157  0DAB  083A               	movf	??_LCDWriteString,w
  5158  0DAC  07BC               	addwf	LCDWriteString@msg,f
  5159                           
  5160                           ;lcd_hd44780_pic16.c: 293: int8_t cc=*msg-'0';
  5161  0DAD  083C               	movf	LCDWriteString@msg,w
  5162  0DAE  3186               	movlp	high __stringtab
  5163  0DAF  000A               	callw
  5164  0DB0  318D               	pagesel	$	;select current page
  5165  0DB1  3ED0               	addlw	-48
  5166  0DB2  00BA               	movwf	??_LCDWriteString
  5167  0DB3  083A               	movf	??_LCDWriteString,w
  5168  0DB4  00BB               	movwf	LCDWriteString@cc
  5169                           
  5170                           ;lcd_hd44780_pic16.c: 295: if(cc>=0 && cc<=7)
  5171  0DB5  1BBB               	btfsc	LCDWriteString@cc,7
  5172  0DB6  2DC0               	goto	l3946
  5173  0DB7  083B               	movf	LCDWriteString@cc,w
  5174  0DB8  3A80               	xorlw	128
  5175  0DB9  3E78               	addlw	-136
  5176  0DBA  1803               	skipnc
  5177  0DBB  2DC0               	goto	l3946
  5178                           
  5179                           ;lcd_hd44780_pic16.c: 296: {
  5180                           ;lcd_hd44780_pic16.c: 297: (LCDByte(cc,1));
  5181  0DBC  01B3               	clrf	LCDByte@isdata
  5182  0DBD  0AB3               	incf	LCDByte@isdata,f
  5183  0DBE  083B               	movf	LCDWriteString@cc,w
  5184  0DBF  2DD6               	goto	L3
  5185  0DC0                     l3946:	
  5186                           ;lcd_hd44780_pic16.c: 298: }
  5187                           
  5188                           
  5189                           ;lcd_hd44780_pic16.c: 299: else
  5190                           ;lcd_hd44780_pic16.c: 300: {
  5191                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  5192  0DC0  0020               	movlb	0	; select bank0
  5193  0DC1  01B3               	clrf	LCDByte@isdata
  5194  0DC2  0AB3               	incf	LCDByte@isdata,f
  5195  0DC3  3025               	movlw	37
  5196  0DC4  318F  2709  318D   	fcall	_LCDByte
  5197                           
  5198                           ;lcd_hd44780_pic16.c: 302: (LCDByte(*msg,1));
  5199  0DC7  0020               	movlb	0	; select bank0
  5200  0DC8  01B3               	clrf	LCDByte@isdata
  5201  0DC9  0AB3               	incf	LCDByte@isdata,f
  5202  0DCA  083C               	movf	LCDWriteString@msg,w
  5203  0DCB  3186               	movlp	high __stringtab
  5204  0DCC  000A               	callw
  5205  0DCD  318D               	pagesel	$	;select current page
  5206  0DCE  2DD6               	goto	L3
  5207  0DCF                     l3948:	
  5208                           ;lcd_hd44780_pic16.c: 303: }
  5209                           ;lcd_hd44780_pic16.c: 304: }
  5210                           
  5211                           
  5212                           ;lcd_hd44780_pic16.c: 305: else
  5213                           ;lcd_hd44780_pic16.c: 306: {
  5214                           ;lcd_hd44780_pic16.c: 307: (LCDByte(*msg,1));
  5215  0DCF  0020               	movlb	0	; select bank0
  5216  0DD0  01B3               	clrf	LCDByte@isdata
  5217  0DD1  0AB3               	incf	LCDByte@isdata,f
  5218  0DD2  083C               	movf	LCDWriteString@msg,w
  5219  0DD3  3186               	movlp	high __stringtab
  5220  0DD4  000A               	callw
  5221  0DD5  318D               	pagesel	$	;select current page
  5222  0DD6                     L3:	
  5223  0DD6  318F  2709  318D   	fcall	_LCDByte
  5224                           
  5225                           ;lcd_hd44780_pic16.c: 308: }
  5226                           ;lcd_hd44780_pic16.c: 309: msg++;
  5227  0DD9  3001               	movlw	1
  5228  0DDA  0020               	movlb	0	; select bank0
  5229  0DDB  00BA               	movwf	??_LCDWriteString
  5230  0DDC  083A               	movf	??_LCDWriteString,w
  5231  0DDD  07BC               	addwf	LCDWriteString@msg,f
  5232  0DDE  2D9B               	goto	l3952
  5233  0DDF                     __end_of_LCDWriteString:	
  5234                           
  5235                           	psect	text20
  5236  07D6                     __ptext20:	
  5237 ;; *************** function _LCDGotoXY *****************
  5238 ;; Defined at:
  5239 ;;		line 358 in file "lcd_hd44780_pic16.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  x               1    wreg     unsigned char 
  5242 ;;  y               1   26[BANK0 ] unsigned char 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;  x               1   28[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;		None               void
  5247 ;; Registers used:
  5248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5254 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;Total ram usage:        3 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    7
  5261 ;; This function calls:
  5262 ;;		_LCDByte
  5263 ;; This function is called by:
  5264 ;;		_main
  5265 ;;		_Debug
  5266 ;;		_ShowTime
  5267 ;;		_ShowDate
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           
  5272                           ;psect for function _LCDGotoXY
  5273  07D6                     _LCDGotoXY:	
  5274                           
  5275                           ;incstack = 0
  5276                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5277                           ;LCDGotoXY@x stored from wreg
  5278  07D6  0020               	movlb	0	; select bank0
  5279  07D7  00BC               	movwf	LCDGotoXY@x
  5280                           
  5281                           ;lcd_hd44780_pic16.c: 360: if(x>=20) return;
  5282  07D8  3014               	movlw	20
  5283  07D9  023C               	subwf	LCDGotoXY@x,w
  5284  07DA  1803               	btfsc	3,0
  5285  07DB  0008               	return
  5286  07DC  2FE6               	goto	l3964
  5287  07DD                     l192:	
  5288                           ;lcd_hd44780_pic16.c: 368: case 1:
  5289                           
  5290                           ;lcd_hd44780_pic16.c: 367: break;
  5291                           
  5292                           ;lcd_hd44780_pic16.c: 365: {
  5293                           ;lcd_hd44780_pic16.c: 366: case 0:
  5294                           
  5295                           ;lcd_hd44780_pic16.c: 364: switch(y)
  5296                           
  5297                           
  5298                           ;lcd_hd44780_pic16.c: 369: x|=0b01000000;
  5299  07DD  173C               	bsf	LCDGotoXY@x,6
  5300                           
  5301                           ;lcd_hd44780_pic16.c: 370: break;
  5302  07DE  2FF4               	goto	l191
  5303  07DF                     l3958:	
  5304                           ;lcd_hd44780_pic16.c: 371: case 2:
  5305                           
  5306                           
  5307                           ;lcd_hd44780_pic16.c: 372: x+=0x14;
  5308  07DF  3014               	movlw	20
  5309  07E0  2FE2               	goto	L4
  5310  07E1                     l3960:	
  5311                           ;lcd_hd44780_pic16.c: 374: case 3:
  5312                           
  5313                           ;lcd_hd44780_pic16.c: 373: break;
  5314                           
  5315                           
  5316                           ;lcd_hd44780_pic16.c: 375: x+=0x54;
  5317  07E1  3054               	movlw	84
  5318  07E2                     L4:	
  5319  07E2  00BB               	movwf	??_LCDGotoXY
  5320  07E3  083B               	movf	??_LCDGotoXY,w
  5321  07E4  07BC               	addwf	LCDGotoXY@x,f
  5322                           
  5323                           ;lcd_hd44780_pic16.c: 377: }
  5324                           
  5325                           ;lcd_hd44780_pic16.c: 376: break;
  5326  07E5  2FF4               	goto	l191
  5327  07E6                     l3964:	
  5328  07E6  083A               	movf	LCDGotoXY@y,w
  5329                           
  5330                           ; Switch size 1, requested type "space"
  5331                           ; Number of cases is 4, Range of values is 0 to 3
  5332                           ; switch strategies available:
  5333                           ; Name         Instructions Cycles
  5334                           ; simple_byte           13     7 (average)
  5335                           ; direct_byte           14     6 (fixed)
  5336                           ; jumptable            260     6 (fixed)
  5337                           ;	Chosen strategy is simple_byte
  5338  07E7  3A00               	xorlw	0	; case 0
  5339  07E8  1903               	skipnz
  5340  07E9  2FF4               	goto	l191
  5341  07EA  3A01               	xorlw	1	; case 1
  5342  07EB  1903               	skipnz
  5343  07EC  2FDD               	goto	l192
  5344  07ED  3A03               	xorlw	3	; case 2
  5345  07EE  1903               	skipnz
  5346  07EF  2FDF               	goto	l3958
  5347  07F0  3A01               	xorlw	1	; case 3
  5348  07F1  1903               	skipnz
  5349  07F2  2FE1               	goto	l3960
  5350  07F3  2FF4               	goto	l191
  5351  07F4                     l191:	
  5352                           
  5353                           ;lcd_hd44780_pic16.c: 399: x|=0b10000000;
  5354  07F4  17BC               	bsf	LCDGotoXY@x,7
  5355                           
  5356                           ;lcd_hd44780_pic16.c: 400: (LCDByte(x,0));
  5357  07F5  01B3               	clrf	LCDByte@isdata
  5358  07F6  083C               	movf	LCDGotoXY@x,w
  5359  07F7  318F  2709         	fcall	_LCDByte
  5360  07F9  0008               	return
  5361  07FA                     __end_of_LCDGotoXY:	
  5362                           
  5363                           	psect	text21
  5364  0F09                     __ptext21:	
  5365 ;; *************** function _LCDByte *****************
  5366 ;; Defined at:
  5367 ;;		line 82 in file "lcd_hd44780_pic16.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  c               1    wreg     unsigned char 
  5370 ;;  isdata          1   19[BANK0 ] unsigned char 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  c               1   24[BANK0 ] unsigned char 
  5373 ;;  temp            1   25[BANK0 ] unsigned char 
  5374 ;;  ln              1   23[BANK0 ] unsigned char 
  5375 ;;  hn              1   22[BANK0 ] unsigned char 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;		None               void
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, status,0, pclath, cstack
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5385 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5387 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5388 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5389 ;;Total ram usage:        7 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; Hardware stack levels required when called:    6
  5392 ;; This function calls:
  5393 ;;		_LCDBusyLoop
  5394 ;; This function is called by:
  5395 ;;		_main
  5396 ;;		_Debug
  5397 ;;		_ShowTime
  5398 ;;		_ShowDate
  5399 ;;		_LCDInit
  5400 ;;		_LCDWriteString
  5401 ;;		_LCDWriteInt
  5402 ;;		_LCDGotoXY
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function _LCDByte
  5408  0F09                     _LCDByte:	
  5409                           
  5410                           ;incstack = 0
  5411                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  5412                           ;LCDByte@c stored from wreg
  5413  0F09  0020               	movlb	0	; select bank0
  5414  0F0A  00B8               	movwf	LCDByte@c
  5415                           
  5416                           ;lcd_hd44780_pic16.c: 91: uint8_t hn,ln;
  5417                           ;lcd_hd44780_pic16.c: 92: uint8_t temp;
  5418                           ;lcd_hd44780_pic16.c: 94: hn=c>>4;
  5419  0F0B  0838               	movf	LCDByte@c,w
  5420  0F0C  00B4               	movwf	??_LCDByte
  5421  0F0D  3004               	movlw	4
  5422  0F0E                     u3975:	
  5423  0F0E  36B4               	lsrf	??_LCDByte,f
  5424  0F0F  0B89               	decfsz	9,f
  5425  0F10  2F0E               	goto	u3975
  5426  0F11  0834               	movf	??_LCDByte,w
  5427  0F12  00B5               	movwf	??_LCDByte+1
  5428  0F13  0835               	movf	??_LCDByte+1,w
  5429  0F14  00B6               	movwf	LCDByte@hn
  5430                           
  5431                           ;lcd_hd44780_pic16.c: 95: ln=(c & 0x0F);
  5432  0F15  0838               	movf	LCDByte@c,w
  5433  0F16  390F               	andlw	15
  5434  0F17  00B4               	movwf	??_LCDByte
  5435  0F18  0834               	movf	??_LCDByte,w
  5436  0F19  00B7               	movwf	LCDByte@ln
  5437                           
  5438                           ;lcd_hd44780_pic16.c: 97: if(isdata==0)
  5439  0F1A  08B3               	movf	LCDByte@isdata,f
  5440  0F1B  1D03               	skipz
  5441  0F1C  2F1F               	goto	l148
  5442                           
  5443                           ;lcd_hd44780_pic16.c: 98: (RA0=0);
  5444  0F1D  100C               	bcf	12,0	;volatile
  5445  0F1E  2F20               	goto	l149
  5446  0F1F                     l148:	
  5447                           
  5448                           ;lcd_hd44780_pic16.c: 99: else
  5449                           ;lcd_hd44780_pic16.c: 100: (RA0=1);
  5450  0F1F  140C               	bsf	12,0	;volatile
  5451  0F20                     l149:	
  5452                           
  5453                           ;lcd_hd44780_pic16.c: 102: _delay((unsigned long)((0.5)*(32000000ULL/4000000.0)));
  5454  0F20  2F21               	nop2	;2 cycle nop
  5455  0F21  2F22               	nop2	;2 cycle nop
  5456                           
  5457                           ;lcd_hd44780_pic16.c: 104: (RA2=1);
  5458  0F22  0020               	movlb	0	; select bank0
  5459  0F23  150C               	bsf	12,2	;volatile
  5460                           
  5461                           ;lcd_hd44780_pic16.c: 108: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  5462  0F24  0836               	movf	LCDByte@hn,w
  5463  0F25  00B4               	movwf	??_LCDByte
  5464  0F26  3002               	movlw	2
  5465  0F27                     u3995:	
  5466  0F27  35B4               	lslf	??_LCDByte,f
  5467  0F28  0B89               	decfsz	9,f
  5468  0F29  2F27               	goto	u3995
  5469  0F2A  080E               	movf	14,w	;volatile
  5470  0F2B  39C3               	andlw	195
  5471  0F2C  0434               	iorwf	??_LCDByte,w
  5472  0F2D  00B5               	movwf	??_LCDByte+1
  5473  0F2E  0835               	movf	??_LCDByte+1,w
  5474  0F2F  00B9               	movwf	LCDByte@temp
  5475                           
  5476                           ;lcd_hd44780_pic16.c: 109: PORTC=temp;
  5477  0F30  0839               	movf	LCDByte@temp,w
  5478  0F31  008E               	movwf	14	;volatile
  5479                           
  5480                           ;lcd_hd44780_pic16.c: 111: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  5481  0F32  2F33               	nop2	;2 cycle nop
  5482  0F33  2F34               	nop2	;2 cycle nop
  5483  0F34  2F35               	nop2	;2 cycle nop
  5484  0F35  2F36               	nop2	;2 cycle nop
  5485                           
  5486                           ;lcd_hd44780_pic16.c: 115: (RA2=0);
  5487  0F36  0020               	movlb	0	; select bank0
  5488  0F37  110C               	bcf	12,2	;volatile
  5489                           
  5490                           ;lcd_hd44780_pic16.c: 117: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  5491  0F38  2F39               	nop2	;2 cycle nop
  5492  0F39  2F3A               	nop2	;2 cycle nop
  5493  0F3A  2F3B               	nop2	;2 cycle nop
  5494  0F3B  2F3C               	nop2	;2 cycle nop
  5495                           
  5496                           ;lcd_hd44780_pic16.c: 120: (RA2=1);
  5497  0F3C  0020               	movlb	0	; select bank0
  5498  0F3D  150C               	bsf	12,2	;volatile
  5499                           
  5500                           ;lcd_hd44780_pic16.c: 122: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  5501  0F3E  0837               	movf	LCDByte@ln,w
  5502  0F3F  00B4               	movwf	??_LCDByte
  5503  0F40  3002               	movlw	2
  5504  0F41                     u4005:	
  5505  0F41  35B4               	lslf	??_LCDByte,f
  5506  0F42  0B89               	decfsz	9,f
  5507  0F43  2F41               	goto	u4005
  5508  0F44  080E               	movf	14,w	;volatile
  5509  0F45  39C3               	andlw	195
  5510  0F46  0434               	iorwf	??_LCDByte,w
  5511  0F47  00B5               	movwf	??_LCDByte+1
  5512  0F48  0835               	movf	??_LCDByte+1,w
  5513  0F49  00B9               	movwf	LCDByte@temp
  5514                           
  5515                           ;lcd_hd44780_pic16.c: 124: PORTC=temp;
  5516  0F4A  0839               	movf	LCDByte@temp,w
  5517  0F4B  008E               	movwf	14	;volatile
  5518                           
  5519                           ;lcd_hd44780_pic16.c: 126: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  5520  0F4C  2F4D               	nop2	;2 cycle nop
  5521  0F4D  2F4E               	nop2	;2 cycle nop
  5522  0F4E  2F4F               	nop2	;2 cycle nop
  5523  0F4F  2F50               	nop2	;2 cycle nop
  5524                           
  5525                           ;lcd_hd44780_pic16.c: 130: (RA2=0);
  5526  0F50  0020               	movlb	0	; select bank0
  5527  0F51  110C               	bcf	12,2	;volatile
  5528                           
  5529                           ;lcd_hd44780_pic16.c: 132: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  5530  0F52  2F53               	nop2	;2 cycle nop
  5531  0F53  2F54               	nop2	;2 cycle nop
  5532  0F54  2F55               	nop2	;2 cycle nop
  5533  0F55  2F56               	nop2	;2 cycle nop
  5534                           
  5535                           ;lcd_hd44780_pic16.c: 134: LCDBusyLoop();
  5536  0F56  3185  25F3         	fcall	_LCDBusyLoop
  5537  0F58  0008               	return
  5538  0F59                     __end_of_LCDByte:	
  5539                           
  5540                           	psect	text22
  5541  05F3                     __ptext22:	
  5542 ;; *************** function _LCDBusyLoop *****************
  5543 ;; Defined at:
  5544 ;;		line 139 in file "lcd_hd44780_pic16.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;		None               void
  5551 ;; Registers used:
  5552 ;;		wreg
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;Total ram usage:        2 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    5
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_LCDByte
  5569 ;;		_LCDInit
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _LCDBusyLoop
  5575  05F3                     _LCDBusyLoop:	
  5576                           
  5577                           ;lcd_hd44780_pic16.c: 141: _delay((unsigned long)((5)*(32000000ULL/4000.0)));
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _LCDBusyLoop: [wreg]
  5581  05F3  3034               	movlw	52
  5582  05F4  0020               	movlb	0	; select bank0
  5583  05F5  00B2               	movwf	??_LCDBusyLoop+1
  5584  05F6  30F1               	movlw	241
  5585  05F7  00B1               	movwf	??_LCDBusyLoop
  5586  05F8                     u5677:	
  5587  05F8  0BB1               	decfsz	??_LCDBusyLoop,f
  5588  05F9  2DF8               	goto	u5677
  5589  05FA  0BB2               	decfsz	??_LCDBusyLoop+1,f
  5590  05FB  2DF8               	goto	u5677
  5591  05FC  2DFD               	nop2
  5592  05FD  0008               	return
  5593  05FE                     __end_of_LCDBusyLoop:	
  5594                           ;lcd_hd44780_pic16.c: 142: return;
  5595                           
  5596                           
  5597                           	psect	intentry
  5598  0004                     __pintentry:	
  5599 ;; *************** function _ISRRoutine *****************
  5600 ;; Defined at:
  5601 ;;		line 273 in file "main.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;		None               void
  5608 ;; Registers used:
  5609 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;Total ram usage:        2 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    4
  5622 ;; This function calls:
  5623 ;;		i1_ShowTime
  5624 ;; This function is called by:
  5625 ;;		Interrupt level 1
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629  0004                     _ISRRoutine:	
  5630                           
  5631                           ;incstack = 0
  5632                           ; Regs used in _ISRRoutine: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  5633  0004  3180               	pagesel	$
  5634  0005  0020               	movlb	0	; select bank0
  5635  0006  087F               	movf	127,w
  5636  0007  00B0               	movwf	??_ISRRoutine+1
  5637                           
  5638                           ;main.c: 276: if (TMR0IE && TMR0IF) {
  5639  0008  1A8B               	btfsc	11,5	;volatile
  5640  0009  1D0B               	btfss	11,2	;volatile
  5641  000A  2833               	goto	i1l127
  5642                           
  5643                           ;main.c: 277: TMR0IF = 0;
  5644  000B  110B               	bcf	11,2	;volatile
  5645                           
  5646                           ;main.c: 278: INTCONbits.T0IE = 0;
  5647  000C  128B               	bcf	11,5	;volatile
  5648                           
  5649                           ;main.c: 279: ++Timer0Count;
  5650  000D  3001               	movlw	1
  5651  000E  07C9               	addwf	_Timer0Count,f	;volatile
  5652  000F  3000               	movlw	0
  5653  0010  3DCA               	addwfc	_Timer0Count+1,f	;volatile
  5654                           
  5655                           ;main.c: 282: if(Timer0Count >= 500) {
  5656  0011  3001               	movlw	1
  5657  0012  024A               	subwf	_Timer0Count+1,w	;volatile
  5658  0013  30F4               	movlw	244
  5659  0014  1903               	skipnz
  5660  0015  0249               	subwf	_Timer0Count,w	;volatile
  5661  0016  1C03               	skipc
  5662  0017  2825               	goto	i1l4738
  5663                           
  5664                           ;main.c: 284: ShowTime(5, 0, 0);
  5665  0018  01A9               	clrf	i1ShowTime@y
  5666  0019  01AA               	clrf	i1ShowTime@clear
  5667  001A  3005               	movlw	5
  5668  001B  318E  26BB  3180   	fcall	i1_ShowTime
  5669                           
  5670                           ;main.c: 286: Timer0Count = 0;
  5671  001E  0020               	movlb	0	; select bank0
  5672  001F  01C9               	clrf	_Timer0Count	;volatile
  5673  0020  01CA               	clrf	_Timer0Count+1	;volatile
  5674                           
  5675                           ;main.c: 287: ++RefreshTime;
  5676  0021  3001               	movlw	1
  5677  0022  07C7               	addwf	_RefreshTime,f	;volatile
  5678  0023  3000               	movlw	0
  5679  0024  3DC8               	addwfc	_RefreshTime+1,f	;volatile
  5680  0025                     i1l4738:	
  5681                           
  5682                           ;main.c: 288: }
  5683                           ;main.c: 290: if(RefreshTime >= 60) {
  5684  0025  3000               	movlw	0
  5685  0026  0248               	subwf	_RefreshTime+1,w	;volatile
  5686  0027  303C               	movlw	60
  5687  0028  1903               	skipnz
  5688  0029  0247               	subwf	_RefreshTime,w	;volatile
  5689  002A  1C03               	skipc
  5690  002B  2832               	goto	i1l4744
  5691                           
  5692                           ;main.c: 293: FlagDateTimeChanged = 1;
  5693  002C  3001               	movlw	1
  5694  002D  00AF               	movwf	??_ISRRoutine
  5695  002E  082F               	movf	??_ISRRoutine,w
  5696  002F  00CB               	movwf	_FlagDateTimeChanged	;volatile
  5697                           
  5698                           ;main.c: 306: RefreshTime = 0;
  5699  0030  01C7               	clrf	_RefreshTime	;volatile
  5700  0031  01C8               	clrf	_RefreshTime+1	;volatile
  5701  0032                     i1l4744:	
  5702                           
  5703                           ;main.c: 307: }
  5704                           ;main.c: 309: INTCONbits.T0IE = 1;
  5705  0032  168B               	bsf	11,5	;volatile
  5706  0033                     i1l127:	
  5707                           ;main.c: 311: }
  5708                           ;main.c: 313: return;
  5709                           
  5710                           ;main.c: 310: return;
  5711                           
  5712  0033  0830               	movf	??_ISRRoutine+1,w
  5713  0034  00FF               	movwf	127
  5714  0035  0009               	retfie
  5715  0036                     __end_of_ISRRoutine:	
  5716                           
  5717                           	psect	text24
  5718  0EBB                     __ptext24:	
  5719 ;; *************** function i1_ShowTime *****************
  5720 ;; Defined at:
  5721 ;;		line 194 in file "main.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  x               1    wreg     unsigned char 
  5724 ;;  y               1    9[BANK0 ] unsigned char 
  5725 ;;  clear           1   10[BANK0 ] unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  x               1   14[BANK0 ] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;		None               void
  5730 ;; Registers used:
  5731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5737 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5740 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5741 ;;Total ram usage:        6 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:    3
  5744 ;; This function calls:
  5745 ;;		i1_LCDByte
  5746 ;;		i1_LCDGotoXY
  5747 ;;		i1_LCDWriteInt
  5748 ;;		i1_LCDWriteString
  5749 ;; This function is called by:
  5750 ;;		_ISRRoutine
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           
  5755                           ;psect for function i1_ShowTime
  5756  0EBB                     i1_ShowTime:	
  5757                           
  5758                           ;incstack = 0
  5759                           ; Regs used in i1_ShowTime: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  5760                           ;i1ShowTime@x stored from wreg
  5761  0EBB  0020               	movlb	0	; select bank0
  5762  0EBC  00AE               	movwf	i1ShowTime@x
  5763                           
  5764                           ;main.c: 195: sati = TimeArray[2];
  5765  0EBD  085B               	movf	_TimeArray+2,w	;volatile
  5766  0EBE  00AB               	movwf	??i1_ShowTime
  5767  0EBF  082B               	movf	??i1_ShowTime,w
  5768  0EC0  00D2               	movwf	_sati	;volatile
  5769                           
  5770                           ;main.c: 196: minute = TimeArray[1];
  5771  0EC1  085A               	movf	_TimeArray+1,w	;volatile
  5772  0EC2  00AB               	movwf	??i1_ShowTime
  5773  0EC3  082B               	movf	??i1_ShowTime,w
  5774  0EC4  00D1               	movwf	_minute	;volatile
  5775                           
  5776                           ;main.c: 198: if(clear) { (LCDByte(0b00000001,0)); }
  5777  0EC5  082A               	movf	i1ShowTime@clear,w
  5778  0EC6  1903               	btfsc	3,2
  5779  0EC7  2ECE               	goto	i1l4708
  5780  0EC8  01F2               	clrf	i1LCDByte@isdata
  5781  0EC9  3001               	movlw	1
  5782  0ECA  318F  2759  318E   	fcall	i1_LCDByte
  5783  0ECD  0020               	movlb	0	; select bank0
  5784  0ECE                     i1l4708:	
  5785                           
  5786                           ;main.c: 200: LCDGotoXY(x,y);
  5787  0ECE  0020               	movlb	0	; select bank0
  5788  0ECF  0829               	movf	i1ShowTime@y,w
  5789  0ED0  00AB               	movwf	??i1_ShowTime
  5790  0ED1  082B               	movf	??i1_ShowTime,w
  5791  0ED2  00F9               	movwf	i1LCDGotoXY@y
  5792  0ED3  082E               	movf	i1ShowTime@x,w
  5793  0ED4  318C  244F  318E   	fcall	i1_LCDGotoXY
  5794                           
  5795                           ;main.c: 201: LCDWriteInt(sati, 2);
  5796  0ED7  0020               	movlb	0	; select bank0
  5797  0ED8  0852               	movf	_sati,w	;volatile
  5798  0ED9  00AB               	movwf	??i1_ShowTime
  5799  0EDA  01AC               	clrf	??i1_ShowTime+1
  5800  0EDB  082B               	movf	??i1_ShowTime,w
  5801  0EDC  00F9               	movwf	i1LCDWriteInt@val
  5802  0EDD  082C               	movf	??i1_ShowTime+1,w
  5803  0EDE  00FA               	movwf	i1LCDWriteInt@val+1
  5804  0EDF  3002               	movlw	2
  5805  0EE0  00AD               	movwf	??i1_ShowTime+2
  5806  0EE1  082D               	movf	??i1_ShowTime+2,w
  5807  0EE2  00FB               	movwf	i1LCDWriteInt@field_length
  5808  0EE3  3185  253F  318E   	fcall	i1_LCDWriteInt
  5809                           
  5810                           ;main.c: 203: if(HourBlink == 1) {
  5811  0EE6  0020               	movlb	0	; select bank0
  5812  0EE7  085D               	movf	_HourBlink,w	;volatile
  5813  0EE8  3A01               	xorlw	1
  5814  0EE9  1D03               	skipz
  5815  0EEA  2EF2               	goto	i1l4718
  5816                           
  5817                           ;main.c: 204: LCDWriteString(":");
  5818  0EEB  3066               	movlw	(STR_4| (0+32768))& (0+255)
  5819  0EEC  318D  2556  318E   	fcall	i1_LCDWriteString
  5820                           
  5821                           ;main.c: 205: HourBlink = 0;
  5822  0EEF  0020               	movlb	0	; select bank0
  5823  0EF0  01DD               	clrf	_HourBlink	;volatile
  5824                           
  5825                           ;main.c: 206: }
  5826  0EF1  2EFB               	goto	i1l4722
  5827  0EF2                     i1l4718:	
  5828                           
  5829                           ;main.c: 207: else {
  5830                           ;main.c: 208: LCDWriteString(" ");
  5831  0EF2  3046               	movlw	((STR_11+3)| (0+32768))& (0+255)
  5832  0EF3  318D  2556  318E   	fcall	i1_LCDWriteString
  5833                           
  5834                           ;main.c: 209: HourBlink = 1;
  5835  0EF6  3001               	movlw	1
  5836  0EF7  0020               	movlb	0	; select bank0
  5837  0EF8  00AB               	movwf	??i1_ShowTime
  5838  0EF9  082B               	movf	??i1_ShowTime,w
  5839  0EFA  00DD               	movwf	_HourBlink	;volatile
  5840  0EFB                     i1l4722:	
  5841                           
  5842                           ;main.c: 210: }
  5843                           ;main.c: 212: LCDWriteInt(minute, 2);
  5844  0EFB  0851               	movf	_minute,w	;volatile
  5845  0EFC  00AB               	movwf	??i1_ShowTime
  5846  0EFD  01AC               	clrf	??i1_ShowTime+1
  5847  0EFE  082B               	movf	??i1_ShowTime,w
  5848  0EFF  00F9               	movwf	i1LCDWriteInt@val
  5849  0F00  082C               	movf	??i1_ShowTime+1,w
  5850  0F01  00FA               	movwf	i1LCDWriteInt@val+1
  5851  0F02  3002               	movlw	2
  5852  0F03  00AD               	movwf	??i1_ShowTime+2
  5853  0F04  082D               	movf	??i1_ShowTime+2,w
  5854  0F05  00FB               	movwf	i1LCDWriteInt@field_length
  5855  0F06  3185  253F         	fcall	i1_LCDWriteInt
  5856  0F08  0008               	return
  5857  0F09                     __end_ofi1_ShowTime:	
  5858                           
  5859                           	psect	text25
  5860  0D56                     __ptext25:	
  5861 ;; *************** function i1_LCDWriteString *****************
  5862 ;; Defined at:
  5863 ;;		line 257 in file "lcd_hd44780_pic16.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  msg             1    wreg     PTR const unsigned char 
  5866 ;;		 -> STR_17(16), STR_16(16), STR_15(2), STR_14(2), 
  5867 ;;		 -> STR_13(2), STR_12(5), STR_11(5), STR_10(5), 
  5868 ;;		 -> STR_9(5), STR_8(5), STR_7(5), STR_6(5), 
  5869 ;;		 -> STR_5(2), STR_4(2), STR_3(17), STR_2(15), 
  5870 ;;		 -> STR_1(16), 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  msg             1   11[COMMON] PTR const unsigned char 
  5873 ;;		 -> STR_17(16), STR_16(16), STR_15(2), STR_14(2), 
  5874 ;;		 -> STR_13(2), STR_12(5), STR_11(5), STR_10(5), 
  5875 ;;		 -> STR_9(5), STR_8(5), STR_7(5), STR_6(5), 
  5876 ;;		 -> STR_5(2), STR_4(2), STR_3(17), STR_2(15), 
  5877 ;;		 -> STR_1(16), 
  5878 ;;  LCDWriteStri    1   10[COMMON] char 
  5879 ;; Return value:  Size  Location     Type
  5880 ;;		None               void
  5881 ;; Registers used:
  5882 ;;		wreg, status,2, status,0, pclath, cstack
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5891 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;Total ram usage:        3 bytes
  5893 ;; Hardware stack levels used:    1
  5894 ;; Hardware stack levels required when called:    2
  5895 ;; This function calls:
  5896 ;;		i1_LCDByte
  5897 ;; This function is called by:
  5898 ;;		i1_ShowTime
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           
  5903                           ;psect for function i1_LCDWriteString
  5904  0D56                     i1_LCDWriteString:	
  5905                           
  5906                           ;incstack = 0
  5907                           ; Regs used in i1_LCDWriteString: [wreg+status,2+status,0+pclath+cstack]
  5908                           ;i1LCDWriteString@msg stored from wreg
  5909  0D56  00FB               	movwf	i1LCDWriteString@msg
  5910  0D57                     i1l4648:	
  5911                           ;lcd_hd44780_pic16.c: 287: while(*msg!='\0')
  5912                           
  5913  0D57  087B               	movf	i1LCDWriteString@msg,w
  5914  0D58  3186               	movlp	high __stringtab
  5915  0D59  000A               	callw
  5916  0D5A  318D               	pagesel	$	;select current page
  5917  0D5B  3800               	iorlw	0
  5918  0D5C  1903               	btfsc	3,2
  5919  0D5D  2D97               	goto	u547_20
  5920                           
  5921                           ;lcd_hd44780_pic16.c: 288: {
  5922                           ;lcd_hd44780_pic16.c: 290: if(*msg=='%')
  5923  0D5E  087B               	movf	i1LCDWriteString@msg,w
  5924  0D5F  3186               	movlp	high __stringtab
  5925  0D60  000A               	callw
  5926  0D61  318D               	pagesel	$	;select current page
  5927  0D62  3A25               	xorlw	37
  5928  0D63  1D03               	skipz
  5929  0D64  2D89               	goto	i1l4644
  5930                           
  5931                           ;lcd_hd44780_pic16.c: 291: {
  5932                           ;lcd_hd44780_pic16.c: 292: msg++;
  5933  0D65  3001               	movlw	1
  5934  0D66  00F9               	movwf	??i1_LCDWriteString
  5935  0D67  0879               	movf	??i1_LCDWriteString,w
  5936  0D68  07FB               	addwf	i1LCDWriteString@msg,f
  5937                           
  5938                           ;lcd_hd44780_pic16.c: 293: int8_t cc=*msg-'0';
  5939  0D69  087B               	movf	i1LCDWriteString@msg,w
  5940  0D6A  3186               	movlp	high __stringtab
  5941  0D6B  000A               	callw
  5942  0D6C  318D               	pagesel	$	;select current page
  5943  0D6D  3ED0               	addlw	-48
  5944  0D6E  00F9               	movwf	??i1_LCDWriteString
  5945  0D6F  0879               	movf	??i1_LCDWriteString,w
  5946  0D70  00FA               	movwf	i1LCDWriteString@cc
  5947                           
  5948                           ;lcd_hd44780_pic16.c: 295: if(cc>=0 && cc<=7)
  5949  0D71  1BFA               	btfsc	i1LCDWriteString@cc,7
  5950  0D72  2D7C               	goto	i1l4642
  5951  0D73  087A               	movf	i1LCDWriteString@cc,w
  5952  0D74  3A80               	xorlw	128
  5953  0D75  3E78               	addlw	-136
  5954  0D76  1803               	skipnc
  5955  0D77  2D7C               	goto	i1l4642
  5956                           
  5957                           ;lcd_hd44780_pic16.c: 296: {
  5958                           ;lcd_hd44780_pic16.c: 297: (LCDByte(cc,1));
  5959  0D78  01F2               	clrf	i1LCDByte@isdata
  5960  0D79  0AF2               	incf	i1LCDByte@isdata,f
  5961  0D7A  087A               	movf	i1LCDWriteString@cc,w
  5962  0D7B  2D8F               	goto	L5
  5963  0D7C                     i1l4642:	
  5964                           ;lcd_hd44780_pic16.c: 298: }
  5965                           
  5966                           
  5967                           ;lcd_hd44780_pic16.c: 299: else
  5968                           ;lcd_hd44780_pic16.c: 300: {
  5969                           ;lcd_hd44780_pic16.c: 301: (LCDByte('%',1));
  5970  0D7C  01F2               	clrf	i1LCDByte@isdata
  5971  0D7D  0AF2               	incf	i1LCDByte@isdata,f
  5972  0D7E  3025               	movlw	37
  5973  0D7F  318F  2759  318D   	fcall	i1_LCDByte
  5974                           
  5975                           ;lcd_hd44780_pic16.c: 302: (LCDByte(*msg,1));
  5976  0D82  01F2               	clrf	i1LCDByte@isdata
  5977  0D83  0AF2               	incf	i1LCDByte@isdata,f
  5978  0D84  087B               	movf	i1LCDWriteString@msg,w
  5979  0D85  3186               	movlp	high __stringtab
  5980  0D86  000A               	callw
  5981  0D87  318D               	pagesel	$	;select current page
  5982  0D88  2D8F               	goto	L5
  5983  0D89                     i1l4644:	
  5984                           ;lcd_hd44780_pic16.c: 303: }
  5985                           ;lcd_hd44780_pic16.c: 304: }
  5986                           
  5987                           
  5988                           ;lcd_hd44780_pic16.c: 305: else
  5989                           ;lcd_hd44780_pic16.c: 306: {
  5990                           ;lcd_hd44780_pic16.c: 307: (LCDByte(*msg,1));
  5991  0D89  01F2               	clrf	i1LCDByte@isdata
  5992  0D8A  0AF2               	incf	i1LCDByte@isdata,f
  5993  0D8B  087B               	movf	i1LCDWriteString@msg,w
  5994  0D8C  3186               	movlp	high __stringtab
  5995  0D8D  000A               	callw
  5996  0D8E  318D               	pagesel	$	;select current page
  5997  0D8F                     L5:	
  5998  0D8F  318F  2759  318D   	fcall	i1_LCDByte
  5999                           
  6000                           ;lcd_hd44780_pic16.c: 308: }
  6001                           ;lcd_hd44780_pic16.c: 309: msg++;
  6002  0D92  3001               	movlw	1
  6003  0D93  00F9               	movwf	??i1_LCDWriteString
  6004  0D94  0879               	movf	??i1_LCDWriteString,w
  6005  0D95  07FB               	addwf	i1LCDWriteString@msg,f
  6006  0D96  2D57               	goto	i1l4648
  6007  0D97                     u547_20:	
  6008  0D97  0020               	movlb	0	; select bank0
  6009  0D98  0008               	return
  6010  0D99                     __end_ofi1_LCDWriteString:	
  6011                           
  6012                           	psect	text26
  6013  053F                     __ptext26:	
  6014 ;; *************** function i1_LCDWriteInt *****************
  6015 ;; Defined at:
  6016 ;;		line 313 in file "lcd_hd44780_pic16.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  val             2    9[COMMON] int 
  6019 ;;  field_length    1   11[COMMON] char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  LCDWriteInt     5    0[BANK0 ] unsigned char [5]
  6022 ;;  LCDWriteInt     2    7[BANK0 ] int 
  6023 ;;  LCDWriteInt     2    5[BANK0 ] int 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;		None               void
  6026 ;; Registers used:
  6027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6033 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Totals:         5       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;Total ram usage:       14 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    2
  6040 ;; This function calls:
  6041 ;;		i1_LCDByte
  6042 ;;		i1___awdiv
  6043 ;;		i1___awmod
  6044 ;; This function is called by:
  6045 ;;		i1_ShowTime
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function i1_LCDWriteInt
  6051  053F                     i1_LCDWriteInt:	
  6052                           
  6053                           ;lcd_hd44780_pic16.c: 326: char str[5]={0,0,0,0,0};
  6054                           
  6055                           ;incstack = 0
  6056                           ; Regs used in i1_LCDWriteInt: [wreg-fsr1h+status,2+status,0+btemp+1+pclath+cstack]
  6057  053F  3042               	movlw	low LCDWriteInt@F2719
  6058  0540  0086               	movwf	6
  6059  0541  3000               	movlw	high LCDWriteInt@F2719
  6060  0542  0087               	movwf	7
  6061  0543  3020               	movlw	low i1LCDWriteInt@str
  6062  0544  0084               	movwf	4
  6063  0545  3000               	movlw	high i1LCDWriteInt@str
  6064  0546  0085               	movwf	5
  6065  0547  3005               	movlw	5
  6066  0548  00FF               	movwf	127
  6067  0549                     u548_20:	
  6068  0549  0016               	moviw fsr1++
  6069  054A  001A               	movwi fsr0++
  6070  054B  0BFF               	decfsz	127,f
  6071  054C  2D49               	goto	u548_20
  6072                           
  6073                           ;lcd_hd44780_pic16.c: 327: int i=4,j=0;
  6074  054D  3004               	movlw	4
  6075  054E  0020               	movlb	0	; select bank0
  6076  054F  00A7               	movwf	i1LCDWriteInt@i
  6077  0550  3000               	movlw	0
  6078  0551  00A8               	movwf	i1LCDWriteInt@i+1
  6079  0552  01A5               	clrf	i1LCDWriteInt@j
  6080  0553  01A6               	clrf	i1LCDWriteInt@j+1
  6081                           
  6082                           ;lcd_hd44780_pic16.c: 330: if(val<0)
  6083  0554  1FFA               	btfss	i1LCDWriteInt@val+1,7
  6084  0555  2D61               	goto	i1l4668
  6085                           
  6086                           ;lcd_hd44780_pic16.c: 331: {
  6087                           ;lcd_hd44780_pic16.c: 332: (LCDByte('-',1));
  6088  0556  01F2               	clrf	i1LCDByte@isdata
  6089  0557  0AF2               	incf	i1LCDByte@isdata,f
  6090  0558  302D               	movlw	45
  6091  0559  318F  2759  3185   	fcall	i1_LCDByte
  6092                           
  6093                           ;lcd_hd44780_pic16.c: 333: val=val*-1;
  6094  055C  09F9               	comf	i1LCDWriteInt@val,f
  6095  055D  09FA               	comf	i1LCDWriteInt@val+1,f
  6096  055E  0AF9               	incf	i1LCDWriteInt@val,f
  6097  055F  1903               	skipnz
  6098  0560  0AFA               	incf	i1LCDWriteInt@val+1,f
  6099  0561                     i1l4668:	
  6100                           ;lcd_hd44780_pic16.c: 334: }
  6101                           ;lcd_hd44780_pic16.c: 336: while(val)
  6102                           
  6103  0561  087A               	movf	i1LCDWriteInt@val+1,w
  6104  0562  0479               	iorwf	i1LCDWriteInt@val,w
  6105  0563  1903               	btfsc	3,2
  6106  0564  2D94               	goto	i1l4670
  6107                           
  6108                           ;lcd_hd44780_pic16.c: 337: {
  6109                           ;lcd_hd44780_pic16.c: 338: str[i]=val%10;
  6110  0565  300A               	movlw	10
  6111  0566  00F0               	movwf	i1___awmod@divisor
  6112  0567  3000               	movlw	0
  6113  0568  00F1               	movwf	i1___awmod@divisor+1
  6114  0569  087A               	movf	i1LCDWriteInt@val+1,w
  6115  056A  01F3               	clrf	i1___awmod@dividend+1
  6116  056B  07F3               	addwf	i1___awmod@dividend+1,f
  6117  056C  0879               	movf	i1LCDWriteInt@val,w
  6118  056D  01F2               	clrf	i1___awmod@dividend
  6119  056E  07F2               	addwf	i1___awmod@dividend,f
  6120  056F  318D  25DF  3185   	fcall	i1___awmod
  6121  0572  0870               	movf	?i1___awmod,w
  6122  0573  00FC               	movwf	??i1_LCDWriteInt
  6123  0574  0020               	movlb	0	; select bank0
  6124  0575  0827               	movf	i1LCDWriteInt@i,w
  6125  0576  3E20               	addlw	i1LCDWriteInt@str& (0+255)
  6126  0577  0086               	movwf	6
  6127  0578  0187               	clrf	7
  6128  0579  087C               	movf	??i1_LCDWriteInt,w
  6129  057A  0081               	movwf	1
  6130                           
  6131                           ;lcd_hd44780_pic16.c: 339: val=val/10;
  6132  057B  300A               	movlw	10
  6133  057C  00F0               	movwf	i1___awdiv@divisor
  6134  057D  3000               	movlw	0
  6135  057E  00F1               	movwf	i1___awdiv@divisor+1
  6136  057F  087A               	movf	i1LCDWriteInt@val+1,w
  6137  0580  01F3               	clrf	i1___awdiv@dividend+1
  6138  0581  07F3               	addwf	i1___awdiv@dividend+1,f
  6139  0582  0879               	movf	i1LCDWriteInt@val,w
  6140  0583  01F2               	clrf	i1___awdiv@dividend
  6141  0584  07F2               	addwf	i1___awdiv@dividend,f
  6142  0585  318F  27AC  3185   	fcall	i1___awdiv
  6143  0588  0871               	movf	?i1___awdiv+1,w
  6144  0589  01FA               	clrf	i1LCDWriteInt@val+1
  6145  058A  07FA               	addwf	i1LCDWriteInt@val+1,f
  6146  058B  0870               	movf	?i1___awdiv,w
  6147  058C  01F9               	clrf	i1LCDWriteInt@val
  6148  058D  07F9               	addwf	i1LCDWriteInt@val,f
  6149                           
  6150                           ;lcd_hd44780_pic16.c: 340: i--;
  6151  058E  30FF               	movlw	255
  6152  058F  0020               	movlb	0	; select bank0
  6153  0590  07A7               	addwf	i1LCDWriteInt@i,f
  6154  0591  30FF               	movlw	255
  6155  0592  3DA8               	addwfc	i1LCDWriteInt@i+1,f
  6156  0593  2D61               	goto	i1l4668
  6157  0594                     i1l4670:	
  6158                           
  6159                           ;lcd_hd44780_pic16.c: 341: }
  6160                           ;lcd_hd44780_pic16.c: 342: if(field_length==-1)
  6161  0594  087B               	movf	i1LCDWriteInt@field_length,w
  6162  0595  3AFF               	xorlw	255
  6163  0596  1903               	btfsc	3,2
  6164  0597  2D9E               	goto	i1l4676
  6165  0598  2DA9               	goto	i1l4678
  6166  0599                     i1l4674:	
  6167                           ;lcd_hd44780_pic16.c: 343: while(str[j]==0) j++;
  6168                           
  6169  0599  3001               	movlw	1
  6170  059A  0020               	movlb	0	; select bank0
  6171  059B  07A5               	addwf	i1LCDWriteInt@j,f
  6172  059C  3000               	movlw	0
  6173  059D  3DA6               	addwfc	i1LCDWriteInt@j+1,f
  6174  059E                     i1l4676:	
  6175  059E  0020               	movlb	0	; select bank0
  6176  059F  0825               	movf	i1LCDWriteInt@j,w
  6177  05A0  3E20               	addlw	i1LCDWriteInt@str& (0+255)
  6178  05A1  0086               	movwf	6
  6179  05A2  0187               	clrf	7
  6180  05A3  0801               	movf	1,w
  6181  05A4  3A00               	xorlw	0
  6182  05A5  1903               	skipnz
  6183  05A6  2D99               	goto	i1l4674
  6184  05A7  0021               	movlb	1	; select bank1
  6185  05A8  2DBA               	goto	i1l181
  6186  05A9                     i1l4678:	
  6187                           
  6188                           ;lcd_hd44780_pic16.c: 344: else
  6189                           ;lcd_hd44780_pic16.c: 345: j=5-field_length;
  6190  05A9  087B               	movf	i1LCDWriteInt@field_length,w
  6191  05AA  00FC               	movwf	??i1_LCDWriteInt
  6192  05AB  01FD               	clrf	??i1_LCDWriteInt+1
  6193  05AC  1BFC               	btfsc	??i1_LCDWriteInt,7
  6194  05AD  03FD               	decf	??i1_LCDWriteInt+1,f
  6195  05AE  09FC               	comf	??i1_LCDWriteInt,f
  6196  05AF  09FD               	comf	??i1_LCDWriteInt+1,f
  6197  05B0  0AFC               	incf	??i1_LCDWriteInt,f
  6198  05B1  1903               	skipnz
  6199  05B2  0AFD               	incf	??i1_LCDWriteInt+1,f
  6200  05B3  087C               	movf	??i1_LCDWriteInt,w
  6201  05B4  3E05               	addlw	5
  6202  05B5  0020               	movlb	0	; select bank0
  6203  05B6  00A5               	movwf	i1LCDWriteInt@j
  6204  05B7  3000               	movlw	0
  6205  05B8  3D7D               	addwfc	??i1_LCDWriteInt+1,w
  6206  05B9  00A6               	movwf	i1LCDWriteInt@j+1
  6207  05BA                     i1l181:	
  6208                           
  6209                           ;lcd_hd44780_pic16.c: 348: for(i=j;i<5;i++)
  6210  05BA  0826               	movf	i1LCDWriteInt@j+1,w
  6211  05BB  01A8               	clrf	i1LCDWriteInt@i+1
  6212  05BC  07A8               	addwf	i1LCDWriteInt@i+1,f
  6213  05BD  0825               	movf	i1LCDWriteInt@j,w
  6214  05BE  01A7               	clrf	i1LCDWriteInt@i
  6215  05BF  07A7               	addwf	i1LCDWriteInt@i,f
  6216  05C0                     L6:	
  6217  05C0  0828               	movf	i1LCDWriteInt@i+1,w
  6218  05C1  3A80               	xorlw	128
  6219  05C2  00FF               	movwf	127
  6220  05C3  3080               	movlw	128
  6221  05C4  027F               	subwf	127,w
  6222  05C5  1D03               	skipz
  6223  05C6  2DC9               	goto	u553_25
  6224  05C7  3005               	movlw	5
  6225  05C8  0227               	subwf	i1LCDWriteInt@i,w
  6226  05C9                     u553_25:	
  6227  05C9  1803               	btfsc	3,0
  6228  05CA  0008               	return
  6229                           
  6230                           ;lcd_hd44780_pic16.c: 349: {
  6231                           ;lcd_hd44780_pic16.c: 350: (LCDByte(48+str[i],1));
  6232  05CB  01F2               	clrf	i1LCDByte@isdata
  6233  05CC  0AF2               	incf	i1LCDByte@isdata,f
  6234  05CD  0020               	movlb	0	; select bank0
  6235  05CE  0827               	movf	i1LCDWriteInt@i,w
  6236  05CF  3E20               	addlw	i1LCDWriteInt@str& (0+255)
  6237  05D0  0086               	movwf	6
  6238  05D1  0187               	clrf	7
  6239  05D2  0801               	movf	1,w
  6240  05D3  3E30               	addlw	48
  6241  05D4  318F  2759  3185   	fcall	i1_LCDByte
  6242  05D7  3001               	movlw	1
  6243  05D8  0020               	movlb	0	; select bank0
  6244  05D9  07A7               	addwf	i1LCDWriteInt@i,f
  6245  05DA  3000               	movlw	0
  6246  05DB  3DA8               	addwfc	i1LCDWriteInt@i+1,f
  6247  05DC  2DC0               	goto	L6
  6248  05DD                     __end_ofi1_LCDWriteInt:	
  6249                           
  6250                           	psect	text27
  6251  0DDF                     __ptext27:	
  6252 ;; *************** function i1___awmod *****************
  6253 ;; Defined at:
  6254 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  divisor         2    0[COMMON] int 
  6257 ;;  dividend        2    2[COMMON] int 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  __awmod         1    6[COMMON] unsigned char 
  6260 ;;  __awmod         1    5[COMMON] unsigned char 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  2    0[COMMON] int 
  6263 ;; Registers used:
  6264 ;;		wreg, status,2, status,0
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;Total ram usage:        7 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		i1_LCDWriteInt
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           
  6284                           ;psect for function i1___awmod
  6285  0DDF                     i1___awmod:	
  6286                           
  6287                           ;incstack = 0
  6288                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  6289  0DDF  01F6               	clrf	i1___awmod@sign
  6290  0DE0  1FF3               	btfss	i1___awmod@dividend+1,7
  6291  0DE1  2DE9               	goto	i1l4570
  6292  0DE2  09F2               	comf	i1___awmod@dividend,f
  6293  0DE3  09F3               	comf	i1___awmod@dividend+1,f
  6294  0DE4  0AF2               	incf	i1___awmod@dividend,f
  6295  0DE5  1903               	skipnz
  6296  0DE6  0AF3               	incf	i1___awmod@dividend+1,f
  6297  0DE7  01F6               	clrf	i1___awmod@sign
  6298  0DE8  0AF6               	incf	i1___awmod@sign,f
  6299  0DE9                     i1l4570:	
  6300  0DE9  1FF1               	btfss	i1___awmod@divisor+1,7
  6301  0DEA  2DF0               	goto	i1l4574
  6302  0DEB  09F0               	comf	i1___awmod@divisor,f
  6303  0DEC  09F1               	comf	i1___awmod@divisor+1,f
  6304  0DED  0AF0               	incf	i1___awmod@divisor,f
  6305  0DEE  1903               	skipnz
  6306  0DEF  0AF1               	incf	i1___awmod@divisor+1,f
  6307  0DF0                     i1l4574:	
  6308  0DF0  0871               	movf	i1___awmod@divisor+1,w
  6309  0DF1  0470               	iorwf	i1___awmod@divisor,w
  6310  0DF2  1903               	skipnz
  6311  0DF3  2E17               	goto	i1l4592
  6312  0DF4  01F5               	clrf	i1___awmod@counter
  6313  0DF5  0AF5               	incf	i1___awmod@counter,f
  6314  0DF6                     i1l4582:	
  6315  0DF6  1BF1               	btfsc	i1___awmod@divisor+1,7
  6316  0DF7  2E02               	goto	i1l4584
  6317  0DF8  3001               	movlw	1
  6318  0DF9                     u534_25:	
  6319  0DF9  35F0               	lslf	i1___awmod@divisor,f
  6320  0DFA  0DF1               	rlf	i1___awmod@divisor+1,f
  6321  0DFB  0B89               	decfsz	9,f
  6322  0DFC  2DF9               	goto	u534_25
  6323  0DFD  3001               	movlw	1
  6324  0DFE  00F4               	movwf	??i1___awmod
  6325  0DFF  0874               	movf	??i1___awmod,w
  6326  0E00  07F5               	addwf	i1___awmod@counter,f
  6327  0E01  2DF6               	goto	i1l4582
  6328  0E02                     i1l4584:	
  6329  0E02  0871               	movf	i1___awmod@divisor+1,w
  6330  0E03  0273               	subwf	i1___awmod@dividend+1,w
  6331  0E04  1D03               	skipz
  6332  0E05  2E08               	goto	u536_25
  6333  0E06  0870               	movf	i1___awmod@divisor,w
  6334  0E07  0272               	subwf	i1___awmod@dividend,w
  6335  0E08                     u536_25:	
  6336  0E08  1C03               	skipc
  6337  0E09  2E0E               	goto	i1l4588
  6338  0E0A  0870               	movf	i1___awmod@divisor,w
  6339  0E0B  02F2               	subwf	i1___awmod@dividend,f
  6340  0E0C  0871               	movf	i1___awmod@divisor+1,w
  6341  0E0D  3BF3               	subwfb	i1___awmod@dividend+1,f
  6342  0E0E                     i1l4588:	
  6343  0E0E  3001               	movlw	1
  6344  0E0F                     u537_25:	
  6345  0E0F  36F1               	lsrf	i1___awmod@divisor+1,f
  6346  0E10  0CF0               	rrf	i1___awmod@divisor,f
  6347  0E11  0B89               	decfsz	9,f
  6348  0E12  2E0F               	goto	u537_25
  6349  0E13  3001               	movlw	1
  6350  0E14  02F5               	subwf	i1___awmod@counter,f
  6351  0E15  1D03               	btfss	3,2
  6352  0E16  2E02               	goto	i1l4584
  6353  0E17                     i1l4592:	
  6354  0E17  0876               	movf	i1___awmod@sign,w
  6355  0E18  1903               	btfsc	3,2
  6356  0E19  2E1F               	goto	i1l4596
  6357  0E1A  09F2               	comf	i1___awmod@dividend,f
  6358  0E1B  09F3               	comf	i1___awmod@dividend+1,f
  6359  0E1C  0AF2               	incf	i1___awmod@dividend,f
  6360  0E1D  1903               	skipnz
  6361  0E1E  0AF3               	incf	i1___awmod@dividend+1,f
  6362  0E1F                     i1l4596:	
  6363  0E1F  0873               	movf	i1___awmod@dividend+1,w
  6364  0E20  01F1               	clrf	?i1___awmod+1
  6365  0E21  07F1               	addwf	?i1___awmod+1,f
  6366  0E22  0872               	movf	i1___awmod@dividend,w
  6367  0E23  01F0               	clrf	?i1___awmod
  6368  0E24  07F0               	addwf	?i1___awmod,f
  6369  0E25  0020               	movlb	0	; select bank0
  6370  0E26  0008               	return
  6371  0E27                     __end_ofi1___awmod:	
  6372                           
  6373                           	psect	text28
  6374  0FAC                     __ptext28:	
  6375 ;; *************** function i1___awdiv *****************
  6376 ;; Defined at:
  6377 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awdiv.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  divisor         2    0[COMMON] int 
  6380 ;;  dividend        2    2[COMMON] int 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  __awdiv         2    7[COMMON] int 
  6383 ;;  __awdiv         1    6[COMMON] unsigned char 
  6384 ;;  __awdiv         1    5[COMMON] unsigned char 
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  2    0[COMMON] int 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6397 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;Total ram usage:        9 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		i1_LCDWriteInt
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           
  6408                           ;psect for function i1___awdiv
  6409  0FAC                     i1___awdiv:	
  6410                           
  6411                           ;incstack = 0
  6412                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6413  0FAC  01F6               	clrf	i1___awdiv@sign
  6414  0FAD  1FF1               	btfss	i1___awdiv@divisor+1,7
  6415  0FAE  2FB6               	goto	i1l4526
  6416  0FAF  09F0               	comf	i1___awdiv@divisor,f
  6417  0FB0  09F1               	comf	i1___awdiv@divisor+1,f
  6418  0FB1  0AF0               	incf	i1___awdiv@divisor,f
  6419  0FB2  1903               	skipnz
  6420  0FB3  0AF1               	incf	i1___awdiv@divisor+1,f
  6421  0FB4  01F6               	clrf	i1___awdiv@sign
  6422  0FB5  0AF6               	incf	i1___awdiv@sign,f
  6423  0FB6                     i1l4526:	
  6424  0FB6  1FF3               	btfss	i1___awdiv@dividend+1,7
  6425  0FB7  2FC1               	goto	i1l4532
  6426  0FB8  09F2               	comf	i1___awdiv@dividend,f
  6427  0FB9  09F3               	comf	i1___awdiv@dividend+1,f
  6428  0FBA  0AF2               	incf	i1___awdiv@dividend,f
  6429  0FBB  1903               	skipnz
  6430  0FBC  0AF3               	incf	i1___awdiv@dividend+1,f
  6431  0FBD  3001               	movlw	1
  6432  0FBE  00F4               	movwf	??i1___awdiv
  6433  0FBF  0874               	movf	??i1___awdiv,w
  6434  0FC0  06F6               	xorwf	i1___awdiv@sign,f
  6435  0FC1                     i1l4532:	
  6436  0FC1  01F7               	clrf	i1___awdiv@quotient
  6437  0FC2  01F8               	clrf	i1___awdiv@quotient+1
  6438  0FC3  0871               	movf	i1___awdiv@divisor+1,w
  6439  0FC4  0470               	iorwf	i1___awdiv@divisor,w
  6440  0FC5  1903               	skipnz
  6441  0FC6  2FF0               	goto	i1l4554
  6442  0FC7  01F5               	clrf	i1___awdiv@counter
  6443  0FC8  0AF5               	incf	i1___awdiv@counter,f
  6444  0FC9                     i1l4542:	
  6445  0FC9  1BF1               	btfsc	i1___awdiv@divisor+1,7
  6446  0FCA  2FD5               	goto	i1l4544
  6447  0FCB  3001               	movlw	1
  6448  0FCC                     u524_25:	
  6449  0FCC  35F0               	lslf	i1___awdiv@divisor,f
  6450  0FCD  0DF1               	rlf	i1___awdiv@divisor+1,f
  6451  0FCE  0B89               	decfsz	9,f
  6452  0FCF  2FCC               	goto	u524_25
  6453  0FD0  3001               	movlw	1
  6454  0FD1  00F4               	movwf	??i1___awdiv
  6455  0FD2  0874               	movf	??i1___awdiv,w
  6456  0FD3  07F5               	addwf	i1___awdiv@counter,f
  6457  0FD4  2FC9               	goto	i1l4542
  6458  0FD5                     i1l4544:	
  6459  0FD5  3001               	movlw	1
  6460  0FD6                     u526_25:	
  6461  0FD6  35F7               	lslf	i1___awdiv@quotient,f
  6462  0FD7  0DF8               	rlf	i1___awdiv@quotient+1,f
  6463  0FD8  0B89               	decfsz	9,f
  6464  0FD9  2FD6               	goto	u526_25
  6465  0FDA  0871               	movf	i1___awdiv@divisor+1,w
  6466  0FDB  0273               	subwf	i1___awdiv@dividend+1,w
  6467  0FDC  1D03               	skipz
  6468  0FDD  2FE0               	goto	u527_25
  6469  0FDE  0870               	movf	i1___awdiv@divisor,w
  6470  0FDF  0272               	subwf	i1___awdiv@dividend,w
  6471  0FE0                     u527_25:	
  6472  0FE0  1C03               	skipc
  6473  0FE1  2FE7               	goto	i1l4550
  6474  0FE2  0870               	movf	i1___awdiv@divisor,w
  6475  0FE3  02F2               	subwf	i1___awdiv@dividend,f
  6476  0FE4  0871               	movf	i1___awdiv@divisor+1,w
  6477  0FE5  3BF3               	subwfb	i1___awdiv@dividend+1,f
  6478  0FE6  1477               	bsf	i1___awdiv@quotient,0
  6479  0FE7                     i1l4550:	
  6480  0FE7  3001               	movlw	1
  6481  0FE8                     u528_25:	
  6482  0FE8  36F1               	lsrf	i1___awdiv@divisor+1,f
  6483  0FE9  0CF0               	rrf	i1___awdiv@divisor,f
  6484  0FEA  0B89               	decfsz	9,f
  6485  0FEB  2FE8               	goto	u528_25
  6486  0FEC  3001               	movlw	1
  6487  0FED  02F5               	subwf	i1___awdiv@counter,f
  6488  0FEE  1D03               	btfss	3,2
  6489  0FEF  2FD5               	goto	i1l4544
  6490  0FF0                     i1l4554:	
  6491  0FF0  0876               	movf	i1___awdiv@sign,w
  6492  0FF1  1903               	btfsc	3,2
  6493  0FF2  2FF8               	goto	i1l4558
  6494  0FF3  09F7               	comf	i1___awdiv@quotient,f
  6495  0FF4  09F8               	comf	i1___awdiv@quotient+1,f
  6496  0FF5  0AF7               	incf	i1___awdiv@quotient,f
  6497  0FF6  1903               	skipnz
  6498  0FF7  0AF8               	incf	i1___awdiv@quotient+1,f
  6499  0FF8                     i1l4558:	
  6500  0FF8  0878               	movf	i1___awdiv@quotient+1,w
  6501  0FF9  01F1               	clrf	?i1___awdiv+1
  6502  0FFA  07F1               	addwf	?i1___awdiv+1,f
  6503  0FFB  0877               	movf	i1___awdiv@quotient,w
  6504  0FFC  01F0               	clrf	?i1___awdiv
  6505  0FFD  07F0               	addwf	?i1___awdiv,f
  6506  0FFE  0020               	movlb	0	; select bank0
  6507  0FFF  0008               	return
  6508  1000                     __end_ofi1___awdiv:	
  6509                           
  6510                           	psect	text29
  6511  0C4F                     __ptext29:	
  6512 ;; *************** function i1_LCDGotoXY *****************
  6513 ;; Defined at:
  6514 ;;		line 358 in file "lcd_hd44780_pic16.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;  x               1    wreg     unsigned char 
  6517 ;;  y               1    9[COMMON] unsigned char 
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;  x               1   11[COMMON] unsigned char 
  6520 ;; Return value:  Size  Location     Type
  6521 ;;		None               void
  6522 ;; Registers used:
  6523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6529 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6533 ;;Total ram usage:        3 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    2
  6536 ;; This function calls:
  6537 ;;		i1_LCDByte
  6538 ;; This function is called by:
  6539 ;;		i1_ShowTime
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           
  6544                           ;psect for function i1_LCDGotoXY
  6545  0C4F                     i1_LCDGotoXY:	
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in i1_LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6549                           ;i1LCDGotoXY@x stored from wreg
  6550  0C4F  00FB               	movwf	i1LCDGotoXY@x
  6551                           
  6552                           ;lcd_hd44780_pic16.c: 360: if(x>=20) return;
  6553  0C50  3014               	movlw	20
  6554  0C51  027B               	subwf	i1LCDGotoXY@x,w
  6555  0C52  1803               	btfsc	3,0
  6556  0C53  0008               	return
  6557  0C54  2C5F               	goto	i1l4700
  6558  0C55                     i1l192:	
  6559                           ;lcd_hd44780_pic16.c: 368: case 1:
  6560                           
  6561                           ;lcd_hd44780_pic16.c: 367: break;
  6562                           
  6563                           ;lcd_hd44780_pic16.c: 365: {
  6564                           ;lcd_hd44780_pic16.c: 366: case 0:
  6565                           
  6566                           ;lcd_hd44780_pic16.c: 364: switch(y)
  6567                           
  6568                           
  6569                           ;lcd_hd44780_pic16.c: 369: x|=0b01000000;
  6570  0C55  177B               	bsf	i1LCDGotoXY@x,6
  6571  0C56  2C5D               	goto	i1l4698
  6572  0C57                     i1l4694:	
  6573                           ;lcd_hd44780_pic16.c: 371: case 2:
  6574                           
  6575                           ;lcd_hd44780_pic16.c: 370: break;
  6576                           
  6577                           
  6578                           ;lcd_hd44780_pic16.c: 372: x+=0x14;
  6579  0C57  3014               	movlw	20
  6580  0C58  2C5A               	goto	L9
  6581  0C59                     i1l4696:	
  6582                           ;lcd_hd44780_pic16.c: 374: case 3:
  6583                           
  6584                           ;lcd_hd44780_pic16.c: 373: break;
  6585                           
  6586                           
  6587                           ;lcd_hd44780_pic16.c: 375: x+=0x54;
  6588  0C59  3054               	movlw	84
  6589  0C5A                     L9:	
  6590  0C5A  00FA               	movwf	??i1_LCDGotoXY
  6591  0C5B  087A               	movf	??i1_LCDGotoXY,w
  6592  0C5C  07FB               	addwf	i1LCDGotoXY@x,f
  6593  0C5D                     i1l4698:	
  6594                           ;lcd_hd44780_pic16.c: 376: break;
  6595                           
  6596                           
  6597                           ;lcd_hd44780_pic16.c: 377: }
  6598  0C5D  0020               	movlb	0	; select bank0
  6599  0C5E  2C6D               	goto	i1l191
  6600  0C5F                     i1l4700:	
  6601  0C5F  0879               	movf	i1LCDGotoXY@y,w
  6602                           
  6603                           ; Switch size 1, requested type "space"
  6604                           ; Number of cases is 4, Range of values is 0 to 3
  6605                           ; switch strategies available:
  6606                           ; Name         Instructions Cycles
  6607                           ; simple_byte           13     7 (average)
  6608                           ; direct_byte           14     6 (fixed)
  6609                           ; jumptable            260     6 (fixed)
  6610                           ;	Chosen strategy is simple_byte
  6611  0C60  3A00               	xorlw	0	; case 0
  6612  0C61  1903               	skipnz
  6613  0C62  2C6D               	goto	i1l191
  6614  0C63  3A01               	xorlw	1	; case 1
  6615  0C64  1903               	skipnz
  6616  0C65  2C55               	goto	i1l192
  6617  0C66  3A03               	xorlw	3	; case 2
  6618  0C67  1903               	skipnz
  6619  0C68  2C57               	goto	i1l4694
  6620  0C69  3A01               	xorlw	1	; case 3
  6621  0C6A  1903               	skipnz
  6622  0C6B  2C59               	goto	i1l4696
  6623  0C6C  2C6D               	goto	i1l191
  6624  0C6D                     i1l191:	
  6625                           
  6626                           ;lcd_hd44780_pic16.c: 399: x|=0b10000000;
  6627  0C6D  17FB               	bsf	i1LCDGotoXY@x,7
  6628                           
  6629                           ;lcd_hd44780_pic16.c: 400: (LCDByte(x,0));
  6630  0C6E  01F2               	clrf	i1LCDByte@isdata
  6631  0C6F  087B               	movf	i1LCDGotoXY@x,w
  6632  0C70  318F  2759         	fcall	i1_LCDByte
  6633  0C72  0008               	return
  6634  0C73                     __end_ofi1_LCDGotoXY:	
  6635                           
  6636                           	psect	text30
  6637  0F59                     __ptext30:	
  6638 ;; *************** function i1_LCDByte *****************
  6639 ;; Defined at:
  6640 ;;		line 82 in file "lcd_hd44780_pic16.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  c               1    wreg     unsigned char 
  6643 ;;  isdata          1    2[COMMON] unsigned char 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  c               1    7[COMMON] unsigned char 
  6646 ;;  LCDByte         1    8[COMMON] unsigned char 
  6647 ;;  LCDByte         1    6[COMMON] unsigned char 
  6648 ;;  LCDByte         1    5[COMMON] unsigned char 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;		None               void
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, pclath, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6658 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;Total ram usage:        7 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    1
  6665 ;; This function calls:
  6666 ;;		i1_LCDBusyLoop
  6667 ;; This function is called by:
  6668 ;;		i1_ShowTime
  6669 ;;		i1_LCDWriteString
  6670 ;;		i1_LCDWriteInt
  6671 ;;		i1_LCDGotoXY
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           
  6676                           ;psect for function i1_LCDByte
  6677  0F59                     i1_LCDByte:	
  6678                           
  6679                           ;incstack = 0
  6680                           ; Regs used in i1_LCDByte: [wreg+status,2+status,0+pclath+cstack]
  6681                           ;i1LCDByte@c stored from wreg
  6682  0F59  00F7               	movwf	i1LCDByte@c
  6683                           
  6684                           ;lcd_hd44780_pic16.c: 91: uint8_t hn,ln;
  6685                           ;lcd_hd44780_pic16.c: 92: uint8_t temp;
  6686                           ;lcd_hd44780_pic16.c: 94: hn=c>>4;
  6687  0F5A  0877               	movf	i1LCDByte@c,w
  6688  0F5B  00F3               	movwf	??i1_LCDByte
  6689  0F5C  3004               	movlw	4
  6690  0F5D                     u540_25:	
  6691  0F5D  36F3               	lsrf	??i1_LCDByte,f
  6692  0F5E  0B89               	decfsz	9,f
  6693  0F5F  2F5D               	goto	u540_25
  6694  0F60  0873               	movf	??i1_LCDByte,w
  6695  0F61  00F4               	movwf	??i1_LCDByte+1
  6696  0F62  0874               	movf	??i1_LCDByte+1,w
  6697  0F63  00F5               	movwf	i1LCDByte@hn
  6698                           
  6699                           ;lcd_hd44780_pic16.c: 95: ln=(c & 0x0F);
  6700  0F64  0877               	movf	i1LCDByte@c,w
  6701  0F65  390F               	andlw	15
  6702  0F66  00F3               	movwf	??i1_LCDByte
  6703  0F67  0873               	movf	??i1_LCDByte,w
  6704  0F68  00F6               	movwf	i1LCDByte@ln
  6705                           
  6706                           ;lcd_hd44780_pic16.c: 97: if(isdata==0)
  6707  0F69  08F2               	movf	i1LCDByte@isdata,f
  6708  0F6A  1903               	btfsc	3,2
  6709  0F6B  2F6E               	goto	i1l4610
  6710  0F6C  0020               	movlb	0	; select bank0
  6711  0F6D  2F71               	goto	i1l148
  6712  0F6E                     i1l4610:	
  6713                           
  6714                           ;lcd_hd44780_pic16.c: 98: (RA0=0);
  6715  0F6E  0020               	movlb	0	; select bank0
  6716  0F6F  100C               	bcf	12,0	;volatile
  6717  0F70  2F73               	goto	i1l149
  6718  0F71                     i1l148:	
  6719                           
  6720                           ;lcd_hd44780_pic16.c: 99: else
  6721                           ;lcd_hd44780_pic16.c: 100: (RA0=1);
  6722  0F71  0020               	movlb	0	; select bank0
  6723  0F72  140C               	bsf	12,0	;volatile
  6724  0F73                     i1l149:	
  6725                           
  6726                           ;lcd_hd44780_pic16.c: 102: _delay((unsigned long)((0.5)*(32000000ULL/4000000.0)));
  6727  0F73  2F74               	nop2	;2 cycle nop
  6728  0F74  2F75               	nop2	;2 cycle nop
  6729                           
  6730                           ;lcd_hd44780_pic16.c: 104: (RA2=1);
  6731  0F75  0020               	movlb	0	; select bank0
  6732  0F76  150C               	bsf	12,2	;volatile
  6733                           
  6734                           ;lcd_hd44780_pic16.c: 108: temp=(PORTC & (~(0X0F<<2)))|((hn<<2));
  6735  0F77  0875               	movf	i1LCDByte@hn,w
  6736  0F78  00F3               	movwf	??i1_LCDByte
  6737  0F79  3002               	movlw	2
  6738  0F7A                     u542_25:	
  6739  0F7A  35F3               	lslf	??i1_LCDByte,f
  6740  0F7B  0B89               	decfsz	9,f
  6741  0F7C  2F7A               	goto	u542_25
  6742  0F7D  080E               	movf	14,w	;volatile
  6743  0F7E  39C3               	andlw	195
  6744  0F7F  0473               	iorwf	??i1_LCDByte,w
  6745  0F80  00F4               	movwf	??i1_LCDByte+1
  6746  0F81  0874               	movf	??i1_LCDByte+1,w
  6747  0F82  00F8               	movwf	i1LCDByte@temp
  6748                           
  6749                           ;lcd_hd44780_pic16.c: 109: PORTC=temp;
  6750  0F83  0878               	movf	i1LCDByte@temp,w
  6751  0F84  008E               	movwf	14	;volatile
  6752                           
  6753                           ;lcd_hd44780_pic16.c: 111: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  6754  0F85  2F86               	nop2	;2 cycle nop
  6755  0F86  2F87               	nop2	;2 cycle nop
  6756  0F87  2F88               	nop2	;2 cycle nop
  6757  0F88  2F89               	nop2	;2 cycle nop
  6758                           
  6759                           ;lcd_hd44780_pic16.c: 115: (RA2=0);
  6760  0F89  0020               	movlb	0	; select bank0
  6761  0F8A  110C               	bcf	12,2	;volatile
  6762                           
  6763                           ;lcd_hd44780_pic16.c: 117: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  6764  0F8B  2F8C               	nop2	;2 cycle nop
  6765  0F8C  2F8D               	nop2	;2 cycle nop
  6766  0F8D  2F8E               	nop2	;2 cycle nop
  6767  0F8E  2F8F               	nop2	;2 cycle nop
  6768                           
  6769                           ;lcd_hd44780_pic16.c: 120: (RA2=1);
  6770  0F8F  0020               	movlb	0	; select bank0
  6771  0F90  150C               	bsf	12,2	;volatile
  6772                           
  6773                           ;lcd_hd44780_pic16.c: 122: temp=(PORTC & (~(0X0F<<2)))|((ln<<2));
  6774  0F91  0876               	movf	i1LCDByte@ln,w
  6775  0F92  00F3               	movwf	??i1_LCDByte
  6776  0F93  3002               	movlw	2
  6777  0F94                     u543_25:	
  6778  0F94  35F3               	lslf	??i1_LCDByte,f
  6779  0F95  0B89               	decfsz	9,f
  6780  0F96  2F94               	goto	u543_25
  6781  0F97  080E               	movf	14,w	;volatile
  6782  0F98  39C3               	andlw	195
  6783  0F99  0473               	iorwf	??i1_LCDByte,w
  6784  0F9A  00F4               	movwf	??i1_LCDByte+1
  6785  0F9B  0874               	movf	??i1_LCDByte+1,w
  6786  0F9C  00F8               	movwf	i1LCDByte@temp
  6787                           
  6788                           ;lcd_hd44780_pic16.c: 124: PORTC=temp;
  6789  0F9D  0878               	movf	i1LCDByte@temp,w
  6790  0F9E  008E               	movwf	14	;volatile
  6791                           
  6792                           ;lcd_hd44780_pic16.c: 126: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  6793  0F9F  2FA0               	nop2	;2 cycle nop
  6794  0FA0  2FA1               	nop2	;2 cycle nop
  6795  0FA1  2FA2               	nop2	;2 cycle nop
  6796  0FA2  2FA3               	nop2	;2 cycle nop
  6797                           
  6798                           ;lcd_hd44780_pic16.c: 130: (RA2=0);
  6799  0FA3  0020               	movlb	0	; select bank0
  6800  0FA4  110C               	bcf	12,2	;volatile
  6801                           
  6802                           ;lcd_hd44780_pic16.c: 132: _delay((unsigned long)((1)*(32000000ULL/4000000.0)));
  6803  0FA5  2FA6               	nop2	;2 cycle nop
  6804  0FA6  2FA7               	nop2	;2 cycle nop
  6805  0FA7  2FA8               	nop2	;2 cycle nop
  6806  0FA8  2FA9               	nop2	;2 cycle nop
  6807                           
  6808                           ;lcd_hd44780_pic16.c: 134: LCDBusyLoop();
  6809  0FA9  318C  240C         	fcall	i1_LCDBusyLoop
  6810  0FAB  0008               	return
  6811  0FAC                     __end_ofi1_LCDByte:	
  6812                           
  6813                           	psect	text31
  6814  0C0C                     __ptext31:	
  6815 ;; *************** function i1_LCDBusyLoop *****************
  6816 ;; Defined at:
  6817 ;;		line 139 in file "lcd_hd44780_pic16.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;		None
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;		None
  6822 ;; Return value:  Size  Location     Type
  6823 ;;		None               void
  6824 ;; Registers used:
  6825 ;;		wreg
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6835 ;;Total ram usage:        2 bytes
  6836 ;; Hardware stack levels used:    1
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		i1_LCDByte
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function i1_LCDBusyLoop
  6846  0C0C                     i1_LCDBusyLoop:	
  6847                           
  6848                           ;lcd_hd44780_pic16.c: 141: _delay((unsigned long)((5)*(32000000ULL/4000.0)));
  6849                           
  6850                           ;incstack = 0
  6851                           ; Regs used in i1_LCDBusyLoop: [wreg]
  6852  0C0C  3034               	movlw	52
  6853  0C0D  00F1               	movwf	??i1_LCDBusyLoop+1
  6854  0C0E  30F1               	movlw	241
  6855  0C0F  00F0               	movwf	??i1_LCDBusyLoop
  6856  0C10                     u568_27:	
  6857  0C10  0BF0               	decfsz	??i1_LCDBusyLoop,f
  6858  0C11  2C10               	goto	u568_27
  6859  0C12  0BF1               	decfsz	??i1_LCDBusyLoop+1,f
  6860  0C13  2C10               	goto	u568_27
  6861  0C14  2C15               	nop2
  6862  0C15  0008               	return
  6863  0C16                     __end_ofi1_LCDBusyLoop:	
  6864                           ;lcd_hd44780_pic16.c: 142: return;
  6865                           
  6866  007E                     btemp	set	126	;btemp
  6867  007E                     wtemp	set	126
  6868  007E                     wtemp0	set	126
  6869  0080                     wtemp1	set	128
  6870  0082                     wtemp2	set	130
  6871  0084                     wtemp3	set	132
  6872  0086                     wtemp4	set	134
  6873  0088                     wtemp5	set	136
  6874  007F                     wtemp6	set	127
  6875  007E                     ttemp	set	126
  6876  007E                     ttemp0	set	126
  6877  0081                     ttemp1	set	129
  6878  0084                     ttemp2	set	132
  6879  0087                     ttemp3	set	135
  6880  007F                     ttemp4	set	127
  6881  007E                     ltemp	set	126
  6882  007E                     ltemp0	set	126
  6883  0082                     ltemp1	set	130
  6884  0086                     ltemp2	set	134
  6885  0080                     ltemp3	set	128


Data Sizes:
    Strings     101
    Constant    2
    Data        65
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      62
    BANK1            80     16      37
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    DS1307_ReadDate@SaveDateTo	PTR volatile unsigned char  size(1) Largest target is 5
		 -> DateArray(BANK0[5]), 

    DS1307_ReadTime@SaveTimeTo	PTR volatile unsigned char  size(1) Largest target is 4
		 -> TimeArray(BANK0[4]), 

    I2C1_WriteFrame@i2c1WritePointer	PTR unsigned char  size(1) Largest target is 5
		 -> DS1307_SetDate@Temp(COMMON[5]), DS1307_SetTime@Temp(BANK1[4]), 

    I2C1_ReadFrame@i2c1ReadPointer	PTR unsigned char  size(1) Largest target is 4
		 -> DS1307_ReadDate@TempI2CRead(BANK1[4]), DS1307_ReadTime@TempI2CRead(BANK1[4]), 

    LCDWriteString@msg	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_17(CODE[16]), STR_16(CODE[16]), STR_15(CODE[2]), STR_14(CODE[2]), 
		 -> STR_13(CODE[2]), STR_12(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[16]), 

    Debug@data	PTR unsigned char  size(1) Largest target is 16
		 -> STR_17(CODE[16]), STR_16(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISRRoutine in COMMON

    i1_ShowTime->i1_LCDWriteInt
    i1_LCDWriteString->i1_LCDByte
    i1_LCDWriteInt->i1_LCDByte
    i1_LCDWriteInt->i1___awdiv
    i1_LCDGotoXY->i1_LCDByte
    i1_LCDByte->i1_LCDBusyLoop

Critical Paths under _main in BANK0

    _main->_DS1307_ReadDate
    _main->_DS1307_ReadTime
    _main->_ShowDate
    _main->_ShowTime
    _ShowTime->_LCDWriteInt
    _ShowDate->_LCDWriteInt
    _LCDWriteInt->_LCDByte
    _LCDWriteInt->___awdiv
    _LCDInit->_LCDByte
    _DS1307_SetTime->___lwdiv
    _DS1307_ReadTime->_Debug
    _DS1307_ReadDate->_Debug
    _Debug->_LCDGotoXY
    _Debug->_LCDWriteString
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISRRoutine in BANK0

    _ISRRoutine->i1_ShowTime
    i1_ShowTime->i1_LCDWriteInt

Critical Paths under _main in BANK1

    _main->_ShowDate
    _main->_ShowTime
    _ShowTime->_LCDWriteInt
    _ShowDate->_LCDWriteInt

Critical Paths under _ISRRoutine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRRoutine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRRoutine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRRoutine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRRoutine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRRoutine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRRoutine in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRRoutine in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRRoutine in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRRoutine in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRRoutine in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRRoutine in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   42830
                                             12 BANK1      4     4      0
                    _DS1307_ReadDate
                    _DS1307_ReadTime
                     _DS1307_SetTime
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                     _LCDWriteString
                        _SetUpDevice
                           _ShowDate
                           _ShowTime
                           _i2c_init
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowTime                                             6     4      2    9197
                                             31 BANK0      3     1      2
                                              9 BANK1      3     3      0
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (1) _ShowDate                                             6     4      2    8877
                                             31 BANK0      3     1      2
                                              9 BANK1      3     3      0
                            _LCDByte
                          _LCDGotoXY
                        _LCDWriteInt
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    3615
                                             26 BANK0      5     2      3
                                              0 BANK1      9     9      0
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     563
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     575
                                             17 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _SetUpDevice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              5     5      0    1399
                                             26 BANK0      5     5      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _DS1307_SetTime                                      17     9      8    4140
                                             25 BANK0      8     0      8
                                              0 BANK1      9     9      0
                    _I2C1_WriteFrame
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1402
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1411
                                             17 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _I2C1_WriteFrame                                      4     2      2     359
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _DS1307_ReadTime                                     11    11      0    7280
                                             30 BANK0      4     4      0
                                              0 BANK1      7     7      0
                              _Debug
                     _I2C1_ReadFrame
                     _I2C1_WriteByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _DS1307_ReadDate                                     11    11      0    7028
                                             30 BANK0      4     4      0
                                              0 BANK1      7     7      0
                              _Debug
                     _I2C1_ReadFrame
                     _I2C1_WriteByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     851
                                             17 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C1_WriteByte                                       2     1      1     192
                                             17 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _I2C1_ReadFrame                                       4     2      2     390
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _Debug                                                1     1      0    5000
                                             29 BANK0      1     1      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
 ---------------------------------------------------------------------------------
 (2) _LCDWriteString                                       3     3      0    2006
                                             26 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDGotoXY                                            3     2      1    1634
                                             26 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDByte                                              7     6      1    1269
                                             19 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (4) _LCDBusyLoop                                          2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISRRoutine                                           2     2      0   12049
                                             15 BANK0      2     2      0
                         i1_ShowTime
 ---------------------------------------------------------------------------------
 (7) i1_ShowTime                                           6     4      2   12049
                                              9 BANK0      6     4      2
                          i1_LCDByte
                        i1_LCDGotoXY
                      i1_LCDWriteInt
                   i1_LCDWriteString
 ---------------------------------------------------------------------------------
 (8) i1_LCDWriteString                                     3     3      0    2187
                                              9 COMMON     3     3      0
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (8) i1_LCDWriteInt                                       14    11      3    6166
                                              9 COMMON     5     2      3
                                              0 BANK0      9     9      0
                          i1_LCDByte
                          i1___awdiv
                          i1___awmod
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4    1402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (9) i1___awdiv                                            9     5      4    1422
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (8) i1_LCDGotoXY                                          3     2      1    1856
                                              9 COMMON     3     2      1
                          i1_LCDByte
 ---------------------------------------------------------------------------------
 (9) i1_LCDByte                                            7     6      1    1468
                                              2 COMMON     7     6      1
                      i1_LCDBusyLoop
 ---------------------------------------------------------------------------------
 (10) i1_LCDBusyLoop                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_ReadDate
     _Debug
       _LCDByte
         _LCDBusyLoop
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
     _I2C1_ReadFrame
     _I2C1_WriteByte
     ___bmul
   _DS1307_ReadTime
     _Debug
       _LCDByte
         _LCDBusyLoop
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
     _I2C1_ReadFrame
     _I2C1_WriteByte
     ___bmul
   _DS1307_SetTime
     _I2C1_WriteFrame
     ___lwdiv
     ___lwmod
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _SetUpDevice
   _ShowDate
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _ShowTime
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
   _i2c_init

 _ISRRoutine (ROOT)
   i1_ShowTime
     i1_LCDByte
       i1_LCDBusyLoop
     i1_LCDGotoXY
       i1_LCDByte
         i1_LCDBusyLoop
     i1_LCDWriteInt
       i1_LCDByte
         i1_LCDBusyLoop
       i1___awdiv
       i1___awmod
     i1_LCDWriteString
       i1_LCDByte
         i1_LCDBusyLoop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      25       7       46.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B1      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B1      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Thu Jul 10 21:11:15 2014

                   ?_LCDBusyLoop 0070               ??i1_LCDWriteString 0079                   ___bmul@product 0033  
                    __CFG_CP$OFF 0000        DS1307_ReadDate@SaveDateTo 00BA                     ___awdiv@sign 0037  
                    __CFG_LVP$ON 0000                              l301 0E77                              l305 0E82  
                            l314 0E98                              l331 0CE1                              l323 0EB1  
                            l148 0F1F                              l149 0F20                              l317 0EA3  
                            l309 0E88                              l181 051B                              l350 0D0C  
                            l342 0CFA                              l318 0E9F                              l191 07F4  
                            l263 06D0                              l335 0CEC                              l192 07DD  
                            l265 06D1                              l345 0D04                              l329 0CE0  
                            l282 06F3                              l274 06E2                              l346 0D00  
                            l283 06F5                              l275 06E5                              l339 0CF2  
                            l276 06EB                              l293 071D                              l269 06DD  
                            l349 0D0A                              l286 070A                              l278 06EF  
                            l287 070C                              l288 070D                              l386 0308  
                            l299 0E76       DS1307_ReadDate@TempI2CRead 00B6                              _RA0 0060  
                            _RA1 0061                              _RA2 0062                     __CFG_CPD$OFF 0000  
                            _dan 004D                     ___awmod@sign 0037                     __CFG_BORV$LO 0000  
                            wreg 0009                     __CFG_IESO$ON 0000          LCDWriteInt@field_length 003C  
                __end_of_LCDByte 0F59                  __end_of_LCDInit 0782                     ?_LCDWriteInt 003A  
                    LCDByte@temp 0039                             l4000 0236                             l4100 030B  
                           l4014 0403                             l4104 0311                             l4106 031F  
                           l4060 0362                             l4052 06B5                             l4142 04F8  
                           l4070 037B                             l4062 0367                             l4038 067F  
                           l4216 0725                             l4208 0717                             l4232 0E7F  
                           l4144 04FD                             l4136 04BC                             l4072 0380  
                           l4064 036C                             l4048 06AB                             l4242 0E8C  
                           l4146 0507                             l4138 04F3                             l4066 0371  
                           l4058 0356                             l4260 0EA9                             l4412 07CF  
                           l4404 07BE                             l4068 0376                             l4076 0385  
                           l4174 06D9                             l4318 0D14                             l4270 0EB9  
                           l4262 0EAB                             l4510 0C92                             l4078 039D  
                           l4504 0C7A                             l4408 07C7                             l4424 0E32  
                           l4506 0C86                             l4514 0C9B                             l4450 0E68  
                           l4442 0E57                             l4460 0C31                             l4380 078D  
                           l4436 0E3F                             l4428 0E39                             l4286 0CE9  
                           l4438 0E4B                             l4446 0E60                             l4296 0CF6  
                           l4456 0C2B                             l4480 0CAB                             l3840 011C  
                           l3824 00CD                             l4482 0CB7                             l4386 0798  
                           l3826 00CE                             l3834 0108                             l3818 00B9  
                           l4492 0CD2                             l4396 07A0                             l4398 07AC  
                           l3846 0128                             l3960 07E1                             l3952 0D9B  
                           l4488 0CC9                             l3848 0129                             l3856 0163  
                           l3946 0DC0                             l3964 07E6                             l3948 0DCF  
                           l3958 07DF                             l3976 019B                             l4768 0317  
                           l3994 0209                             l3996 020F                             STR_1 0624  
                           STR_2 0634                 ??_I2C1_ReadFrame 0033                             STR_3 0603  
                           STR_4 0666                             STR_5 0646                             STR_6 0652  
                           STR_7 0657                             STR_8 064D                             STR_9 065C  
                           u4005 0F41                             u4115 0223                             u4125 024A  
                           u4205 029A                             u5005 0E42                             u4230 04A2  
                           u4215 02CC                             u4145 043B                             u4225 02FE  
                           u5025 0E51                             u4155 0460                             u4075 01C1  
                           u5115 0CB8                             u5035 0E58                             u4165 0486  
                           u4085 01E7                             u5125 0CC2                             u5135 0CCA  
                           u5165 0C7D                             u4285 052A                             u5095 0CAE  
                           u5185 0C8C                             u5195 0C93                             u4905 07A3  
                           u5627 0072                             u4925 07AD                             u5637 0097  
                           u3975 0F0E                             u4935 07B7                             u5647 0101  
                           u4945 07BF                             u5657 015C                             u3995 0F27  
                           u5667 072F                             u5677 05F8                     __CFG_WRT$OFF 0000  
                  __CFG_FCMEN$ON 0000                             _main 005A               __size_of_LCDGotoXY 0024  
                           _sati 0052                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           ltemp 007E                             start 0036                             ttemp 007E  
                           wtemp 007E        i1LCDWriteInt@field_length 007B                ___bmul@multiplier 0034  
                  __CFG_MCLRE$ON 0000               __size_ofi1_LCDByte 0053         __size_of_I2C1_WriteFrame 004C  
                  __CFG_PLLEN$ON 0000                     ?i1_LCDGotoXY 0079                            ?_main 0070  
                 i1___awdiv@sign 0076                  __end_of___awdiv 07D6                            STR_10 0661  
                          STR_11 0643                            STR_12 0648                            STR_13 0632  
                          STR_14 0632                            STR_15 0632                            STR_16 0614  
                          STR_17 0614                    __CFG_WDTE$OFF 0000                  __end_of___awmod 0E6F  
                   LCDInit@style 003D                  ___awdiv@divisor 0031                      ?_ISRRoutine 0070  
                __end_of___lwdiv 0CD9                            i1l127 0033                            i1l148 0F71  
                          i1l149 0F73                            i1l181 05BA                            i1l191 0C6D  
                          i1l192 0C55                  __end_of___lwmod 0CA2                  ___awdiv@counter 0036  
                          _PORTC 000E                            _TRISC 008E                            _Debug 0C16  
                 i1___awmod@sign 0076                            _mesec 0050                 __end_of_RTCStart 0603  
               ??_I2C1_WriteByte 0032                            ltemp0 007E                            ltemp1 0082  
                          ltemp2 0086                            ltemp3 0080                   _DS1307_SetTime 0266  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
                          wtemp0 007E                            wtemp1 0080                            wtemp2 0082  
                          wtemp3 0084                            wtemp4 0086                            wtemp5 0088  
                          wtemp6 007F               __size_ofi1___awdiv 0054               __size_ofi1___awmod 0048  
                    ?i1_ShowTime 0029                  __initialization 0038                     __end_of_main 0183  
               __end_of_i2c_init 0C4F                           ??_main 00C1                    ??_SetUpDevice 0031  
              __end_of_LCDGotoXY 07FA                    LCDByte@isdata 0033                        ??_LCDByte 0034  
                      ??_LCDInit 003A                 __end_of_ShowDate 03E8                           ?_Debug 0070  
               __end_of_ShowTime 06C9                 ___awdiv@dividend 0033                __end_ofi1_LCDByte 0FAC  
         __end_of_DS1307_SetTime 0333                           _ANSELA 018C                           _ANSELC 018E  
         __size_ofi1_LCDBusyLoop 000A                           i1l4610 0F6E                           i1l4700 0C5F  
                         i1l4532 0FC1                           i1l4550 0FE7                           i1l4542 0FC9  
                         i1l4526 0FB6                           i1l4544 0FD5                           i1l4554 0FF0  
                         i1l4570 0DE9                           i1l4642 0D7C                           i1l4722 0EFB  
                         i1l4644 0D89                           i1l4708 0ECE                           i1l4558 0FF8  
                         i1l4582 0DF6                           i1l4574 0DF0                           i1l4670 0594  
                         i1l4718 0EF2                           i1l4584 0E02                           i1l4592 0E17  
                         i1l4648 0D57                           i1l4744 0032                           i1l4674 0599  
                         i1l4738 0025                           i1l4596 0E1F                           i1l4588 0E0E  
                         i1l4676 059E                           i1l4668 0561                           i1l4694 0C57  
                         i1l4678 05A9                           i1l4696 0C59                           i1l4698 0C5D  
                         u540_25 0F5D                           u524_25 0FCC                           u542_25 0F7A  
                         u526_25 0FD6                           u534_25 0DF9                           u543_25 0F94  
                         u527_25 0FE0                           u528_25 0FE8                           u536_25 0E08  
                         u537_25 0E0F                           u553_25 05C9                           u547_20 0D97  
                         u548_20 0549                           u568_27 0C10                           _TMR0IE 005D  
                         _TMR0IF 005A                           _SSPADD 0212              __size_of_ISRRoutine 0032  
                 __CFG_PWRTE$OFF 0000                   _LCDWriteString 0D99                           ___bmul 0C28  
                      ??___awdiv 0035                   __CFG_STVREN$ON 0000                        ??___awmod 0035  
                      ??___lwdiv 0035                        ??___lwmod 0035                           _godina 004F  
         __size_ofi1_LCDWriteInt 009E             __size_of_LCDBusyLoop 000B                 i1LCDWriteInt@val 0079  
               i1LCDWriteInt@str 0020                 ___awdiv@quotient 0038                           _minute 0051  
                ___awmod@divisor 0031                  ___awmod@counter 0036   I2C1_ReadFrame@i2c1SlaveAddress 0034  
                _DS1307_ReadDate 03E8                __end_ofi1___awdiv 1000                __end_ofi1___awmod 0E27  
                _DS1307_ReadTime 0183                ??_I2C1_WriteFrame 0033                     LCDWriteInt@i 00BC  
                   LCDWriteInt@j 00BA              __size_ofi1_ShowTime 004E              __end_of_SetUpDevice 05F3  
                ?_DS1307_SetTime 0039             __size_of_LCDWriteInt 00A7          __end_of__initialization 0057  
         __end_of_LCDWriteString 0DDF                        LCDByte@hn 0036                        LCDByte@ln 0037  
            ___bmul@multiplicand 0031                    __end_of_Debug 0C28                   __pcstackCOMMON 0070  
                   __pidataBANK0 05FE                     __pidataBANK2 0D16                    i1_LCDBusyLoop 0C0C  
                   i1LCDGotoXY@x 007B                     i1LCDGotoXY@y 0079                   _OPTION_REGbits 0095  
           __size_ofi1_LCDGotoXY 0024        __size_ofi1_LCDWriteString 0043                          ??_Debug 003D  
I2C1_WriteFrame@i2c1WritePointer 0031                   i1LCDWriteInt@i 0027                   i1LCDWriteInt@j 0025  
                i1LCDByte@isdata 0072   I2C1_WriteFrame@i2c1FrameLength 0032                    i1_LCDWriteInt 053F  
                     __pbssBANK0 0042                       __pbssBANK1 00A0                        ?_i2c_init 0070  
                ?_LCDWriteString 0070                       __pmaintext 005A                        ?_ShowDate 003F  
                      ?_ShowTime 003F                          ?___bmul 0031                   ?i1_LCDBusyLoop 0070  
        __end_of_DS1307_ReadDate 0498          __end_of_DS1307_ReadTime 0266                       __pintentry 0004  
                        _I2CTime 00B1                      _RefreshTime 0047                     ??_ISRRoutine 002F  
                    _SetUpDevice 05DD               i1___awdiv@dividend 0072                          _LCDByte 0F09  
                        _LCDInit 0727                          _SSP1BUF 0211                          _SSP1MSK 0213  
                 ?i1_LCDWriteInt 0079                       __stringtab 0600              DS1307_ReadDate@Temp 00BB  
                     ??_i2c_init 0031                     ??i1_ShowTime 002B               DS1307_SetTime@Mode 003F  
             DS1307_SetTime@Mins 003B               DS1307_SetTime@Secs 003D                      _Timer0Count 0049  
             DS1307_SetTime@Temp 00BA               __end_of_ISRRoutine 0036               i1___awdiv@quotient 0077  
                     ??_ShowDate 00BE                       ??_ShowTime 00BE                  __size_of___bmul 0012  
                        ___cgram 0120                          ___awdiv 0782                          ___awmod 0E27  
                        ___lwdiv 0CA2                          ___lwmod 0C73                          __ptext1 0C3A  
                        __ptext2 0668                          __ptext3 0333                          __ptext4 0498  
                        __ptext5 0E27                          __ptext6 0782                          __ptext7 05DD  
                        __ptext8 0727                          __ptext9 0266                 ___awmod@dividend 0033  
                      Debug@data 003D                          _sekunde 0053                        _LCDGotoXY 07D6  
             __end_ofi1_ShowTime 0F09                          clrloop0 07FB             end_of_initialization 0057  
                        init_ram 0C06                          initloop 0C07                        i1_LCDByte 0F59  
            DS1307_ReadTime@Temp 00BB                  ??i1_LCDBusyLoop 0070          __size_of_I2C1_ReadFrame 005E  
                _I2C1_WriteFrame 0E6F                 ?_DS1307_ReadDate 0070                 ?_DS1307_ReadTime 0070  
                  ShowDate@clear 0040                        _PORTAbits 000C                LCDWriteString@msg 003C  
               i1_LCDWriteString 0D56                 __CFG_FOSC$INTOSC 0000                 ??_DS1307_SetTime 00B5  
                      _TRISAbits 008C                        _TRISCbits 008E                  ??i1_LCDWriteInt 007C  
                     ?_LCDGotoXY 003A                        i1___awdiv 0FAC                        i1___awmod 0DDF  
                     LCDInit@__i 003E                        _DateArray 0054                       ?i1_LCDByte 0072  
                     LCDGotoXY@x 003C                       LCDGotoXY@y 003A                    ??_LCDBusyLoop 0031  
        __size_of_I2C1_WriteByte 003D                   __end_of___bmul 0C3A            DS1307_ReadDate@result 00B5  
            start_initialization 0038                       ?i1___awdiv 0070                       ?i1___awmod 0070  
                  ??_LCDWriteInt 003D                        _HourBlink 005D                 ??_LCDWriteString 003A  
                  i1LCDByte@temp 0078              _FlagDateTimeChanged 004B          __end_of_I2C1_WriteFrame 0EBB  
         I2C1_WriteByte@i2c1Data 0031                __size_of_i2c_init 0015                        ShowDate@x 0041  
                      ShowDate@y 003F                        _TimeArray 0059             DS1307_SetTime@result 00B9  
                      ShowTime@x 0041                        ShowTime@y 003F                         ??___bmul 0032  
              __size_of_ShowDate 00B5                      __pdataBANK0 005D                      __pdataBANK2 0120  
             i1___awmod@dividend 0072                __size_of_ShowTime 0061                    ??i1_LCDGotoXY 007A  
            DS1307_SetDate@F2867 00A0              __end_of_LCDBusyLoop 05FE                     ?_SetUpDevice 0070  
                       ?_LCDByte 0033                         ?_LCDInit 0070                         LCDByte@c 0038  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00B5  
  I2C1_ReadFrame@i2c1FrameLength 0032                      ??_LCDGotoXY 003B                    ShowTime@clear 0040  
            __end_of__stringdata 0668                      i1LCDByte@hn 0075                      i1LCDByte@ln 0076  
               LCDWriteInt@F2719 0042                      ??i1_LCDByte 0073              __end_of_LCDWriteInt 053F  
               ___lwdiv@dividend 0033                   _I2C1_ReadFrame 06C9                      _danusedmici 004E  
                       ?___awdiv 0031                         ?___awmod 0031                         ?___lwdiv 0031  
                       ?___lwmod 0031                i1___awdiv@divisor 0070                i1___awdiv@counter 0075  
                      __pstrings 0600                   __size_of_Debug 0012              __end_ofi1_LCDGotoXY 0C73  
                    ??i1___awdiv 0074                      ??i1___awmod 0074                 ___lwdiv@quotient 0037  
  I2C1_ReadFrame@i2c1ReadPointer 0031                 ?_I2C1_WriteFrame 0031                        clear_ram0 07FA  
                     _I2C1_STATE 004C           __end_of_I2C1_ReadFrame 0727         __end_ofi1_LCDWriteString 0D99  
                       _PIR2bits 0012                   _I2C1_WriteByte 0CD9                      _LCDBusyLoop 05F3  
                       _SSP1CON1 0215                 LCDWriteString@cc 003B             DS1307_ReadDate@F2872 00A5  
                       _RTCStart 0601                      __stringdata 0603                 __size_of_LCDByte 0050  
               __size_of_LCDInit 005B              DS1307_SetTime@F2848 00AD                      _LCDWriteInt 0498  
                i1ShowTime@clear 002A                         _i2c_init 0C3A              DS1307_SetTime@Hours 0039  
                ?_I2C1_ReadFrame 0031           __end_of_I2C1_WriteByte 0D16                         _ShowDate 0333  
                       _ShowTime 0668            __end_ofi1_LCDBusyLoop 0C16                i1___awmod@divisor 0070  
              i1___awmod@counter 0075                 __size_of___awdiv 0054                 __size_of___awmod 0048  
               __size_of___lwdiv 0037                 __size_of___lwmod 002F               __end_of__stringtab 0601  
                    i1_LCDGotoXY 0C4F   I2C1_WriteByte@i2c1SlaveAddress 0032                       i1LCDByte@c 0077  
       __size_of_DS1307_ReadDate 00B0         __size_of_DS1307_ReadTime 00E3             __size_of_SetUpDevice 0016  
                ___lwdiv@divisor 0031                  ___lwdiv@counter 0036                         __ptext10 0C73  
                       __ptext11 0CA2                         __ptext20 07D6                         __ptext12 0E6F  
                       __ptext21 0F09                         __ptext13 0183                         __ptext30 0F59  
                       __ptext22 05F3                         __ptext14 03E8                         __ptext31 0C0C  
                       __ptext15 0C28                         __ptext24 0EBB                         __ptext16 0CD9  
                       __ptext25 0D56                         __ptext17 06C9                         __ptext26 053F  
                       __ptext18 0C16                         __ptext27 0DDF                         __ptext19 0D99  
                       __ptext28 0FAC                         __ptext29 0C4F                     _SSP1CON1bits 0215  
                   _SSP1CON2bits 0216                     _SSP1CON3bits 0217            __end_ofi1_LCDWriteInt 05DD  
                  __size_of_main 0129            DS1307_ReadTime@result 00B5              i1LCDWriteString@msg 007B  
                ?_I2C1_WriteByte 0031                     _SSP1STATbits 0214                       _INTCONbits 000B  
           DS1307_ReadTime@F2859 00A9       DS1307_ReadTime@TempI2CRead 00B6                         intlevel1 0000  
               ___lwmod@dividend 0033                   LCDWriteInt@val 003A                   LCDWriteInt@str 00B5  
        __size_of_DS1307_SetTime 00CD                __CFG_CLKOUTEN$OFF 0000               i1LCDWriteString@cc 007A  
                     _OSCCONbits 0099                       _ISRRoutine 0004                  ___lwmod@divisor 0031  
      DS1307_ReadTime@SaveTimeTo 00BA                  ___lwmod@counter 0036                ??_DS1307_ReadDate 003E  
              ??_DS1307_ReadTime 003E  I2C1_WriteFrame@i2c1SlaveAddress 0034                      i1ShowTime@x 002E  
                    i1ShowTime@y 0029                       i1_ShowTime 0EBB                ?i1_LCDWriteString 0070  
        __size_of_LCDWriteString 0046  
